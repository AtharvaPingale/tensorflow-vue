function lS(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();/**
* @vue/shared v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Oh(n,e){const t=new Set(n.split(","));return e?s=>t.has(s.toLowerCase()):s=>t.has(s)}const et={},Eo=[],bn=()=>{},uS=()=>!1,ru=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),Dh=n=>n.startsWith("onUpdate:"),St=Object.assign,Fh=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},dS=Object.prototype.hasOwnProperty,Le=(n,e)=>dS.call(n,e),_e=Array.isArray,_o=n=>ou(n)==="[object Map]",l0=n=>ou(n)==="[object Set]",ke=n=>typeof n=="function",bt=n=>typeof n=="string",aa=n=>typeof n=="symbol",ot=n=>n!==null&&typeof n=="object",u0=n=>(ot(n)||ke(n))&&ke(n.then)&&ke(n.catch),d0=Object.prototype.toString,ou=n=>d0.call(n),pS=n=>ou(n).slice(8,-1),p0=n=>ou(n)==="[object Object]",Ph=n=>bt(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,La=Oh(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),au=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},fS=/-(\w)/g,Lo=au(n=>n.replace(fS,(e,t)=>t?t.toUpperCase():"")),hS=/\B([A-Z])/g,ia=au(n=>n.replace(hS,"-$1").toLowerCase()),f0=au(n=>n.charAt(0).toUpperCase()+n.slice(1)),Gp=au(n=>n?`on${f0(n)}`:""),Xs=(n,e)=>!Object.is(n,e),Hp=(n,e)=>{for(let t=0;t<n.length;t++)n[t](e)},El=(n,e,t)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,value:t})},mS=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let My;const h0=()=>My||(My=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Lh(n){if(_e(n)){const e={};for(let t=0;t<n.length;t++){const s=n[t],r=bt(s)?xS(s):Lh(s);if(r)for(const o in r)e[o]=r[o]}return e}else if(bt(n)||ot(n))return n}const gS=/;(?![^(]*\))/g,yS=/:([^]+)/,bS=/\/\*[^]*?\*\//g;function xS(n){const e={};return n.replace(bS,"").split(gS).forEach(t=>{if(t){const s=t.split(yS);s.length>1&&(e[s[0].trim()]=s[1].trim())}}),e}function Vh(n){let e="";if(bt(n))e=n;else if(_e(n))for(let t=0;t<n.length;t++){const s=Vh(n[t]);s&&(e+=s+" ")}else if(ot(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const wS="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",vS=Oh(wS);function m0(n){return!!n||n===""}const $S=n=>bt(n)?n:n==null?"":_e(n)||ot(n)&&(n.toString===d0||!ke(n.toString))?JSON.stringify(n,g0,2):String(n),g0=(n,e)=>e&&e.__v_isRef?g0(n,e.value):_o(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[s,r],o)=>(t[jp(s,o)+" =>"]=r,t),{})}:l0(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>jp(t))}:aa(e)?jp(e):ot(e)&&!_e(e)&&!p0(e)?String(e):e,jp=(n,e="")=>{var t;return aa(n)?`Symbol(${(t=n.description)!=null?t:e})`:n};/**
* @vue/reactivity v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let An;class CS{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=An,!e&&An&&(this.index=(An.scopes||(An.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=An;try{return An=this,e()}finally{An=t}}}on(){An=this}off(){An=this.parent}stop(e){if(this._active){let t,s;for(t=0,s=this.effects.length;t<s;t++)this.effects[t].stop();for(t=0,s=this.cleanups.length;t<s;t++)this.cleanups[t]();if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function NS(n,e=An){e&&e.active&&e.effects.push(n)}function TS(){return An}let Pr;class Mh{constructor(e,t,s,r){this.fn=e,this.trigger=t,this.scheduler=s,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,NS(this,r)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,no();for(let e=0;e<this._depsLength;e++){const t=this.deps[e];if(t.computed&&(SS(t.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),so()}return this._dirtyLevel>=4}set dirty(e){this._dirtyLevel=e?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let e=js,t=Pr;try{return js=!0,Pr=this,this._runnings++,By(this),this.fn()}finally{Wy(this),this._runnings--,Pr=t,js=e}}stop(){var e;this.active&&(By(this),Wy(this),(e=this.onStop)==null||e.call(this),this.active=!1)}}function SS(n){return n.value}function By(n){n._trackId++,n._depsLength=0}function Wy(n){if(n.deps.length>n._depsLength){for(let e=n._depsLength;e<n.deps.length;e++)y0(n.deps[e],n);n.deps.length=n._depsLength}}function y0(n,e){const t=n.get(e);t!==void 0&&e._trackId!==t&&(n.delete(e),n.size===0&&n.cleanup())}let js=!0,If=0;const b0=[];function no(){b0.push(js),js=!1}function so(){const n=b0.pop();js=n===void 0?!0:n}function Bh(){If++}function Wh(){for(If--;!If&&kf.length;)kf.shift()()}function x0(n,e,t){if(e.get(n)!==n._trackId){e.set(n,n._trackId);const s=n.deps[n._depsLength];s!==e?(s&&y0(s,n),n.deps[n._depsLength++]=e):n._depsLength++}}const kf=[];function w0(n,e,t){Bh();for(const s of n.keys()){let r;s._dirtyLevel<e&&(r??(r=n.get(s)===s._trackId))&&(s._shouldSchedule||(s._shouldSchedule=s._dirtyLevel===0),s._dirtyLevel=e),s._shouldSchedule&&(r??(r=n.get(s)===s._trackId))&&(s.trigger(),(!s._runnings||s.allowRecurse)&&s._dirtyLevel!==2&&(s._shouldSchedule=!1,s.scheduler&&kf.push(s.scheduler)))}Wh()}const v0=(n,e)=>{const t=new Map;return t.cleanup=n,t.computed=e,t},Af=new WeakMap,Lr=Symbol(""),Rf=Symbol("");function nn(n,e,t){if(js&&Pr){let s=Af.get(n);s||Af.set(n,s=new Map);let r=s.get(t);r||s.set(t,r=v0(()=>s.delete(t))),x0(Pr,r)}}function gs(n,e,t,s,r,o){const a=Af.get(n);if(!a)return;let i=[];if(e==="clear")i=[...a.values()];else if(t==="length"&&_e(n)){const c=Number(s);a.forEach((l,u)=>{(u==="length"||!aa(u)&&u>=c)&&i.push(l)})}else switch(t!==void 0&&i.push(a.get(t)),e){case"add":_e(n)?Ph(t)&&i.push(a.get("length")):(i.push(a.get(Lr)),_o(n)&&i.push(a.get(Rf)));break;case"delete":_e(n)||(i.push(a.get(Lr)),_o(n)&&i.push(a.get(Rf)));break;case"set":_o(n)&&i.push(a.get(Lr));break}Bh();for(const c of i)c&&w0(c,4);Wh()}const ES=Oh("__proto__,__v_isRef,__isVue"),$0=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(aa)),zy=_S();function _S(){const n={};return["includes","indexOf","lastIndexOf"].forEach(e=>{n[e]=function(...t){const s=Be(this);for(let o=0,a=this.length;o<a;o++)nn(s,"get",o+"");const r=s[e](...t);return r===-1||r===!1?s[e](...t.map(Be)):r}}),["push","pop","shift","unshift","splice"].forEach(e=>{n[e]=function(...t){no(),Bh();const s=Be(this)[e].apply(this,t);return Wh(),so(),s}}),n}function IS(n){const e=Be(this);return nn(e,"has",n),e.hasOwnProperty(n)}class C0{constructor(e=!1,t=!1){this._isReadonly=e,this._shallow=t}get(e,t,s){const r=this._isReadonly,o=this._shallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return o;if(t==="__v_raw")return s===(r?o?zS:E0:o?S0:T0).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(s)?e:void 0;const a=_e(e);if(!r){if(a&&Le(zy,t))return Reflect.get(zy,t,s);if(t==="hasOwnProperty")return IS}const i=Reflect.get(e,t,s);return(aa(t)?$0.has(t):ES(t))||(r||nn(e,"get",t),o)?i:sn(i)?a&&Ph(t)?i:i.value:ot(i)?r?_0(i):Gh(i):i}}class N0 extends C0{constructor(e=!1){super(!1,e)}set(e,t,s,r){let o=e[t];if(!this._shallow){const c=Vo(o);if(!_l(s)&&!Vo(s)&&(o=Be(o),s=Be(s)),!_e(e)&&sn(o)&&!sn(s))return c?!1:(o.value=s,!0)}const a=_e(e)&&Ph(t)?Number(t)<e.length:Le(e,t),i=Reflect.set(e,t,s,r);return e===Be(r)&&(a?Xs(s,o)&&gs(e,"set",t,s):gs(e,"add",t,s)),i}deleteProperty(e,t){const s=Le(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&s&&gs(e,"delete",t,void 0),r}has(e,t){const s=Reflect.has(e,t);return(!aa(t)||!$0.has(t))&&nn(e,"has",t),s}ownKeys(e){return nn(e,"iterate",_e(e)?"length":Lr),Reflect.ownKeys(e)}}class kS extends C0{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const AS=new N0,RS=new kS,OS=new N0(!0),zh=n=>n,iu=n=>Reflect.getPrototypeOf(n);function Hc(n,e,t=!1,s=!1){n=n.__v_raw;const r=Be(n),o=Be(e);t||(Xs(e,o)&&nn(r,"get",e),nn(r,"get",o));const{has:a}=iu(r),i=s?zh:t?jh:Ua;if(a.call(r,e))return i(n.get(e));if(a.call(r,o))return i(n.get(o));n!==r&&n.get(e)}function jc(n,e=!1){const t=this.__v_raw,s=Be(t),r=Be(n);return e||(Xs(n,r)&&nn(s,"has",n),nn(s,"has",r)),n===r?t.has(n):t.has(n)||t.has(r)}function Kc(n,e=!1){return n=n.__v_raw,!e&&nn(Be(n),"iterate",Lr),Reflect.get(n,"size",n)}function Uy(n){n=Be(n);const e=Be(this);return iu(e).has.call(e,n)||(e.add(n),gs(e,"add",n,n)),this}function Gy(n,e){e=Be(e);const t=Be(this),{has:s,get:r}=iu(t);let o=s.call(t,n);o||(n=Be(n),o=s.call(t,n));const a=r.call(t,n);return t.set(n,e),o?Xs(e,a)&&gs(t,"set",n,e):gs(t,"add",n,e),this}function Hy(n){const e=Be(this),{has:t,get:s}=iu(e);let r=t.call(e,n);r||(n=Be(n),r=t.call(e,n)),s&&s.call(e,n);const o=e.delete(n);return r&&gs(e,"delete",n,void 0),o}function jy(){const n=Be(this),e=n.size!==0,t=n.clear();return e&&gs(n,"clear",void 0,void 0),t}function qc(n,e){return function(s,r){const o=this,a=o.__v_raw,i=Be(a),c=e?zh:n?jh:Ua;return!n&&nn(i,"iterate",Lr),a.forEach((l,u)=>s.call(r,c(l),c(u),o))}}function Xc(n,e,t){return function(...s){const r=this.__v_raw,o=Be(r),a=_o(o),i=n==="entries"||n===Symbol.iterator&&a,c=n==="keys"&&a,l=r[n](...s),u=t?zh:e?jh:Ua;return!e&&nn(o,"iterate",c?Rf:Lr),{next(){const{value:d,done:p}=l.next();return p?{value:d,done:p}:{value:i?[u(d[0]),u(d[1])]:u(d),done:p}},[Symbol.iterator](){return this}}}}function Ps(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function DS(){const n={get(o){return Hc(this,o)},get size(){return Kc(this)},has:jc,add:Uy,set:Gy,delete:Hy,clear:jy,forEach:qc(!1,!1)},e={get(o){return Hc(this,o,!1,!0)},get size(){return Kc(this)},has:jc,add:Uy,set:Gy,delete:Hy,clear:jy,forEach:qc(!1,!0)},t={get(o){return Hc(this,o,!0)},get size(){return Kc(this,!0)},has(o){return jc.call(this,o,!0)},add:Ps("add"),set:Ps("set"),delete:Ps("delete"),clear:Ps("clear"),forEach:qc(!0,!1)},s={get(o){return Hc(this,o,!0,!0)},get size(){return Kc(this,!0)},has(o){return jc.call(this,o,!0)},add:Ps("add"),set:Ps("set"),delete:Ps("delete"),clear:Ps("clear"),forEach:qc(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{n[o]=Xc(o,!1,!1),t[o]=Xc(o,!0,!1),e[o]=Xc(o,!1,!0),s[o]=Xc(o,!0,!0)}),[n,t,e,s]}const[FS,PS,LS,VS]=DS();function Uh(n,e){const t=e?n?VS:LS:n?PS:FS;return(s,r,o)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?s:Reflect.get(Le(t,r)&&r in s?t:s,r,o)}const MS={get:Uh(!1,!1)},BS={get:Uh(!1,!0)},WS={get:Uh(!0,!1)},T0=new WeakMap,S0=new WeakMap,E0=new WeakMap,zS=new WeakMap;function US(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function GS(n){return n.__v_skip||!Object.isExtensible(n)?0:US(pS(n))}function Gh(n){return Vo(n)?n:Hh(n,!1,AS,MS,T0)}function HS(n){return Hh(n,!1,OS,BS,S0)}function _0(n){return Hh(n,!0,RS,WS,E0)}function Hh(n,e,t,s,r){if(!ot(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const o=r.get(n);if(o)return o;const a=GS(n);if(a===0)return n;const i=new Proxy(n,a===2?s:t);return r.set(n,i),i}function Io(n){return Vo(n)?Io(n.__v_raw):!!(n&&n.__v_isReactive)}function Vo(n){return!!(n&&n.__v_isReadonly)}function _l(n){return!!(n&&n.__v_isShallow)}function I0(n){return Io(n)||Vo(n)}function Be(n){const e=n&&n.__v_raw;return e?Be(e):n}function k0(n){return Object.isExtensible(n)&&El(n,"__v_skip",!0),n}const Ua=n=>ot(n)?Gh(n):n,jh=n=>ot(n)?_0(n):n;class A0{constructor(e,t,s,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Mh(()=>e(this._value),()=>gl(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=s}get value(){const e=Be(this);return(!e._cacheable||e.effect.dirty)&&Xs(e._value,e._value=e.effect.run())&&gl(e,4),R0(e),e.effect._dirtyLevel>=2&&gl(e,2),e._value}set value(e){this._setter(e)}get _dirty(){return this.effect.dirty}set _dirty(e){this.effect.dirty=e}}function jS(n,e,t=!1){let s,r;const o=ke(n);return o?(s=n,r=bn):(s=n.get,r=n.set),new A0(s,r,o||!r,t)}function R0(n){var e;js&&Pr&&(n=Be(n),x0(Pr,(e=n.dep)!=null?e:n.dep=v0(()=>n.dep=void 0,n instanceof A0?n:void 0)))}function gl(n,e=4,t){n=Be(n);const s=n.dep;s&&w0(s,e)}function sn(n){return!!(n&&n.__v_isRef===!0)}function Na(n){return KS(n,!1)}function KS(n,e){return sn(n)?n:new qS(n,e)}class qS{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:Be(e),this._value=t?e:Ua(e)}get value(){return R0(this),this._value}set value(e){const t=this.__v_isShallow||_l(e)||Vo(e);e=t?e:Be(e),Xs(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:Ua(e),gl(this,4))}}function XS(n){return sn(n)?n.value:n}const YS={get:(n,e,t)=>XS(Reflect.get(n,e,t)),set:(n,e,t,s)=>{const r=n[e];return sn(r)&&!sn(t)?(r.value=t,!0):Reflect.set(n,e,t,s)}};function O0(n){return Io(n)?n:new Proxy(n,YS)}/**
* @vue/runtime-core v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Ks(n,e,t,s){try{return s?n(...s):n()}catch(r){cu(r,e,t)}}function Ln(n,e,t,s){if(ke(n)){const o=Ks(n,e,t,s);return o&&u0(o)&&o.catch(a=>{cu(a,e,t)}),o}const r=[];for(let o=0;o<n.length;o++)r.push(Ln(n[o],e,t,s));return r}function cu(n,e,t,s=!0){const r=e?e.vnode:null;if(e){let o=e.parent;const a=e.proxy,i=`https://vuejs.org/error-reference/#runtime-${t}`;for(;o;){const l=o.ec;if(l){for(let u=0;u<l.length;u++)if(l[u](n,a,i)===!1)return}o=o.parent}const c=e.appContext.config.errorHandler;if(c){Ks(c,null,10,[n,a,i]);return}}QS(n,t,r,s)}function QS(n,e,t,s=!0){console.error(n)}let Ga=!1,Of=!1;const At=[];let qn=0;const ko=[];let Vs=null,Sr=0;const D0=Promise.resolve();let Kh=null;function ZS(n){const e=Kh||D0;return n?e.then(this?n.bind(this):n):e}function JS(n){let e=qn+1,t=At.length;for(;e<t;){const s=e+t>>>1,r=At[s],o=Ha(r);o<n||o===n&&r.pre?e=s+1:t=s}return e}function qh(n){(!At.length||!At.includes(n,Ga&&n.allowRecurse?qn+1:qn))&&(n.id==null?At.push(n):At.splice(JS(n.id),0,n),F0())}function F0(){!Ga&&!Of&&(Of=!0,Kh=D0.then(L0))}function eE(n){const e=At.indexOf(n);e>qn&&At.splice(e,1)}function tE(n){_e(n)?ko.push(...n):(!Vs||!Vs.includes(n,n.allowRecurse?Sr+1:Sr))&&ko.push(n),F0()}function Ky(n,e,t=Ga?qn+1:0){for(;t<At.length;t++){const s=At[t];if(s&&s.pre){if(n&&s.id!==n.uid)continue;At.splice(t,1),t--,s()}}}function P0(n){if(ko.length){const e=[...new Set(ko)].sort((t,s)=>Ha(t)-Ha(s));if(ko.length=0,Vs){Vs.push(...e);return}for(Vs=e,Sr=0;Sr<Vs.length;Sr++)Vs[Sr]();Vs=null,Sr=0}}const Ha=n=>n.id==null?1/0:n.id,nE=(n,e)=>{const t=Ha(n)-Ha(e);if(t===0){if(n.pre&&!e.pre)return-1;if(e.pre&&!n.pre)return 1}return t};function L0(n){Of=!1,Ga=!0,At.sort(nE);try{for(qn=0;qn<At.length;qn++){const e=At[qn];e&&e.active!==!1&&Ks(e,null,14)}}finally{qn=0,At.length=0,P0(),Ga=!1,Kh=null,(At.length||ko.length)&&L0()}}function sE(n,e,...t){if(n.isUnmounted)return;const s=n.vnode.props||et;let r=t;const o=e.startsWith("update:"),a=o&&e.slice(7);if(a&&a in s){const u=`${a==="modelValue"?"model":a}Modifiers`,{number:d,trim:p}=s[u]||et;p&&(r=t.map(f=>bt(f)?f.trim():f)),d&&(r=t.map(mS))}let i,c=s[i=Gp(e)]||s[i=Gp(Lo(e))];!c&&o&&(c=s[i=Gp(ia(e))]),c&&Ln(c,n,6,r);const l=s[i+"Once"];if(l){if(!n.emitted)n.emitted={};else if(n.emitted[i])return;n.emitted[i]=!0,Ln(l,n,6,r)}}function V0(n,e,t=!1){const s=e.emitsCache,r=s.get(n);if(r!==void 0)return r;const o=n.emits;let a={},i=!1;if(!ke(n)){const c=l=>{const u=V0(l,e,!0);u&&(i=!0,St(a,u))};!t&&e.mixins.length&&e.mixins.forEach(c),n.extends&&c(n.extends),n.mixins&&n.mixins.forEach(c)}return!o&&!i?(ot(n)&&s.set(n,null),null):(_e(o)?o.forEach(c=>a[c]=null):St(a,o),ot(n)&&s.set(n,a),a)}function lu(n,e){return!n||!ru(e)?!1:(e=e.slice(2).replace(/Once$/,""),Le(n,e[0].toLowerCase()+e.slice(1))||Le(n,ia(e))||Le(n,e))}let Xn=null,M0=null;function Il(n){const e=Xn;return Xn=n,M0=n&&n.type.__scopeId||null,e}function rE(n,e=Xn,t){if(!e||n._n)return n;const s=(...r)=>{s._d&&sb(-1);const o=Il(e);let a;try{a=n(...r)}finally{Il(o),s._d&&sb(1)}return a};return s._n=!0,s._c=!0,s._d=!0,s}function Kp(n){const{type:e,vnode:t,proxy:s,withProxy:r,props:o,propsOptions:[a],slots:i,attrs:c,emit:l,render:u,renderCache:d,data:p,setupState:f,ctx:h,inheritAttrs:g}=n;let m,y;const b=Il(n);try{if(t.shapeFlag&4){const x=r||s,$=x;m=Kn(u.call($,x,d,o,f,p,h)),y=c}else{const x=e;m=Kn(x.length>1?x(o,{attrs:c,slots:i,emit:l}):x(o,null)),y=e.props?c:oE(c)}}catch(x){Ba.length=0,cu(x,n,1),m=ys(zr)}let v=m;if(y&&g!==!1){const x=Object.keys(y),{shapeFlag:$}=v;x.length&&$&7&&(a&&x.some(Dh)&&(y=aE(y,a)),v=Mo(v,y))}return t.dirs&&(v=Mo(v),v.dirs=v.dirs?v.dirs.concat(t.dirs):t.dirs),t.transition&&(v.transition=t.transition),m=v,Il(b),m}const oE=n=>{let e;for(const t in n)(t==="class"||t==="style"||ru(t))&&((e||(e={}))[t]=n[t]);return e},aE=(n,e)=>{const t={};for(const s in n)(!Dh(s)||!(s.slice(9)in e))&&(t[s]=n[s]);return t};function iE(n,e,t){const{props:s,children:r,component:o}=n,{props:a,children:i,patchFlag:c}=e,l=o.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&c>=0){if(c&1024)return!0;if(c&16)return s?qy(s,a,l):!!a;if(c&8){const u=e.dynamicProps;for(let d=0;d<u.length;d++){const p=u[d];if(a[p]!==s[p]&&!lu(l,p))return!0}}}else return(r||i)&&(!i||!i.$stable)?!0:s===a?!1:s?a?qy(s,a,l):!0:!!a;return!1}function qy(n,e,t){const s=Object.keys(e);if(s.length!==Object.keys(n).length)return!0;for(let r=0;r<s.length;r++){const o=s[r];if(e[o]!==n[o]&&!lu(t,o))return!0}return!1}function cE({vnode:n,parent:e},t){for(;e;){const s=e.subTree;if(s.suspense&&s.suspense.activeBranch===n&&(s.el=n.el),s===n)(n=e.vnode).el=t,e=e.parent;else break}}const lE=Symbol.for("v-ndc"),uE=n=>n.__isSuspense;function dE(n,e){e&&e.pendingBranch?_e(n)?e.effects.push(...n):e.effects.push(n):tE(n)}const pE=Symbol.for("v-scx"),fE=()=>bl(pE),Yc={};function qp(n,e,t){return B0(n,e,t)}function B0(n,e,{immediate:t,deep:s,flush:r,once:o,onTrack:a,onTrigger:i}=et){if(e&&o){const C=e;e=(...S)=>{C(...S),$()}}const c=Bt,l=C=>s===!0?C:No(C,s===!1?1:void 0);let u,d=!1,p=!1;if(sn(n)?(u=()=>n.value,d=_l(n)):Io(n)?(u=()=>l(n),d=!0):_e(n)?(p=!0,d=n.some(C=>Io(C)||_l(C)),u=()=>n.map(C=>{if(sn(C))return C.value;if(Io(C))return l(C);if(ke(C))return Ks(C,c,2)})):ke(n)?e?u=()=>Ks(n,c,2):u=()=>(f&&f(),Ln(n,c,3,[h])):u=bn,e&&s){const C=u;u=()=>No(C())}let f,h=C=>{f=v.onStop=()=>{Ks(C,c,4),f=v.onStop=void 0}},g;if(fu)if(h=bn,e?t&&Ln(e,c,3,[u(),p?[]:void 0,h]):u(),r==="sync"){const C=fE();g=C.__watcherHandles||(C.__watcherHandles=[])}else return bn;let m=p?new Array(n.length).fill(Yc):Yc;const y=()=>{if(!(!v.active||!v.dirty))if(e){const C=v.run();(s||d||(p?C.some((S,E)=>Xs(S,m[E])):Xs(C,m)))&&(f&&f(),Ln(e,c,3,[C,m===Yc?void 0:p&&m[0]===Yc?[]:m,h]),m=C)}else v.run()};y.allowRecurse=!!e;let b;r==="sync"?b=y:r==="post"?b=()=>qt(y,c&&c.suspense):(y.pre=!0,c&&(y.id=c.uid),b=()=>qh(y));const v=new Mh(u,bn,b),x=TS(),$=()=>{v.stop(),x&&Fh(x.effects,v)};return e?t?y():m=v.run():r==="post"?qt(v.run.bind(v),c&&c.suspense):v.run(),g&&g.push($),$}function hE(n,e,t){const s=this.proxy,r=bt(n)?n.includes(".")?W0(s,n):()=>s[n]:n.bind(s,s);let o;ke(e)?o=e:(o=e.handler,t=e);const a=hi(this),i=B0(r,o.bind(s),t);return a(),i}function W0(n,e){const t=e.split(".");return()=>{let s=n;for(let r=0;r<t.length&&s;r++)s=s[t[r]];return s}}function No(n,e,t=0,s){if(!ot(n)||n.__v_skip)return n;if(e&&e>0){if(t>=e)return n;t++}if(s=s||new Set,s.has(n))return n;if(s.add(n),sn(n))No(n.value,e,t,s);else if(_e(n))for(let r=0;r<n.length;r++)No(n[r],e,t,s);else if(l0(n)||_o(n))n.forEach(r=>{No(r,e,t,s)});else if(p0(n))for(const r in n)No(n[r],e,t,s);return n}function vr(n,e,t,s){const r=n.dirs,o=e&&e.dirs;for(let a=0;a<r.length;a++){const i=r[a];o&&(i.oldValue=o[a].value);let c=i.dir[s];c&&(no(),Ln(c,t,8,[n.el,i,n,e]),so())}}/*! #__NO_SIDE_EFFECTS__ */function mE(n,e){return ke(n)?St({name:n.name},e,{setup:n}):n}const yl=n=>!!n.type.__asyncLoader,z0=n=>n.type.__isKeepAlive;function gE(n,e){U0(n,"a",e)}function yE(n,e){U0(n,"da",e)}function U0(n,e,t=Bt){const s=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(uu(e,s,t),t){let r=t.parent;for(;r&&r.parent;)z0(r.parent.vnode)&&bE(s,e,t,r),r=r.parent}}function bE(n,e,t,s){const r=uu(e,n,s,!0);H0(()=>{Fh(s[e],r)},t)}function uu(n,e,t=Bt,s=!1){if(t){const r=t[n]||(t[n]=[]),o=e.__weh||(e.__weh=(...a)=>{if(t.isUnmounted)return;no();const i=hi(t),c=Ln(e,t,n,a);return i(),so(),c});return s?r.unshift(o):r.push(o),o}}const Es=n=>(e,t=Bt)=>(!fu||n==="sp")&&uu(n,(...s)=>e(...s),t),xE=Es("bm"),G0=Es("m"),wE=Es("bu"),vE=Es("u"),$E=Es("bum"),H0=Es("um"),CE=Es("sp"),NE=Es("rtg"),TE=Es("rtc");function SE(n,e=Bt){uu("ec",n,e)}const Df=n=>n?sw(n)?Zh(n)||n.proxy:Df(n.parent):null,Va=St(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>Df(n.parent),$root:n=>Df(n.root),$emit:n=>n.emit,$options:n=>Xh(n),$forceUpdate:n=>n.f||(n.f=()=>{n.effect.dirty=!0,qh(n.update)}),$nextTick:n=>n.n||(n.n=ZS.bind(n.proxy)),$watch:n=>hE.bind(n)}),Xp=(n,e)=>n!==et&&!n.__isScriptSetup&&Le(n,e),EE={get({_:n},e){const{ctx:t,setupState:s,data:r,props:o,accessCache:a,type:i,appContext:c}=n;let l;if(e[0]!=="$"){const f=a[e];if(f!==void 0)switch(f){case 1:return s[e];case 2:return r[e];case 4:return t[e];case 3:return o[e]}else{if(Xp(s,e))return a[e]=1,s[e];if(r!==et&&Le(r,e))return a[e]=2,r[e];if((l=n.propsOptions[0])&&Le(l,e))return a[e]=3,o[e];if(t!==et&&Le(t,e))return a[e]=4,t[e];Ff&&(a[e]=0)}}const u=Va[e];let d,p;if(u)return e==="$attrs"&&nn(n,"get",e),u(n);if((d=i.__cssModules)&&(d=d[e]))return d;if(t!==et&&Le(t,e))return a[e]=4,t[e];if(p=c.config.globalProperties,Le(p,e))return p[e]},set({_:n},e,t){const{data:s,setupState:r,ctx:o}=n;return Xp(r,e)?(r[e]=t,!0):s!==et&&Le(s,e)?(s[e]=t,!0):Le(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(o[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:s,appContext:r,propsOptions:o}},a){let i;return!!t[a]||n!==et&&Le(n,a)||Xp(e,a)||(i=o[0])&&Le(i,a)||Le(s,a)||Le(Va,a)||Le(r.config.globalProperties,a)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:Le(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function Xy(n){return _e(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let Ff=!0;function _E(n){const e=Xh(n),t=n.proxy,s=n.ctx;Ff=!1,e.beforeCreate&&Yy(e.beforeCreate,n,"bc");const{data:r,computed:o,methods:a,watch:i,provide:c,inject:l,created:u,beforeMount:d,mounted:p,beforeUpdate:f,updated:h,activated:g,deactivated:m,beforeDestroy:y,beforeUnmount:b,destroyed:v,unmounted:x,render:$,renderTracked:C,renderTriggered:S,errorCaptured:E,serverPrefetch:R,expose:A,inheritAttrs:D,components:L,directives:F,filters:B}=e;if(l&&IE(l,s,null),a)for(const z in a){const M=a[z];ke(M)&&(s[z]=M.bind(t))}if(r){const z=r.call(t,t);ot(z)&&(n.data=Gh(z))}if(Ff=!0,o)for(const z in o){const M=o[z],j=ke(M)?M.bind(t,t):ke(M.get)?M.get.bind(t,t):bn,J=!ke(M)&&ke(M.set)?M.set.bind(t):bn,Z=c_({get:j,set:J});Object.defineProperty(s,z,{enumerable:!0,configurable:!0,get:()=>Z.value,set:ee=>Z.value=ee})}if(i)for(const z in i)j0(i[z],s,t,z);if(c){const z=ke(c)?c.call(t):c;Reflect.ownKeys(z).forEach(M=>{FE(M,z[M])})}u&&Yy(u,n,"c");function V(z,M){_e(M)?M.forEach(j=>z(j.bind(t))):M&&z(M.bind(t))}if(V(xE,d),V(G0,p),V(wE,f),V(vE,h),V(gE,g),V(yE,m),V(SE,E),V(TE,C),V(NE,S),V($E,b),V(H0,x),V(CE,R),_e(A))if(A.length){const z=n.exposed||(n.exposed={});A.forEach(M=>{Object.defineProperty(z,M,{get:()=>t[M],set:j=>t[M]=j})})}else n.exposed||(n.exposed={});$&&n.render===bn&&(n.render=$),D!=null&&(n.inheritAttrs=D),L&&(n.components=L),F&&(n.directives=F)}function IE(n,e,t=bn){_e(n)&&(n=Pf(n));for(const s in n){const r=n[s];let o;ot(r)?"default"in r?o=bl(r.from||s,r.default,!0):o=bl(r.from||s):o=bl(r),sn(o)?Object.defineProperty(e,s,{enumerable:!0,configurable:!0,get:()=>o.value,set:a=>o.value=a}):e[s]=o}}function Yy(n,e,t){Ln(_e(n)?n.map(s=>s.bind(e.proxy)):n.bind(e.proxy),e,t)}function j0(n,e,t,s){const r=s.includes(".")?W0(t,s):()=>t[s];if(bt(n)){const o=e[n];ke(o)&&qp(r,o)}else if(ke(n))qp(r,n.bind(t));else if(ot(n))if(_e(n))n.forEach(o=>j0(o,e,t,s));else{const o=ke(n.handler)?n.handler.bind(t):e[n.handler];ke(o)&&qp(r,o,n)}}function Xh(n){const e=n.type,{mixins:t,extends:s}=e,{mixins:r,optionsCache:o,config:{optionMergeStrategies:a}}=n.appContext,i=o.get(e);let c;return i?c=i:!r.length&&!t&&!s?c=e:(c={},r.length&&r.forEach(l=>kl(c,l,a,!0)),kl(c,e,a)),ot(e)&&o.set(e,c),c}function kl(n,e,t,s=!1){const{mixins:r,extends:o}=e;o&&kl(n,o,t,!0),r&&r.forEach(a=>kl(n,a,t,!0));for(const a in e)if(!(s&&a==="expose")){const i=kE[a]||t&&t[a];n[a]=i?i(n[a],e[a]):e[a]}return n}const kE={data:Qy,props:Zy,emits:Zy,methods:ka,computed:ka,beforeCreate:Vt,created:Vt,beforeMount:Vt,mounted:Vt,beforeUpdate:Vt,updated:Vt,beforeDestroy:Vt,beforeUnmount:Vt,destroyed:Vt,unmounted:Vt,activated:Vt,deactivated:Vt,errorCaptured:Vt,serverPrefetch:Vt,components:ka,directives:ka,watch:RE,provide:Qy,inject:AE};function Qy(n,e){return e?n?function(){return St(ke(n)?n.call(this,this):n,ke(e)?e.call(this,this):e)}:e:n}function AE(n,e){return ka(Pf(n),Pf(e))}function Pf(n){if(_e(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function Vt(n,e){return n?[...new Set([].concat(n,e))]:e}function ka(n,e){return n?St(Object.create(null),n,e):e}function Zy(n,e){return n?_e(n)&&_e(e)?[...new Set([...n,...e])]:St(Object.create(null),Xy(n),Xy(e??{})):e}function RE(n,e){if(!n)return e;if(!e)return n;const t=St(Object.create(null),n);for(const s in e)t[s]=Vt(n[s],e[s]);return t}function K0(){return{app:null,config:{isNativeTag:uS,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let OE=0;function DE(n,e){return function(s,r=null){ke(s)||(s=St({},s)),r!=null&&!ot(r)&&(r=null);const o=K0(),a=new WeakSet;let i=!1;const c=o.app={_uid:OE++,_component:s,_props:r,_container:null,_context:o,_instance:null,version:l_,get config(){return o.config},set config(l){},use(l,...u){return a.has(l)||(l&&ke(l.install)?(a.add(l),l.install(c,...u)):ke(l)&&(a.add(l),l(c,...u))),c},mixin(l){return o.mixins.includes(l)||o.mixins.push(l),c},component(l,u){return u?(o.components[l]=u,c):o.components[l]},directive(l,u){return u?(o.directives[l]=u,c):o.directives[l]},mount(l,u,d){if(!i){const p=ys(s,r);return p.appContext=o,d===!0?d="svg":d===!1&&(d=void 0),u&&e?e(p,l):n(p,l,d),i=!0,c._container=l,l.__vue_app__=c,Zh(p.component)||p.component.proxy}},unmount(){i&&(n(null,c._container),delete c._container.__vue_app__)},provide(l,u){return o.provides[l]=u,c},runWithContext(l){const u=Ma;Ma=c;try{return l()}finally{Ma=u}}};return c}}let Ma=null;function FE(n,e){if(Bt){let t=Bt.provides;const s=Bt.parent&&Bt.parent.provides;s===t&&(t=Bt.provides=Object.create(s)),t[n]=e}}function bl(n,e,t=!1){const s=Bt||Xn;if(s||Ma){const r=s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:Ma._context.provides;if(r&&n in r)return r[n];if(arguments.length>1)return t&&ke(e)?e.call(s&&s.proxy):e}}function PE(n,e,t,s=!1){const r={},o={};El(o,pu,1),n.propsDefaults=Object.create(null),q0(n,e,r,o);for(const a in n.propsOptions[0])a in r||(r[a]=void 0);t?n.props=s?r:HS(r):n.type.props?n.props=r:n.props=o,n.attrs=o}function LE(n,e,t,s){const{props:r,attrs:o,vnode:{patchFlag:a}}=n,i=Be(r),[c]=n.propsOptions;let l=!1;if((s||a>0)&&!(a&16)){if(a&8){const u=n.vnode.dynamicProps;for(let d=0;d<u.length;d++){let p=u[d];if(lu(n.emitsOptions,p))continue;const f=e[p];if(c)if(Le(o,p))f!==o[p]&&(o[p]=f,l=!0);else{const h=Lo(p);r[h]=Lf(c,i,h,f,n,!1)}else f!==o[p]&&(o[p]=f,l=!0)}}}else{q0(n,e,r,o)&&(l=!0);let u;for(const d in i)(!e||!Le(e,d)&&((u=ia(d))===d||!Le(e,u)))&&(c?t&&(t[d]!==void 0||t[u]!==void 0)&&(r[d]=Lf(c,i,d,void 0,n,!0)):delete r[d]);if(o!==i)for(const d in o)(!e||!Le(e,d))&&(delete o[d],l=!0)}l&&gs(n,"set","$attrs")}function q0(n,e,t,s){const[r,o]=n.propsOptions;let a=!1,i;if(e)for(let c in e){if(La(c))continue;const l=e[c];let u;r&&Le(r,u=Lo(c))?!o||!o.includes(u)?t[u]=l:(i||(i={}))[u]=l:lu(n.emitsOptions,c)||(!(c in s)||l!==s[c])&&(s[c]=l,a=!0)}if(o){const c=Be(t),l=i||et;for(let u=0;u<o.length;u++){const d=o[u];t[d]=Lf(r,c,d,l[d],n,!Le(l,d))}}return a}function Lf(n,e,t,s,r,o){const a=n[t];if(a!=null){const i=Le(a,"default");if(i&&s===void 0){const c=a.default;if(a.type!==Function&&!a.skipFactory&&ke(c)){const{propsDefaults:l}=r;if(t in l)s=l[t];else{const u=hi(r);s=l[t]=c.call(null,e),u()}}else s=c}a[0]&&(o&&!i?s=!1:a[1]&&(s===""||s===ia(t))&&(s=!0))}return s}function X0(n,e,t=!1){const s=e.propsCache,r=s.get(n);if(r)return r;const o=n.props,a={},i=[];let c=!1;if(!ke(n)){const u=d=>{c=!0;const[p,f]=X0(d,e,!0);St(a,p),f&&i.push(...f)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!o&&!c)return ot(n)&&s.set(n,Eo),Eo;if(_e(o))for(let u=0;u<o.length;u++){const d=Lo(o[u]);Jy(d)&&(a[d]=et)}else if(o)for(const u in o){const d=Lo(u);if(Jy(d)){const p=o[u],f=a[d]=_e(p)||ke(p)?{type:p}:St({},p);if(f){const h=nb(Boolean,f.type),g=nb(String,f.type);f[0]=h>-1,f[1]=g<0||h<g,(h>-1||Le(f,"default"))&&i.push(d)}}}const l=[a,i];return ot(n)&&s.set(n,l),l}function Jy(n){return n[0]!=="$"&&!La(n)}function eb(n){return n===null?"null":typeof n=="function"?n.name||"":typeof n=="object"&&n.constructor&&n.constructor.name||""}function tb(n,e){return eb(n)===eb(e)}function nb(n,e){return _e(e)?e.findIndex(t=>tb(t,n)):ke(e)&&tb(e,n)?0:-1}const Y0=n=>n[0]==="_"||n==="$stable",Yh=n=>_e(n)?n.map(Kn):[Kn(n)],VE=(n,e,t)=>{if(e._n)return e;const s=rE((...r)=>Yh(e(...r)),t);return s._c=!1,s},Q0=(n,e,t)=>{const s=n._ctx;for(const r in n){if(Y0(r))continue;const o=n[r];if(ke(o))e[r]=VE(r,o,s);else if(o!=null){const a=Yh(o);e[r]=()=>a}}},Z0=(n,e)=>{const t=Yh(e);n.slots.default=()=>t},ME=(n,e)=>{if(n.vnode.shapeFlag&32){const t=e._;t?(n.slots=Be(e),El(e,"_",t)):Q0(e,n.slots={})}else n.slots={},e&&Z0(n,e);El(n.slots,pu,1)},BE=(n,e,t)=>{const{vnode:s,slots:r}=n;let o=!0,a=et;if(s.shapeFlag&32){const i=e._;i?t&&i===1?o=!1:(St(r,e),!t&&i===1&&delete r._):(o=!e.$stable,Q0(e,r)),a=e}else e&&(Z0(n,e),a={default:1});if(o)for(const i in r)!Y0(i)&&a[i]==null&&delete r[i]};function Vf(n,e,t,s,r=!1){if(_e(n)){n.forEach((p,f)=>Vf(p,e&&(_e(e)?e[f]:e),t,s,r));return}if(yl(s)&&!r)return;const o=s.shapeFlag&4?Zh(s.component)||s.component.proxy:s.el,a=r?null:o,{i,r:c}=n,l=e&&e.r,u=i.refs===et?i.refs={}:i.refs,d=i.setupState;if(l!=null&&l!==c&&(bt(l)?(u[l]=null,Le(d,l)&&(d[l]=null)):sn(l)&&(l.value=null)),ke(c))Ks(c,i,12,[a,u]);else{const p=bt(c),f=sn(c);if(p||f){const h=()=>{if(n.f){const g=p?Le(d,c)?d[c]:u[c]:c.value;r?_e(g)&&Fh(g,o):_e(g)?g.includes(o)||g.push(o):p?(u[c]=[o],Le(d,c)&&(d[c]=u[c])):(c.value=[o],n.k&&(u[n.k]=c.value))}else p?(u[c]=a,Le(d,c)&&(d[c]=a)):f&&(c.value=a,n.k&&(u[n.k]=a))};a?(h.id=-1,qt(h,t)):h()}}}const qt=dE;function WE(n){return zE(n)}function zE(n,e){const t=h0();t.__VUE__=!0;const{insert:s,remove:r,patchProp:o,createElement:a,createText:i,createComment:c,setText:l,setElementText:u,parentNode:d,nextSibling:p,setScopeId:f=bn,insertStaticContent:h}=n,g=(_,O,U,H=null,K=null,Y=null,ie=void 0,X=null,re=!!O.dynamicChildren)=>{if(_===O)return;_&&!Ta(_,O)&&(H=fe(_),ee(_,K,Y,!0),_=null),O.patchFlag===-2&&(re=!1,O.dynamicChildren=null);const{type:Q,ref:ue,shapeFlag:he}=O;switch(Q){case du:m(_,O,U,H);break;case zr:y(_,O,U,H);break;case Qp:_==null&&b(O,U,H,ie);break;case us:L(_,O,U,H,K,Y,ie,X,re);break;default:he&1?$(_,O,U,H,K,Y,ie,X,re):he&6?F(_,O,U,H,K,Y,ie,X,re):(he&64||he&128)&&Q.process(_,O,U,H,K,Y,ie,X,re,Ce)}ue!=null&&K&&Vf(ue,_&&_.ref,Y,O||_,!O)},m=(_,O,U,H)=>{if(_==null)s(O.el=i(O.children),U,H);else{const K=O.el=_.el;O.children!==_.children&&l(K,O.children)}},y=(_,O,U,H)=>{_==null?s(O.el=c(O.children||""),U,H):O.el=_.el},b=(_,O,U,H)=>{[_.el,_.anchor]=h(_.children,O,U,H,_.el,_.anchor)},v=({el:_,anchor:O},U,H)=>{let K;for(;_&&_!==O;)K=p(_),s(_,U,H),_=K;s(O,U,H)},x=({el:_,anchor:O})=>{let U;for(;_&&_!==O;)U=p(_),r(_),_=U;r(O)},$=(_,O,U,H,K,Y,ie,X,re)=>{O.type==="svg"?ie="svg":O.type==="math"&&(ie="mathml"),_==null?C(O,U,H,K,Y,ie,X,re):R(_,O,K,Y,ie,X,re)},C=(_,O,U,H,K,Y,ie,X)=>{let re,Q;const{props:ue,shapeFlag:he,transition:me,dirs:ve}=_;if(re=_.el=a(_.type,Y,ue&&ue.is,ue),he&8?u(re,_.children):he&16&&E(_.children,re,null,H,K,Yp(_,Y),ie,X),ve&&vr(_,null,H,"created"),S(re,_,_.scopeId,ie,H),ue){for(const Ie in ue)Ie!=="value"&&!La(Ie)&&o(re,Ie,null,ue[Ie],Y,_.children,H,K,ae);"value"in ue&&o(re,"value",null,ue.value,Y),(Q=ue.onVnodeBeforeMount)&&jn(Q,H,_)}ve&&vr(_,null,H,"beforeMount");const Se=UE(K,me);Se&&me.beforeEnter(re),s(re,O,U),((Q=ue&&ue.onVnodeMounted)||Se||ve)&&qt(()=>{Q&&jn(Q,H,_),Se&&me.enter(re),ve&&vr(_,null,H,"mounted")},K)},S=(_,O,U,H,K)=>{if(U&&f(_,U),H)for(let Y=0;Y<H.length;Y++)f(_,H[Y]);if(K){let Y=K.subTree;if(O===Y){const ie=K.vnode;S(_,ie,ie.scopeId,ie.slotScopeIds,K.parent)}}},E=(_,O,U,H,K,Y,ie,X,re=0)=>{for(let Q=re;Q<_.length;Q++){const ue=_[Q]=X?Ms(_[Q]):Kn(_[Q]);g(null,ue,O,U,H,K,Y,ie,X)}},R=(_,O,U,H,K,Y,ie)=>{const X=O.el=_.el;let{patchFlag:re,dynamicChildren:Q,dirs:ue}=O;re|=_.patchFlag&16;const he=_.props||et,me=O.props||et;let ve;if(U&&$r(U,!1),(ve=me.onVnodeBeforeUpdate)&&jn(ve,U,O,_),ue&&vr(O,_,U,"beforeUpdate"),U&&$r(U,!0),Q?A(_.dynamicChildren,Q,X,U,H,Yp(O,K),Y):ie||M(_,O,X,null,U,H,Yp(O,K),Y,!1),re>0){if(re&16)D(X,O,he,me,U,H,K);else if(re&2&&he.class!==me.class&&o(X,"class",null,me.class,K),re&4&&o(X,"style",he.style,me.style,K),re&8){const Se=O.dynamicProps;for(let Ie=0;Ie<Se.length;Ie++){const We=Se[Ie],rt=he[We],Lt=me[We];(Lt!==rt||We==="value")&&o(X,We,rt,Lt,K,_.children,U,H,ae)}}re&1&&_.children!==O.children&&u(X,O.children)}else!ie&&Q==null&&D(X,O,he,me,U,H,K);((ve=me.onVnodeUpdated)||ue)&&qt(()=>{ve&&jn(ve,U,O,_),ue&&vr(O,_,U,"updated")},H)},A=(_,O,U,H,K,Y,ie)=>{for(let X=0;X<O.length;X++){const re=_[X],Q=O[X],ue=re.el&&(re.type===us||!Ta(re,Q)||re.shapeFlag&70)?d(re.el):U;g(re,Q,ue,null,H,K,Y,ie,!0)}},D=(_,O,U,H,K,Y,ie)=>{if(U!==H){if(U!==et)for(const X in U)!La(X)&&!(X in H)&&o(_,X,U[X],null,ie,O.children,K,Y,ae);for(const X in H){if(La(X))continue;const re=H[X],Q=U[X];re!==Q&&X!=="value"&&o(_,X,Q,re,ie,O.children,K,Y,ae)}"value"in H&&o(_,"value",U.value,H.value,ie)}},L=(_,O,U,H,K,Y,ie,X,re)=>{const Q=O.el=_?_.el:i(""),ue=O.anchor=_?_.anchor:i("");let{patchFlag:he,dynamicChildren:me,slotScopeIds:ve}=O;ve&&(X=X?X.concat(ve):ve),_==null?(s(Q,U,H),s(ue,U,H),E(O.children||[],U,ue,K,Y,ie,X,re)):he>0&&he&64&&me&&_.dynamicChildren?(A(_.dynamicChildren,me,U,K,Y,ie,X),(O.key!=null||K&&O===K.subTree)&&J0(_,O,!0)):M(_,O,U,ue,K,Y,ie,X,re)},F=(_,O,U,H,K,Y,ie,X,re)=>{O.slotScopeIds=X,_==null?O.shapeFlag&512?K.ctx.activate(O,U,H,ie,re):B(O,U,H,K,Y,ie,re):W(_,O,re)},B=(_,O,U,H,K,Y,ie)=>{const X=_.component=n_(_,H,K);if(z0(_)&&(X.ctx.renderer=Ce),s_(X),X.asyncDep){if(K&&K.registerDep(X,V),!_.el){const re=X.subTree=ys(zr);y(null,re,O,U)}}else V(X,_,O,U,K,Y,ie)},W=(_,O,U)=>{const H=O.component=_.component;if(iE(_,O,U))if(H.asyncDep&&!H.asyncResolved){z(H,O,U);return}else H.next=O,eE(H.update),H.effect.dirty=!0,H.update();else O.el=_.el,H.vnode=O},V=(_,O,U,H,K,Y,ie)=>{const X=()=>{if(_.isMounted){let{next:ue,bu:he,u:me,parent:ve,vnode:Se}=_;{const Fs=ew(_);if(Fs){ue&&(ue.el=Se.el,z(_,ue,ie)),Fs.asyncDep.then(()=>{_.isUnmounted||X()});return}}let Ie=ue,We;$r(_,!1),ue?(ue.el=Se.el,z(_,ue,ie)):ue=Se,he&&Hp(he),(We=ue.props&&ue.props.onVnodeBeforeUpdate)&&jn(We,ve,ue,Se),$r(_,!0);const rt=Kp(_),Lt=_.subTree;_.subTree=rt,g(Lt,rt,d(Lt.el),fe(Lt),_,K,Y),ue.el=rt.el,Ie===null&&cE(_,rt.el),me&&qt(me,K),(We=ue.props&&ue.props.onVnodeUpdated)&&qt(()=>jn(We,ve,ue,Se),K)}else{let ue;const{el:he,props:me}=O,{bm:ve,m:Se,parent:Ie}=_,We=yl(O);if($r(_,!1),ve&&Hp(ve),!We&&(ue=me&&me.onVnodeBeforeMount)&&jn(ue,Ie,O),$r(_,!0),he&&De){const rt=()=>{_.subTree=Kp(_),De(he,_.subTree,_,K,null)};We?O.type.__asyncLoader().then(()=>!_.isUnmounted&&rt()):rt()}else{const rt=_.subTree=Kp(_);g(null,rt,U,H,_,K,Y),O.el=rt.el}if(Se&&qt(Se,K),!We&&(ue=me&&me.onVnodeMounted)){const rt=O;qt(()=>jn(ue,Ie,rt),K)}(O.shapeFlag&256||Ie&&yl(Ie.vnode)&&Ie.vnode.shapeFlag&256)&&_.a&&qt(_.a,K),_.isMounted=!0,O=U=H=null}},re=_.effect=new Mh(X,bn,()=>qh(Q),_.scope),Q=_.update=()=>{re.dirty&&re.run()};Q.id=_.uid,$r(_,!0),Q()},z=(_,O,U)=>{O.component=_;const H=_.vnode.props;_.vnode=O,_.next=null,LE(_,O.props,H,U),BE(_,O.children,U),no(),Ky(_),so()},M=(_,O,U,H,K,Y,ie,X,re=!1)=>{const Q=_&&_.children,ue=_?_.shapeFlag:0,he=O.children,{patchFlag:me,shapeFlag:ve}=O;if(me>0){if(me&128){J(Q,he,U,H,K,Y,ie,X,re);return}else if(me&256){j(Q,he,U,H,K,Y,ie,X,re);return}}ve&8?(ue&16&&ae(Q,K,Y),he!==Q&&u(U,he)):ue&16?ve&16?J(Q,he,U,H,K,Y,ie,X,re):ae(Q,K,Y,!0):(ue&8&&u(U,""),ve&16&&E(he,U,H,K,Y,ie,X,re))},j=(_,O,U,H,K,Y,ie,X,re)=>{_=_||Eo,O=O||Eo;const Q=_.length,ue=O.length,he=Math.min(Q,ue);let me;for(me=0;me<he;me++){const ve=O[me]=re?Ms(O[me]):Kn(O[me]);g(_[me],ve,U,null,K,Y,ie,X,re)}Q>ue?ae(_,K,Y,!0,!1,he):E(O,U,H,K,Y,ie,X,re,he)},J=(_,O,U,H,K,Y,ie,X,re)=>{let Q=0;const ue=O.length;let he=_.length-1,me=ue-1;for(;Q<=he&&Q<=me;){const ve=_[Q],Se=O[Q]=re?Ms(O[Q]):Kn(O[Q]);if(Ta(ve,Se))g(ve,Se,U,null,K,Y,ie,X,re);else break;Q++}for(;Q<=he&&Q<=me;){const ve=_[he],Se=O[me]=re?Ms(O[me]):Kn(O[me]);if(Ta(ve,Se))g(ve,Se,U,null,K,Y,ie,X,re);else break;he--,me--}if(Q>he){if(Q<=me){const ve=me+1,Se=ve<ue?O[ve].el:H;for(;Q<=me;)g(null,O[Q]=re?Ms(O[Q]):Kn(O[Q]),U,Se,K,Y,ie,X,re),Q++}}else if(Q>me)for(;Q<=he;)ee(_[Q],K,Y,!0),Q++;else{const ve=Q,Se=Q,Ie=new Map;for(Q=Se;Q<=me;Q++){const cn=O[Q]=re?Ms(O[Q]):Kn(O[Q]);cn.key!=null&&Ie.set(cn.key,Q)}let We,rt=0;const Lt=me-Se+1;let Fs=!1,xr=0;const wr=new Array(Lt);for(Q=0;Q<Lt;Q++)wr[Q]=0;for(Q=ve;Q<=he;Q++){const cn=_[Q];if(rt>=Lt){ee(cn,K,Y,!0);continue}let Hn;if(cn.key!=null)Hn=Ie.get(cn.key);else for(We=Se;We<=me;We++)if(wr[We-Se]===0&&Ta(cn,O[We])){Hn=We;break}Hn===void 0?ee(cn,K,Y,!0):(wr[Hn-Se]=Q+1,Hn>=xr?xr=Hn:Fs=!0,g(cn,O[Hn],U,null,K,Y,ie,X,re),rt++)}const Gc=Fs?GE(wr):Eo;for(We=Gc.length-1,Q=Lt-1;Q>=0;Q--){const cn=Se+Q,Hn=O[cn],Vy=cn+1<ue?O[cn+1].el:H;wr[Q]===0?g(null,Hn,U,Vy,K,Y,ie,X,re):Fs&&(We<0||Q!==Gc[We]?Z(Hn,U,Vy,2):We--)}}},Z=(_,O,U,H,K=null)=>{const{el:Y,type:ie,transition:X,children:re,shapeFlag:Q}=_;if(Q&6){Z(_.component.subTree,O,U,H);return}if(Q&128){_.suspense.move(O,U,H);return}if(Q&64){ie.move(_,O,U,Ce);return}if(ie===us){s(Y,O,U);for(let he=0;he<re.length;he++)Z(re[he],O,U,H);s(_.anchor,O,U);return}if(ie===Qp){v(_,O,U);return}if(H!==2&&Q&1&&X)if(H===0)X.beforeEnter(Y),s(Y,O,U),qt(()=>X.enter(Y),K);else{const{leave:he,delayLeave:me,afterLeave:ve}=X,Se=()=>s(Y,O,U),Ie=()=>{he(Y,()=>{Se(),ve&&ve()})};me?me(Y,Se,Ie):Ie()}else s(Y,O,U)},ee=(_,O,U,H=!1,K=!1)=>{const{type:Y,props:ie,ref:X,children:re,dynamicChildren:Q,shapeFlag:ue,patchFlag:he,dirs:me}=_;if(X!=null&&Vf(X,null,U,_,!0),ue&256){O.ctx.deactivate(_);return}const ve=ue&1&&me,Se=!yl(_);let Ie;if(Se&&(Ie=ie&&ie.onVnodeBeforeUnmount)&&jn(Ie,O,_),ue&6)se(_.component,U,H);else{if(ue&128){_.suspense.unmount(U,H);return}ve&&vr(_,null,O,"beforeUnmount"),ue&64?_.type.remove(_,O,U,K,Ce,H):Q&&(Y!==us||he>0&&he&64)?ae(Q,O,U,!1,!0):(Y===us&&he&384||!K&&ue&16)&&ae(re,O,U),H&&ne(_)}(Se&&(Ie=ie&&ie.onVnodeUnmounted)||ve)&&qt(()=>{Ie&&jn(Ie,O,_),ve&&vr(_,null,O,"unmounted")},U)},ne=_=>{const{type:O,el:U,anchor:H,transition:K}=_;if(O===us){oe(U,H);return}if(O===Qp){x(_);return}const Y=()=>{r(U),K&&!K.persisted&&K.afterLeave&&K.afterLeave()};if(_.shapeFlag&1&&K&&!K.persisted){const{leave:ie,delayLeave:X}=K,re=()=>ie(U,Y);X?X(_.el,Y,re):re()}else Y()},oe=(_,O)=>{let U;for(;_!==O;)U=p(_),r(_),_=U;r(O)},se=(_,O,U)=>{const{bum:H,scope:K,update:Y,subTree:ie,um:X}=_;H&&Hp(H),K.stop(),Y&&(Y.active=!1,ee(ie,_,O,U)),X&&qt(X,O),qt(()=>{_.isUnmounted=!0},O),O&&O.pendingBranch&&!O.isUnmounted&&_.asyncDep&&!_.asyncResolved&&_.suspenseId===O.pendingId&&(O.deps--,O.deps===0&&O.resolve())},ae=(_,O,U,H=!1,K=!1,Y=0)=>{for(let ie=Y;ie<_.length;ie++)ee(_[ie],O,U,H,K)},fe=_=>_.shapeFlag&6?fe(_.component.subTree):_.shapeFlag&128?_.suspense.next():p(_.anchor||_.el);let be=!1;const xe=(_,O,U)=>{_==null?O._vnode&&ee(O._vnode,null,null,!0):g(O._vnode||null,_,O,null,null,null,U),be||(be=!0,Ky(),P0(),be=!1),O._vnode=_},Ce={p:g,um:ee,m:Z,r:ne,mt:B,mc:E,pc:M,pbc:A,n:fe,o:n};let Ne,De;return e&&([Ne,De]=e(Ce)),{render:xe,hydrate:Ne,createApp:DE(xe,Ne)}}function Yp({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function $r({effect:n,update:e},t){n.allowRecurse=e.allowRecurse=t}function UE(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function J0(n,e,t=!1){const s=n.children,r=e.children;if(_e(s)&&_e(r))for(let o=0;o<s.length;o++){const a=s[o];let i=r[o];i.shapeFlag&1&&!i.dynamicChildren&&((i.patchFlag<=0||i.patchFlag===32)&&(i=r[o]=Ms(r[o]),i.el=a.el),t||J0(a,i)),i.type===du&&(i.el=a.el)}}function GE(n){const e=n.slice(),t=[0];let s,r,o,a,i;const c=n.length;for(s=0;s<c;s++){const l=n[s];if(l!==0){if(r=t[t.length-1],n[r]<l){e[s]=r,t.push(s);continue}for(o=0,a=t.length-1;o<a;)i=o+a>>1,n[t[i]]<l?o=i+1:a=i;l<n[t[o]]&&(o>0&&(e[s]=t[o-1]),t[o]=s)}}for(o=t.length,a=t[o-1];o-- >0;)t[o]=a,a=e[a];return t}function ew(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:ew(e)}const HE=n=>n.__isTeleport,us=Symbol.for("v-fgt"),du=Symbol.for("v-txt"),zr=Symbol.for("v-cmt"),Qp=Symbol.for("v-stc"),Ba=[];let Fn=null;function Aa(n=!1){Ba.push(Fn=n?null:[])}function jE(){Ba.pop(),Fn=Ba[Ba.length-1]||null}let ja=1;function sb(n){ja+=n}function tw(n){return n.dynamicChildren=ja>0?Fn||Eo:null,jE(),ja>0&&Fn&&Fn.push(n),n}function Qc(n,e,t,s,r,o){return tw(Mt(n,e,t,s,r,o,!0))}function KE(n,e,t,s,r){return tw(ys(n,e,t,s,r,!0))}function qE(n){return n?n.__v_isVNode===!0:!1}function Ta(n,e){return n.type===e.type&&n.key===e.key}const pu="__vInternal",nw=({key:n})=>n??null,xl=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?bt(n)||sn(n)||ke(n)?{i:Xn,r:n,k:e,f:!!t}:n:null);function Mt(n,e=null,t=null,s=0,r=null,o=n===us?0:1,a=!1,i=!1){const c={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&nw(e),ref:e&&xl(e),scopeId:M0,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:s,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Xn};return i?(Qh(c,t),o&128&&n.normalize(c)):t&&(c.shapeFlag|=bt(t)?8:16),ja>0&&!a&&Fn&&(c.patchFlag>0||o&6)&&c.patchFlag!==32&&Fn.push(c),c}const ys=XE;function XE(n,e=null,t=null,s=0,r=null,o=!1){if((!n||n===lE)&&(n=zr),qE(n)){const i=Mo(n,e,!0);return t&&Qh(i,t),ja>0&&!o&&Fn&&(i.shapeFlag&6?Fn[Fn.indexOf(n)]=i:Fn.push(i)),i.patchFlag|=-2,i}if(i_(n)&&(n=n.__vccOpts),e){e=YE(e);let{class:i,style:c}=e;i&&!bt(i)&&(e.class=Vh(i)),ot(c)&&(I0(c)&&!_e(c)&&(c=St({},c)),e.style=Lh(c))}const a=bt(n)?1:uE(n)?128:HE(n)?64:ot(n)?4:ke(n)?2:0;return Mt(n,e,t,s,r,a,o,!0)}function YE(n){return n?I0(n)||pu in n?St({},n):n:null}function Mo(n,e,t=!1){const{props:s,ref:r,patchFlag:o,children:a}=n,i=e?JE(s||{},e):s;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:i,key:i&&nw(i),ref:e&&e.ref?t&&r?_e(r)?r.concat(xl(e)):[r,xl(e)]:xl(e):r,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:a,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==us?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&Mo(n.ssContent),ssFallback:n.ssFallback&&Mo(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce}}function QE(n=" ",e=0){return ys(du,null,n,e)}function ZE(n="",e=!1){return e?(Aa(),KE(zr,null,n)):ys(zr,null,n)}function Kn(n){return n==null||typeof n=="boolean"?ys(zr):_e(n)?ys(us,null,n.slice()):typeof n=="object"?Ms(n):ys(du,null,String(n))}function Ms(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:Mo(n)}function Qh(n,e){let t=0;const{shapeFlag:s}=n;if(e==null)e=null;else if(_e(e))t=16;else if(typeof e=="object")if(s&65){const r=e.default;r&&(r._c&&(r._d=!1),Qh(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!(pu in e)?e._ctx=Xn:r===3&&Xn&&(Xn.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else ke(e)?(e={default:e,_ctx:Xn},t=32):(e=String(e),s&64?(t=16,e=[QE(e)]):t=8);n.children=e,n.shapeFlag|=t}function JE(...n){const e={};for(let t=0;t<n.length;t++){const s=n[t];for(const r in s)if(r==="class")e.class!==s.class&&(e.class=Vh([e.class,s.class]));else if(r==="style")e.style=Lh([e.style,s.style]);else if(ru(r)){const o=e[r],a=s[r];a&&o!==a&&!(_e(o)&&o.includes(a))&&(e[r]=o?[].concat(o,a):a)}else r!==""&&(e[r]=s[r])}return e}function jn(n,e,t,s=null){Ln(n,e,7,[t,s])}const e_=K0();let t_=0;function n_(n,e,t){const s=n.type,r=(e?e.appContext:n.appContext)||e_,o={uid:t_++,vnode:n,type:s,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new CS(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:X0(s,r),emitsOptions:V0(s,r),emit:null,emitted:null,propsDefaults:et,inheritAttrs:s.inheritAttrs,ctx:et,data:et,props:et,attrs:et,slots:et,refs:et,setupState:et,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=e?e.root:o,o.emit=sE.bind(null,o),n.ce&&n.ce(o),o}let Bt=null,Al,Mf;{const n=h0(),e=(t,s)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(s),o=>{r.length>1?r.forEach(a=>a(o)):r[0](o)}};Al=e("__VUE_INSTANCE_SETTERS__",t=>Bt=t),Mf=e("__VUE_SSR_SETTERS__",t=>fu=t)}const hi=n=>{const e=Bt;return Al(n),n.scope.on(),()=>{n.scope.off(),Al(e)}},rb=()=>{Bt&&Bt.scope.off(),Al(null)};function sw(n){return n.vnode.shapeFlag&4}let fu=!1;function s_(n,e=!1){e&&Mf(e);const{props:t,children:s}=n.vnode,r=sw(n);PE(n,t,r,e),ME(n,s);const o=r?r_(n,e):void 0;return e&&Mf(!1),o}function r_(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=k0(new Proxy(n.ctx,EE));const{setup:s}=t;if(s){const r=n.setupContext=s.length>1?a_(n):null,o=hi(n);no();const a=Ks(s,n,0,[n.props,r]);if(so(),o(),u0(a)){if(a.then(rb,rb),e)return a.then(i=>{ob(n,i,e)}).catch(i=>{cu(i,n,0)});n.asyncDep=a}else ob(n,a,e)}else rw(n,e)}function ob(n,e,t){ke(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:ot(e)&&(n.setupState=O0(e)),rw(n,t)}let ab;function rw(n,e,t){const s=n.type;if(!n.render){if(!e&&ab&&!s.render){const r=s.template||Xh(n).template;if(r){const{isCustomElement:o,compilerOptions:a}=n.appContext.config,{delimiters:i,compilerOptions:c}=s,l=St(St({isCustomElement:o,delimiters:i},a),c);s.render=ab(r,l)}}n.render=s.render||bn}{const r=hi(n);no();try{_E(n)}finally{so(),r()}}}function o_(n){return n.attrsProxy||(n.attrsProxy=new Proxy(n.attrs,{get(e,t){return nn(n,"get","$attrs"),e[t]}}))}function a_(n){const e=t=>{n.exposed=t||{}};return{get attrs(){return o_(n)},slots:n.slots,emit:n.emit,expose:e}}function Zh(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(O0(k0(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in Va)return Va[t](n)},has(e,t){return t in e||t in Va}}))}function i_(n){return ke(n)&&"__vccOpts"in n}const c_=(n,e)=>jS(n,e,fu),l_="3.4.19";/**
* @vue/runtime-dom v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const u_="http://www.w3.org/2000/svg",d_="http://www.w3.org/1998/Math/MathML",Bs=typeof document<"u"?document:null,ib=Bs&&Bs.createElement("template"),p_={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,s)=>{const r=e==="svg"?Bs.createElementNS(u_,n):e==="mathml"?Bs.createElementNS(d_,n):Bs.createElement(n,t?{is:t}:void 0);return n==="select"&&s&&s.multiple!=null&&r.setAttribute("multiple",s.multiple),r},createText:n=>Bs.createTextNode(n),createComment:n=>Bs.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Bs.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,s,r,o){const a=t?t.previousSibling:e.lastChild;if(r&&(r===o||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===o||!(r=r.nextSibling)););else{ib.innerHTML=s==="svg"?`<svg>${n}</svg>`:s==="mathml"?`<math>${n}</math>`:n;const i=ib.content;if(s==="svg"||s==="mathml"){const c=i.firstChild;for(;c.firstChild;)i.appendChild(c.firstChild);i.removeChild(c)}e.insertBefore(i,t)}return[a?a.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},f_=Symbol("_vtc");function h_(n,e,t){const s=n[f_];s&&(e=(e?[e,...s]:[...s]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const cb=Symbol("_vod"),m_=Symbol(""),g_=/(^|;)\s*display\s*:/;function y_(n,e,t){const s=n.style,r=bt(t),o=s.display;let a=!1;if(t&&!r){if(e&&!bt(e))for(const i in e)t[i]==null&&Bf(s,i,"");for(const i in t)i==="display"&&(a=!0),Bf(s,i,t[i])}else if(r){if(e!==t){const i=s[m_];i&&(t+=";"+i),s.cssText=t,a=g_.test(t)}}else e&&n.removeAttribute("style");cb in n&&(n[cb]=a?s.display:"",s.display=o)}const lb=/\s*!important$/;function Bf(n,e,t){if(_e(t))t.forEach(s=>Bf(n,e,s));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const s=b_(n,e);lb.test(t)?n.setProperty(ia(s),t.replace(lb,""),"important"):n[s]=t}}const ub=["Webkit","Moz","ms"],Zp={};function b_(n,e){const t=Zp[e];if(t)return t;let s=Lo(e);if(s!=="filter"&&s in n)return Zp[e]=s;s=f0(s);for(let r=0;r<ub.length;r++){const o=ub[r]+s;if(o in n)return Zp[e]=o}return e}const db="http://www.w3.org/1999/xlink";function x_(n,e,t,s,r){if(s&&e.startsWith("xlink:"))t==null?n.removeAttributeNS(db,e.slice(6,e.length)):n.setAttributeNS(db,e,t);else{const o=vS(e);t==null||o&&!m0(t)?n.removeAttribute(e):n.setAttribute(e,o?"":t)}}function w_(n,e,t,s,r,o,a){if(e==="innerHTML"||e==="textContent"){s&&a(s,r,o),n[e]=t??"";return}const i=n.tagName;if(e==="value"&&i!=="PROGRESS"&&!i.includes("-")){n._value=t;const l=i==="OPTION"?n.getAttribute("value"):n.value,u=t??"";l!==u&&(n.value=u),t==null&&n.removeAttribute(e);return}let c=!1;if(t===""||t==null){const l=typeof n[e];l==="boolean"?t=m0(t):t==null&&l==="string"?(t="",c=!0):l==="number"&&(t=0,c=!0)}try{n[e]=t}catch{}c&&n.removeAttribute(e)}function v_(n,e,t,s){n.addEventListener(e,t,s)}function $_(n,e,t,s){n.removeEventListener(e,t,s)}const pb=Symbol("_vei");function C_(n,e,t,s,r=null){const o=n[pb]||(n[pb]={}),a=o[e];if(s&&a)a.value=s;else{const[i,c]=N_(e);if(s){const l=o[e]=E_(s,r);v_(n,i,l,c)}else a&&($_(n,i,a,c),o[e]=void 0)}}const fb=/(?:Once|Passive|Capture)$/;function N_(n){let e;if(fb.test(n)){e={};let s;for(;s=n.match(fb);)n=n.slice(0,n.length-s[0].length),e[s[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):ia(n.slice(2)),e]}let Jp=0;const T_=Promise.resolve(),S_=()=>Jp||(T_.then(()=>Jp=0),Jp=Date.now());function E_(n,e){const t=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=t.attached)return;Ln(__(s,t.value),e,5,[s])};return t.value=n,t.attached=S_(),t}function __(n,e){if(_e(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(s=>r=>!r._stopped&&s&&s(r))}else return e}const hb=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,I_=(n,e,t,s,r,o,a,i,c)=>{const l=r==="svg";e==="class"?h_(n,s,l):e==="style"?y_(n,t,s):ru(e)?Dh(e)||C_(n,e,t,s,a):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):k_(n,e,s,l))?w_(n,e,s,o,a,i,c):(e==="true-value"?n._trueValue=s:e==="false-value"&&(n._falseValue=s),x_(n,e,s,l))};function k_(n,e,t,s){if(s)return!!(e==="innerHTML"||e==="textContent"||e in n&&hb(e)&&ke(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return hb(e)&&bt(t)?!1:e in n}const A_=St({patchProp:I_},p_);let mb;function R_(){return mb||(mb=WE(A_))}const O_=(...n)=>{const e=R_().createApp(...n),{mount:t}=e;return e.mount=s=>{const r=F_(s);if(!r)return;const o=e._component;!ke(o)&&!o.render&&!o.template&&(o.template=r.innerHTML),r.innerHTML="";const a=t(r,!1,D_(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},e};function D_(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function F_(n){return bt(n)?document.querySelector(n):n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P_=1e-7,L_=1e-4;class Jh{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class hu{refCount(e){return jt("refCount")}incRef(e){return jt("incRef")}timerAvailable(){return!0}time(e){return jt("time")}read(e){return jt("read")}readSync(e){return jt("readSync")}readToGPU(e,t){return jt("readToGPU")}numDataIds(){return jt("numDataIds")}disposeData(e,t){return jt("disposeData")}write(e,t,s){return jt("write")}move(e,t,s,r,o){return jt("move")}createTensorFromGPUData(e,t,s){return jt("createTensorFromGPUData")}memory(){return jt("memory")}floatPrecision(){return jt("floatPrecision")}epsilon(){return this.floatPrecision()===32?P_:L_}dispose(){return jt("dispose")}}function jt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,hs(n,e,t)}function V_(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,hs(n,t,s),hs(e,t,s)}function Ys(n,e,t){return Math.max(n,Math.min(e,t))}function mu(n){return n%2===0?n:n+1}function hs(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function aw(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function M_(n,e){const t=Math.random();return e*t+(1-t)*n}function B_(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function T(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function wt(n,e,t=""){T(Ue(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function ro(n){T(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function G(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function W_(n){return n.length===0}function iw(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Ue(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Ur(n){return n%1===0}function z_(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function Rl(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function U_(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return ow(e),e}function Vr(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Wf(n,e=r=>0,t,s){return new Promise((r,o)=>{let a=0;const i=()=>{if(n()){r();return}a++;const c=e(a);if(t!=null&&a>=t){o();return}s!=null?s(i,c):setTimeout(i,c)};i()})}function em(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Pe(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),T(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),T(n.every(s=>Ur(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function _s(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Pe(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),s.push(i))}return{newShape:t,keptDims:s}}function ht(n,e){return st(n,e)}function st(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function cw(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function lw(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function tm(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ka(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function uw(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Yn(n){return typeof n=="string"||n instanceof String}function dw(n){return typeof n=="boolean"}function pw(n){return typeof n=="number"}function oo(n){return Array.isArray(n)?oo(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":pw(n)?"float32":Yn(n)?"string":dw(n)?"bool":"float32"}function Qs(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ol(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function we(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function fw(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((c,l)=>c*l)*(s?2:1);for(let c=0;c<o;c++)r[c]=fw(n+c*i,a,t,s)}return r}function pn(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return fw(0,n,e,t)}function hw(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function gu(n,e){const t=xt(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function xt(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function nm(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return pn(n,new Float32Array(t));if(e==="int32")return pn(n,new Int32Array(t));if(e==="bool")return pn(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function on(n){n.forEach(e=>{T(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Vn(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function ao(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function Zs(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gb="tfjsflags";class mw{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=G_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Zs(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);gb in e&&e[gb].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=j_(r,o)})}}function G_(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(H_(e,s[0],s[1]),s.join("="))),e}function H_(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function j_(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function P(){return sm}let sm=null;function K_(n){sm=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ef;function gw(){if(ef==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");ef=n}return ef}function q_(){const n=gw();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function rm(n,e){const t=q_();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const yu="Abs",mi="Acos",gi="Acosh",ca="Add",bu="AddN",xu="All",wu="Any",vu="ArgMax",$u="ArgMin",yi="Asin",bi="Asinh",xi="Atan",wi="Atanh",vi="Atan2",Cu="AvgPool",om="AvgPoolGrad",Nu="AvgPool3D",am="AvgPool3DGrad",Tu="BatchMatMul",Su="BatchToSpaceND",Eu="Bincount",$i="BitwiseAnd",X_="BroadcastTo",_u="BroadcastArgs",Ci="Cast",Ni="Ceil",Ti="ClipByValue",Iu="Complex",ku="ComplexAbs",Au="Concat",Ru="Conv2D",Ou="Conv2DBackpropFilter",Du="Conv2DBackpropInput",Fu="Conv3D",im="Conv3DBackpropFilterV2",Pu="Conv3DBackpropInputV2",Si="Cos",Ei="Cosh",Lu="Cumprod",Vu="Cumsum",Mu="CropAndResize",Bu="DenseBincount",Wu="DepthToSpace",zu="DepthwiseConv2dNative",Uu="DepthwiseConv2dNativeBackpropFilter",Gu="DepthwiseConv2dNativeBackpropInput",Hu="Diag",ju="Dilation2D",zf="Dilation2DBackpropInput",Uf="Dilation2DBackpropFilter",Ku="Draw",_i="RealDiv",qu="Einsum",Ii="Elu",cm="EluGrad",ki="Erf",Ai="Equal",Ri="Exp",Xu="ExpandDims",Oi="Expm1",Yu="FFT",Qu="Fill",Zu="FlipLeftRight",Di="Floor",Fi="FloorDiv",Ju="FusedBatchNorm",ed="GatherV2",td="GatherNd",Pi="Greater",Li="GreaterEqual",Vi="Identity",nd="IFFT",sd="Imag",Mi="IsFinite",Bi="IsInf",Wi="IsNan",rd="LeakyRelu",zi="Less",Ui="LessEqual",od="LinSpace",Gi="Log",Hi="Log1p",ji="LogicalAnd",Ki="LogicalNot",qi="LogicalOr",Y_="LogicalXor",Q_="LogSoftmax",Z_="LowerBound",ad="LRN",lm="LRNGrad",J_="MatrixBandPart",id="Max",Xi="Maximum",cd="MaxPool",um="MaxPoolGrad",ld="MaxPool3D",dm="MaxPool3DGrad",ud="MaxPoolWithArgmax",dd="Mean",pd="Min",Yi="Minimum",fd="MirrorPad",Qi="Mod",hd="Multinomial",Zi="Multiply",md="Neg",Ji="NotEqual",gd="NonMaxSuppressionV3",yd="NonMaxSuppressionV4",bd="NonMaxSuppressionV5",xd="OnesLike",wd="OneHot",vd="Pack",$d="PadV2",eI="Pool",ec="Pow",Cd="Prelu",Nd="Prod",Td="RaggedGather",Sd="RaggedRange",Ed="RaggedTensorToTensor",_d="Range",Id="Real",tc="Reciprocal",nc="Relu",kd="Reshape",Ad="ResizeNearestNeighbor",pm="ResizeNearestNeighborGrad",Rd="ResizeBilinear",fm="ResizeBilinearGrad",sc="Relu6",Od="Reverse",rc="Round",oc="Rsqrt",Dd="ScatterNd",Fd="TensorScatterUpdate",Pd="SearchSorted",Ld="Select",ac="Selu",Vd="Slice",ic="Sin",cc="Sinh",lc="Sign",uc="Sigmoid",dc="Softplus",pc="Sqrt",Md="Sum",Bd="SpaceToBatchND",Wd="SplitV",zd="Softmax",Ud="SparseFillEmptyRows",Gd="SparseReshape",Hd="SparseSegmentMean",jd="SparseSegmentSum",Kd="SparseToDense",fc="SquaredDifference",hm="Square",hc="StaticRegexReplace",qd="StridedSlice",Xd="StringNGrams",Yd="StringSplit",Qd="StringToHashBucketFast",mc="Sub",gc="Tan",yc="Tanh",bc="Tile",Zd="TopK",Jd="Transform",Ao="Transpose",ep="Unique",tp="Unpack",np="UnsortedSegmentSum",tI="UpperBound",sp="ZerosLike",xc="Step",Dl="FromPixels",rp="RotateWithOffset",qa="_FusedMatMul",Xa="FusedConv2D",Ya="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(...n){P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(...n)}function nI(...n){P().getBool("IS_TEST")||P().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=rm("kernelRegistry",()=>new Map),Qa=rm("gradRegistry",()=>new Map);function Za(n,e){const t=mm(n,e);return Bo.get(t)}function Gf(n){return Qa.get(n)}function Fl(n){const e=Bo.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&t.push(a)}return t}function op(n){const{kernelName:e,backendName:t}=n,s=mm(e,t);Bo.has(s)&&ln(`The kernel '${e}' for backend '${t}' is already registered`),Bo.set(s,n)}function sI(n){const{kernelName:e}=n;Qa.has(e)&&P().getBool("DEBUG")&&ln(`Overriding the gradient for '${e}'`),Qa.set(e,n)}function rI(n,e){const t=mm(n,e);if(!Bo.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Bo.delete(t)}function oI(n){if(!Qa.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Qa.delete(n)}function aI(n,e){Fl(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});op(r)})}function mm(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var ir=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function iI(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function gm(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var bw=Qe,xn=null;try{xn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Qe.prototype.__isLong__;Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function an(n){return(n&&n.__isLong__)===!0}Qe.isLong=an;var yb={},bb={};function io(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=bb[n],s)?s:(t=Ze(n,(n|0)<0?-1:0,!0),r&&(bb[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=yb[n],s)?s:(t=Ze(n,n<0?-1:0,!1),r&&(yb[n]=t),t))}Qe.fromInt=io;function wn(n,e){if(isNaN(n))return e?Ar:vn;if(e){if(n<0)return Ar;if(n>=xw)return $w}else{if(n<=-wb)return en;if(n+1>=wb)return vw}return n<0?wn(-n,e).neg():Ze(n%Wo|0,n/Wo|0,e)}Qe.fromNumber=wn;function Ze(n,e,t){return new Qe(n,e,t)}Qe.fromBits=Ze;var Pl=Math.pow;function ym(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return vn;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return ym(n.substring(1),e,t).neg();for(var r=wn(Pl(t,8)),o=vn,a=0;a<n.length;a+=8){var i=Math.min(8,n.length-a),c=parseInt(n.substring(a,a+i),t);if(i<8){var l=wn(Pl(t,i));o=o.mul(l).add(wn(c))}else o=o.mul(r),o=o.add(wn(c))}return o.unsigned=e,o}Qe.fromString=ym;function zn(n,e){return typeof n=="number"?wn(n,e):typeof n=="string"?ym(n,e):Ze(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Qe.fromValue=zn;var xb=65536,cI=1<<24,Wo=xb*xb,xw=Wo*Wo,wb=xw/2,vb=io(cI),vn=io(0);Qe.ZERO=vn;var Ar=io(0,!0);Qe.UZERO=Ar;var To=io(1);Qe.ONE=To;var ww=io(1,!0);Qe.UONE=ww;var Hf=io(-1);Qe.NEG_ONE=Hf;var vw=Ze(-1,2147483647,!1);Qe.MAX_VALUE=vw;var $w=Ze(-1,-1,!0);Qe.MAX_UNSIGNED_VALUE=$w;var en=Ze(0,-2147483648,!1);Qe.MIN_VALUE=en;var le=Qe.prototype;le.toInt=function(){return this.unsigned?this.low>>>0:this.low};le.toNumber=function(){return this.unsigned?(this.high>>>0)*Wo+(this.low>>>0):this.high*Wo+(this.low>>>0)};le.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(en)){var t=wn(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=wn(Pl(e,6),this.unsigned),a=this,i="";;){var c=a.div(o),l=a.sub(c.mul(o)).toInt()>>>0,u=l.toString(e);if(a=c,a.isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}};le.getHighBits=function(){return this.high};le.getHighBitsUnsigned=function(){return this.high>>>0};le.getLowBits=function(){return this.low};le.getLowBitsUnsigned=function(){return this.low>>>0};le.getNumBitsAbs=function(){if(this.isNegative())return this.eq(en)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};le.isZero=function(){return this.high===0&&this.low===0};le.eqz=le.isZero;le.isNegative=function(){return!this.unsigned&&this.high<0};le.isPositive=function(){return this.unsigned||this.high>=0};le.isOdd=function(){return(this.low&1)===1};le.isEven=function(){return(this.low&1)===0};le.equals=function(e){return an(e)||(e=zn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};le.eq=le.equals;le.notEquals=function(e){return!this.eq(e)};le.neq=le.notEquals;le.ne=le.notEquals;le.lessThan=function(e){return this.comp(e)<0};le.lt=le.lessThan;le.lessThanOrEqual=function(e){return this.comp(e)<=0};le.lte=le.lessThanOrEqual;le.le=le.lessThanOrEqual;le.greaterThan=function(e){return this.comp(e)>0};le.gt=le.greaterThan;le.greaterThanOrEqual=function(e){return this.comp(e)>=0};le.gte=le.greaterThanOrEqual;le.ge=le.greaterThanOrEqual;le.compare=function(e){if(an(e)||(e=zn(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};le.comp=le.compare;le.negate=function(){return!this.unsigned&&this.eq(en)?en:this.not().add(To)};le.neg=le.negate;le.add=function(e){an(e)||(e=zn(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,c=e.low>>>16,l=e.low&65535,u=0,d=0,p=0,f=0;return f+=o+l,p+=f>>>16,f&=65535,p+=r+c,d+=p>>>16,p&=65535,d+=s+i,u+=d>>>16,d&=65535,u+=t+a,u&=65535,Ze(p<<16|f,u<<16|d,this.unsigned)};le.subtract=function(e){return an(e)||(e=zn(e)),this.add(e.neg())};le.sub=le.subtract;le.multiply=function(e){if(this.isZero())return vn;if(an(e)||(e=zn(e)),xn){var t=xn.mul(this.low,this.high,e.low,e.high);return Ze(t,xn.get_high(),this.unsigned)}if(e.isZero())return vn;if(this.eq(en))return e.isOdd()?en:vn;if(e.eq(en))return this.isOdd()?en:vn;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(vb)&&e.lt(vb))return wn(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,c=e.high&65535,l=e.low>>>16,u=e.low&65535,d=0,p=0,f=0,h=0;return h+=a*u,f+=h>>>16,h&=65535,f+=o*u,p+=f>>>16,f&=65535,f+=a*l,p+=f>>>16,f&=65535,p+=r*u,d+=p>>>16,p&=65535,p+=o*l,d+=p>>>16,p&=65535,p+=a*c,d+=p>>>16,p&=65535,d+=s*u+r*l+o*c+a*i,d&=65535,Ze(f<<16|h,d<<16|p,this.unsigned)};le.mul=le.multiply;le.divide=function(e){if(an(e)||(e=zn(e)),e.isZero())throw Error("division by zero");if(xn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?xn.div_u:xn.div_s)(this.low,this.high,e.low,e.high);return Ze(t,xn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ar:vn;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ar;if(e.gt(this.shru(1)))return ww;o=Ar}else{if(this.eq(en)){if(e.eq(To)||e.eq(Hf))return en;if(e.eq(en))return To;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(vn)?e.isNegative()?To:Hf:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(en))return this.unsigned?Ar:vn;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=vn}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(s)/Math.LN2),c=i<=48?1:Pl(2,i-48),l=wn(s),u=l.mul(e);u.isNegative()||u.gt(r);)s-=c,l=wn(s,this.unsigned),u=l.mul(e);l.isZero()&&(l=To),o=o.add(l),r=r.sub(u)}return o};le.div=le.divide;le.modulo=function(e){if(an(e)||(e=zn(e)),xn){var t=(this.unsigned?xn.rem_u:xn.rem_s)(this.low,this.high,e.low,e.high);return Ze(t,xn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};le.mod=le.modulo;le.rem=le.modulo;le.not=function(){return Ze(~this.low,~this.high,this.unsigned)};le.and=function(e){return an(e)||(e=zn(e)),Ze(this.low&e.low,this.high&e.high,this.unsigned)};le.or=function(e){return an(e)||(e=zn(e)),Ze(this.low|e.low,this.high|e.high,this.unsigned)};le.xor=function(e){return an(e)||(e=zn(e)),Ze(this.low^e.low,this.high^e.high,this.unsigned)};le.shiftLeft=function(e){return an(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ze(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ze(0,this.low<<e-32,this.unsigned)};le.shl=le.shiftLeft;le.shiftRight=function(e){return an(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ze(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ze(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};le.shr=le.shiftRight;le.shiftRightUnsigned=function(e){if(an(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return Ze(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ze(t,0,this.unsigned):Ze(t>>>e-32,0,this.unsigned)};le.shru=le.shiftRightUnsigned;le.shr_u=le.shiftRightUnsigned;le.toSigned=function(){return this.unsigned?Ze(this.low,this.high,!1):this};le.toUnsigned=function(){return this.unsigned?this:Ze(this.low,this.high,!0)};le.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};le.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};le.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Qe.fromBytes=function(e,t,s){return s?Qe.fromBytesLE(e,t):Qe.fromBytesBE(e,t)};Qe.fromBytesLE=function(e,t){return new Qe(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Qe.fromBytesBE=function(e,t){return new Qe(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Cw=iI(bw),lI=lS({__proto__:null,default:Cw},[bw]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Cw||lI;function wc(n){return Er.fromString(n,!0,16)}const Nw=wc("c3a5c85c97cb3127"),Tr=wc("b492b66fbe98f273"),kt=wc("9ae16a3b2f90404f");function jf(n){return n.xor(n.shru(47))}function Tw(n,e,t){const s=n.slice(e,e+t);return Er.fromBytes(Array.from(s),!0,!0)}function je(n,e){return Tw(n,e,8)}function $b(n,e){return Tw(n,e,4)}function pt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function qs(n,e,t=wc("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function uI(n,e,t,s,r,o){r=r.add(n),o=pt(o.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(t),o=o.add(pt(r,44)),[r.add(s),o.add(a)]}function Zc(n,e,t,s){return uI(je(n,e),je(n,e+8),je(n,e+16),je(n,e+24),t,s)}function dI(n,e=n.length){if(e>=8){const t=kt.add(e*2),s=je(n,0).add(kt),r=je(n,e-8),o=pt(r,37).mul(t).add(s),a=pt(s,25).add(r).mul(t);return qs(o,a,t)}if(e>=4){const t=kt.add(e*2),s=$b(n,0);return qs(s.shl(3).add(e),$b(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),a=e+(r<<2);return jf(kt.mul(o).xor(Nw.mul(a))).mul(kt)}return kt}function pI(n,e=n.length){const t=kt.add(e*2),s=je(n,0).mul(Tr),r=je(n,8),o=je(n,e-8).mul(t),a=je(n,e-16).mul(kt);return qs(pt(s.add(r),43).add(pt(o,30)).add(a),s.add(pt(r.add(kt),18)).add(o),t)}function fI(n,e=n.length){const t=kt.add(e*2),s=je(n,0).mul(kt),r=je(n,8),o=je(n,e-8).mul(t),a=je(n,e-16).mul(kt),i=pt(s.add(r),43).add(pt(o,30)).add(a),c=qs(i,s.add(pt(r.add(kt),18)).add(o),t),l=je(n,16).mul(t),u=je(n,24),d=i.add(je(n,e-32)).mul(t),p=c.add(je(n,e-24)).mul(t);return qs(pt(l.add(u),43).add(pt(d,30)).add(p),l.add(pt(u.add(s),18)).add(d),t)}function Sw(n,e=n.length){const t=Er.fromNumber(81,!0);if(e<=32)return e<=16?dI(n,e):pI(n,e);if(e<=64)return fI(n,e);let s=t,r=t.mul(Tr).add(113),o=jf(r.mul(kt).add(113)).mul(kt),a=[Er.UZERO,Er.UZERO],i=[Er.UZERO,Er.UZERO];s=s.mul(kt).add(je(n,0));let c=0;const l=(e-1>>6)*64,u=l+(e-1&63)-63;do s=pt(s.add(r).add(a[0]).add(je(n,c+8)),37).mul(Tr),r=pt(r.add(a[1]).add(je(n,c+48)),42).mul(Tr),s=s.xor(i[1]),r=r.add(a[0]).add(je(n,c+40)),o=pt(o.add(i[0]),33).mul(Tr),a=Zc(n,c,a[1].mul(Tr),s.add(i[0])),i=Zc(n,c+32,o.add(i[1]),r.add(je(n,c+16))),[o,s]=[s,o],c+=64;while(c!==l);const d=Tr.add(o.and(255).shl(1));return c=u,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=pt(s.add(r).add(a[0]).add(je(n,c+8)),37).mul(d),r=pt(r.add(a[1]).add(je(n,c+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(a[0].mul(9).add(je(n,c+40))),o=pt(o.add(i[0]),33).mul(d),a=Zc(n,c,a[1].mul(d),s.add(i[0])),i=Zc(n,c+32,o.add(i[1]),r.add(je(n,c+16))),[o,s]=[s,o],qs(qs(a[0],i[0],d).add(jf(r).mul(Nw)).add(o),qs(a[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n,e){return e==="string"?Zn(n):cr([n],e)}function hI(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function cr(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ns(n)),P().getBool("DEBUG")&&cw(n,e),hI(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Qt(){return P().platform.now()}function mI(n,e){return P().platform.fetch(n,e)}function Zn(n,e="utf-8"){return e=e||"utf-8",P().platform.encode(n,e)}function $s(n,e="utf-8"){return e=e||"utf-8",P().platform.decode(n,e)}function ft(n){return P().platform.isTypedArray!=null?P().platform.isTypedArray(n):yw(n)}function ns(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Zs(n)||n==null||ft(n)&&t)e.push(n);else if(Array.isArray(n)||ft(n))for(let s=0;s<n.length;++s)ns(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)ns(n[r],e,t)}return e}const gI=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Ue,arraysEqualWithNull:iw,assert:T,assertNonNegativeIntegerDimensions:on,assertNonNull:ro,assertShapesMatch:wt,bytesFromStringArray:uw,bytesPerElement:Ka,checkConversionForErrors:cw,clamp:Ys,computeStrides:we,convertBackendValuesAndArrayBuffer:hw,createScalarValue:Is,createShuffledIndices:U_,decodeString:$s,distSquared:B_,encodeString:Zn,fetch:mI,fingerPrint64:Sw,flatten:ns,getArrayFromDType:st,getTypedArrayFromDType:ht,hasEncodingLoss:tm,hexToLong:wc,indexToLoc:ao,inferDtype:oo,inferFromImplicitShape:em,isBoolean:dw,isFunction:Qs,isInt:Ur,isNumber:pw,isPromise:Zs,isScalarShape:W_,isString:Yn,isTypedArray:ft,isValidDtype:lw,locToIndex:Vn,makeOnesTypedArray:gu,makeZerosNestedTypedArray:nm,makeZerosTypedArray:xt,nearestDivisor:Ol,nearestLargerEven:mu,now:Qt,parseAxisParam:Pe,randUniform:M_,repeatedTry:Wf,rightPad:Vr,shuffle:ow,shuffleCombo:V_,sizeFromShape:G,sizeToSquarishShape:Rl,squeezeShape:_s,sum:aw,swap:hs,tanh:z_,toNestedArray:pn,toTypedArray:cr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yI{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new xI)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let a;const i=Qt();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const l of r)l.dataSync();a=Promise.resolve({kernelMs:Qt()-i})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const u=r[l];u.data().then(d=>{bI(d,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:a}=e;s.forEach(i=>{Promise.all([i.data(),r,a]).then(c=>{this.logger.logKernelProfile(t,i,c[0],c[1],o,c[2])})})}}function bI(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class xI{logKernelProfile(e,t,s,r,o,a){const i=typeof r=="number"?Vr(`${r}ms`,9):r.error,c=Vr(e,25),l=t.rank,u=t.size,d=Vr(t.shape.toString(),14);let p="";for(const f in o){const h=o[f];if(h!=null){const g=h.shape||t.shape,m=g.length;p+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${c}	%c${i}	%c${l}D ${d}	%c${u}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n,e,t){const s={},r={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const l=n[c],u=l.inputs;for(const d in u){const p=u[d];let f=!1;for(let h=0;h<e.length;h++)if(s[p.id]){l.outputs.forEach(g=>s[g.id]=!0),f=!0,r[l.id]=!0;break}if(f)break}}const o={};o[t.id]=!0;const a={};for(let c=n.length-1;c>=0;c--){const l=n[c],u=l.inputs;for(let d=0;d<l.outputs.length;d++)if(o[l.outputs[d].id]){for(const p in u)o[u[p].id]=!0,a[l.id]=!0;break}}const i=[];for(let c=0;c<n.length;c++){const l=n[c];if(r[l.id]&&a[l.id]){const u={};for(const p in l.inputs){const f=l.inputs[p];s[f.id]&&(u[p]=f)}const d=Object.assign({},l);d.inputs=u,d.outputs=l.outputs,i.push(d)}}return i}function vI(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],a=[];if(o.outputs.forEach(c=>{const l=n[c.id];l!=null?a.push(l):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const c in o.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);const l=t(()=>i[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);const u=o.inputs[c];if(!Ue(l.shape,u.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=l;else{const d=n[u.id];n[u.id]=s(d,l),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cb=20,Sa=3,tf=7;function $I(n,e,t,s){const r=we(e),o=CI(n,e,t,r),a=e.length,i=wl(n,e,t,r,o),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${a}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(i.map(l=>"    "+l).join(`
`)),c.join(`
`)}function CI(n,e,t,s){const r=G(e),o=s[s.length-1],a=new Array(o).fill(0),i=e.length,c=t==="complex64"?Oa(n):n;if(i>1)for(let l=0;l<r/o;l++){const u=l*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],Ra(c[u+d],0,t).length)}return a}function Ra(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(tf))} + ${parseFloat(n[1].toFixed(tf))}j`:Yn(n)?s=`'${n}'`:t==="bool"?s=Ew(n):s=parseFloat(n.toFixed(tf)).toString(),Vr(s,e)}function Ew(n){return n===0?"false":"true"}function wl(n,e,t,s,r,o=!0){const a=t==="complex64"?2:1,i=e[0],c=e.length;if(c===0){if(t==="complex64"){const g=Oa(n);return[Ra(g[0],0,t)]}return t==="bool"?[Ew(n[0])]:[n[0].toString()]}if(c===1){if(i>Cb){const m=Sa*a;let y=Array.from(n.slice(0,m)),b=Array.from(n.slice((i-Sa)*a,i*a));return t==="complex64"&&(y=Oa(y),b=Oa(b)),["["+y.map((v,x)=>Ra(v,r[x],t)).join(", ")+", ..., "+b.map((v,x)=>Ra(v,r[i-Sa+x],t)).join(", ")+"]"]}return["["+(t==="complex64"?Oa(n):Array.from(n)).map((m,y)=>Ra(m,r[y],t)).join(", ")+"]"]}const l=e.slice(1),u=s.slice(1),d=s[0]*a,p=[];if(i>Cb){for(let g=0;g<Sa;g++){const m=g*d,y=m+d;p.push(...wl(n.slice(m,y),l,t,u,r,!1))}p.push("...");for(let g=i-Sa;g<i;g++){const m=g*d,y=m+d;p.push(...wl(n.slice(m,y),l,t,u,r,g===i-1))}}else for(let g=0;g<i;g++){const m=g*d,y=m+d;p.push(...wl(n.slice(m,y),l,t,u,r,g===i-1))}const f=c===2?",":"";p[0]="["+(i>0?p[0]+f:"");for(let g=1;g<p.length-1;g++)p[g]=" "+p[g]+f;let h=`,
`;for(let g=2;g<c;g++)h+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":h),p}function Oa(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lt{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=G(e),s!=null){const r=s.length;T(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||st(t,this.size),this.strides=we(e)}set(e,...t){t.length===0&&(t=[0]),T(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return On().makeTensor(this.values,this.shape,this.dtype)}}let On=null,xo=null;function NI(n){On=n}function TI(n){xo=n}class nt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=G(e),this.strides=we(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return xo.buffer(this.shape,this.dtype,e)}bufferSync(){return xo.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return pn(this.shape,e,this.dtype==="complex64")}arraySync(){return pn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=On().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>$s(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),On().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=On().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>$s(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await On().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),On().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return xo.print(this,e)}clone(){return this.throwIfDisposed(),xo.clone(this)}toString(e=!1){const t=this.dataSync();return $I(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),xo.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),On().makeVariable(this,e,t,s)}}Object.defineProperty(nt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function _w(){return rm("Tensor",()=>nt)}_w();class Ja extends nt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ue(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);On().disposeTensor(this),this.dataId=e.dataId,On().incRef(this,null)}dispose(){On().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ja,Symbol.hasInstance,{value:n=>n instanceof nt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Kf;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Kf||(Kf={}));var qf;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(qf||(qf={}));var Xf;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Xf||(Xf={}));var Yf;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Yf||(Yf={}));var Qf;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Qf||(Qf={}));const SI={float32:Yf,int32:qf,bool:Xf,complex64:Qf};function Ut(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return SI[n][e]}function ap(n){return Ut(n,"int32")}function Iw(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function kw(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tt(n,e){if(n.dtype===e.dtype)return[n,e];const t=Ut(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Aw(n,e){T(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function EI(n,e){return e.some(t=>t.id===n.id)}function bm(n){const e=[];return Rw(n,e,new Set),e}function Rw(n,e,t){if(n==null)return;if(n instanceof nt){e.push(n);return}if(!_I(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),Rw(o,e,t))}}function _I(n){return Array.isArray(n)||typeof n=="object"}const II=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Aw,getTensorsInContainer:bm,isTensorInList:EI,makeTypesMatch:tt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(n){return n.kernelName!=null}class Nb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class zo{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Nb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(ln(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new yI(this.backendInstance),!0}setupRegisteredKernels(){Fl(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Fl(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof hu)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ln(`Initialization of backend ${e} failed`),ln(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return ln(`Initialization of backend ${e} failed`),ln(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return zo.nextTensorId++}nextVariableId(){return zo.nextVariableId++}clone(e){const t=k.runKernel(Vi,{x:e}),s={x:e},r=a=>({x:()=>{const i="float32",c={x:a},l={dtype:i};return k.runKernel(Ci,c,l)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Za(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(c=>{o+=c.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let c;const l=nf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(nf(e)){const{kernelName:h,inputs:g,attrs:m}=e;this.backendName==null&&this.backend;const y=Za(h,this.backendName);T(y!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();c=y.kernelFunc({inputs:g,attrs:m,backend:this.backend});const v=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,v);const x=v.map($=>$.rank!=null?$:this.makeTensorFromTensorInfo($));if(r){const $=this.getTensorsForGradient(h,g,x);s=this.saveTensorsForBackwardMode($)}return x}}else{const{forwardFunc:h}=e,g=m=>{r&&(s=m.map(y=>this.keep(this.clone(y))))};i=()=>{const m=this.backend.numDataIds();c=this.tidy(()=>h(this.backend,g));const y=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,y),y}}const{inputs:u,attrs:d}=e,p=nf(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),r&&this.addTapeNode(l,u,t,p,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Gf(e);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(T(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=o.map(l=>t[l]);const c=s.filter((l,u)=>a[u]);return i.concat(c)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Yn(e[0])&&(o=e.map(c=>Zn(c)));const a=r.write(o,t,s),i=new nt(t,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const c=this.state.tensorInfo.get(a),l=uw(o);this.state.numBytes+=l-c.bytes,c.bytes=l}return i}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,a=new nt(r,o,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Ja(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Ka(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Ja||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Ka(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},c=Gf(e);c!=null&&(r=c.gradFunc),r!=null&&(i.gradient=l=>(l=l.map((u,d)=>{if(u==null){const p=s[d],f=xt(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return u}),r(l.length>1?l:l[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=bm(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(T(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));T(o instanceof nt,()=>"The result y returned by f() must be a tensor.");const a=wI(this.state.activeTape,t,o);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??kI(o.shape),vI(i,a,l=>this.tidy(l),AI);const c=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const u of l.saved)u.dispose()}),this.state.activeTape=null),{value:o,grads:c}})}customGrad(e){return T(Qs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{T(t.every(i=>i instanceof nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((i,c)=>{r[c]=i});const o=(i,c)=>(s=e(...t,c),T(s.value instanceof nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),T(Qs(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,c)=>{const l=s.gradFunc(i,c),u=Array.isArray(l)?l:[l];T(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),T(u.every(p=>p instanceof nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return u.forEach((p,f)=>{d[f]=()=>p}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Qt(),s=await this.backend.time(e);return s.wallMs=Qt()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Nb;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}zo.nextTensorId=0;zo.nextVariableId=0;function kI(n){const e=gu(G(n),"float32");return k.makeTensor(e,n,"float32")}function Ow(){const n=gw();if(n._tfengine==null){const e=new mw(n);n._tfengine=new zo(e)}return K_(n._tfengine.ENV),NI(()=>n._tfengine),n._tfengine}const k=Ow();function AI(n,e){const t={a:n,b:e};return k.runKernel(ca,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(){return typeof navigator<"u"&&navigator!=null}let Zf;function OI(n){Zf=n}function xm(n){if(Zf!==void 0)return Zf;if(n||RI()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function wm(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const DI=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:wm,isMobile:xm,mockIsMobile:OI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gt=P();Gt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Gt.registerFlag("IS_BROWSER",()=>wm());Gt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Gt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Gt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Gt.registerFlag("PROD",()=>!1);Gt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Gt.getBool("DEBUG"));Gt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Gt.registerFlag("IS_TEST",()=>!1);Gt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Gt.getBool("DEBUG"));Gt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Gt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Gt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n,e){let t=n;if(ft(n))return e==="string"?[]:[n.length];if(Iw(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(kw(n))return[n.buffer.size/(e==null?4:Ka(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||ft(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Dw(n,s,[]),s}function Dw(n,e,t){if(t=t||[],!Array.isArray(n)&&!ft(n)){T(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}T(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),T(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)Dw(n[r],s,t.concat(r))}function Tb(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,s="numeric"){if(n instanceof _w())return Tb(s,n.dtype,e,t),n;let r=oo(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Tb(s,r,e,t),n==null||!ft(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const o=ss(n,r);!ft(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?cr(n,r):ns(n,[],!0);return k.makeTensor(i,o,r)}function ei(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>N(o,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vm="__op";function I(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+vm;const r=(...o)=>{k.startScope(t);try{const a=s(...o);return Zs(a)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(a),a}catch(a){throw k.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(n,e){const t=N(n,"real","complex"),s=N(e,"imag","complex");wt(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return k.runKernel(Iu,r)}const Cs=I({complex_:FI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lr(n,e,t,s){if(s==null)s=oo(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(kw(n)||Iw(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return k.backend.createTensorFromGPUData(n,e||t,s)}if(!ft(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){on(e);const r=G(e),o=G(t);T(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],c=a===t.length-1?i!==G(e.slice(a)):!0;T(t[a]===e[a]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!ft(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?cr(n,s):ns(n,[],!0),k.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(n,e,t){const s=ss(n,t);return lr(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Un{static join(e){return new Un(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>ft(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let c=s;c<this.shards.length;c++){const l=this.shards[c],d=e+i-l.start,p=i,h=Math.min(t,l.end)-l.start,g=new Uint8Array(l.buffer,d,h-d);if(a.set(g,p),i+=g.length,t<l.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=PI(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function PI(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(){P().set("PROD",!0)}function VI(){P().set("DEBUG",!0)}function MI(){P().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function BI(n){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function WI(){k.disposeVariables()}function Rn(){return k}function zI(){return k.memory()}function UI(n){return k.profile(n)}function Ve(n,e){return k.tidy(n,e)}function Dt(n){bm(n).forEach(t=>t.dispose())}function Pn(n){return k.keep(n)}function GI(n){return k.time(n)}function HI(n){return k.setBackend(n)}function jI(){return k.ready()}function Fw(){return k.backendName}function KI(n){k.removeBackend(n)}function qI(n){return k.findBackend(n)}function XI(n){return k.findBackendFactory(n)}function $m(n,e,t=1){return k.registerBackend(n,e,t)}function Pw(){return k.backend}function YI(n,e){P().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js=4;async function QI(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],c=Array.isArray(n)?n[a].tensor:n[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);const l={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const u=new Promise(async d=>{const p=await c.bytes(),f=p.reduce((m,y)=>m+y.length,0)+Js*p.length,h=new Uint8Array(f);let g=0;for(let m=0;m<p.length;m++){const y=p[m],b=new Uint8Array(new Uint32Array([y.length]).buffer);h.set(b,g),g+=Js,h.set(y,g),g+=y.length}d(h)});s.push(u)}else s.push(c.data());e!=null&&(l.group=e),t.push(l)}const o=await Promise.all(s);return{data:ek(o),specs:t}}function Lw(n,e){const t=new Un(n),s={};let r=0;for(const o of e){const a=ZI(o,(i,c)=>t.slice(r+i,r+c));s[o.name]=Vw(o,t.slice(r,r+a)),r+=a}return s}function ZI(n,e){const t=G(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Gr[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Js+new Uint32Array(e(r,r+Js))[0];return r}else s=Gr[n.dtype];return t*s}async function JI(n,e){const t=G(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Gr[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Js+new Uint32Array(await e(r,r+Js))[0];return r}else s=Gr[n.dtype];return t*s}function Vw(n,e){const t=n.name,s=n.dtype,r=n.shape,o=G(r);let a,i=0;if("quantization"in n){const c=n.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${n.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=Gr[c.dtype],u=c.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){a=new Float32Array(u.length);for(let d=0;d<u.length;d++){const p=u[d];a[d]=p*c.scale+c.min}}else if(c.dtype==="float16")a=ik()(u);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(s==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let d=0;d<u.length;d++){const p=u[d];a[d]=Math.round(p*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);i+=o*l}else if(s==="string"){const c=G(n.shape);a=[];for(let l=0;l<c;l++){const u=new Uint32Array(e.slice(i,i+Js))[0];i+=Js;const d=new Uint8Array(e.slice(i,i+u));a.push(d),i+=u}}else{const c=Gr[s];if(s==="float32")a=new Float32Array(e);else if(s==="int32")a=new Int32Array(e);else if(s==="bool")a=new Uint8Array(e);else if(s==="complex64"){a=new Float32Array(e);const l=new Float32Array(a.length/2),u=new Float32Array(a.length/2);for(let h=0;h<l.length;h++)l[h]=a[h*2],u[h]=a[h*2+1];const d=Mn(l,r,"float32"),p=Mn(u,r,"float32"),f=Cs(d,p);return d.dispose(),p.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);i+=o*c}return Mn(a,r,s)}async function Sb(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const i=t-s.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const a=new Uint8Array(s.length+o.byteLength);a.set(s,0),a.set(new Uint8Array(o),s.length),s=a}return s.buffer}async function Mw(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const a=await JI(o,async(l,u)=>(r=await Sb(s,r,u),r.slice(l,u)));r=await Sb(s,r,a);const i=r.slice(0,a);r=r.slice(a);const c=Vw(o,i);if(t[o.name]=c,Fw()==="webgpu"){const l=Pw();"uploadToGPU"in l&&G(c.shape)>=P().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(c.dataId)}}return t}function ek(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const Cm=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Eb(n){return Cm?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function tk(n){if(Cm)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function nk(n){if(Cm){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function sk(n){return Un.join(n)}function _b(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Bw(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Nm(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function Tm(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),Nm(n,t,s)}function vc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Eb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Eb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Un(n.weightData).byteLength}}function Ll(n){const e=[];for(const t of n)e.push(...t.weights);return e}function rk(){const n=t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function ok(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function ak(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function ik(){const n=rk(),e=ok(),t=ak();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],c=n[t[i>>10]+(i&1023)]+e[i>>10];o[a]=c}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Je{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Je.instance==null&&(Je.instance=new Je),Je.instance}static registerSaveRouter(e){Je.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Je.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Je.getHandlers(e,"save")}static getLoadHandlers(e,t){return Je.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Je.getInstance().loadRouters:Je.getInstance().saveRouters).forEach(a=>{const i=a(e,s);i!==null&&r.push(i)}),r}}const ck=n=>Je.registerSaveRouter(n),lk=n=>Je.registerLoadRouter(n),uk=n=>Je.getSaveHandlers(n),dk=(n,e)=>Je.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf="tensorflowjs",eh=1,Rr="models_store",Us="model_info_store";function Ww(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function th(n){const e=n.result;e.createObjectStore(Rr,{keyPath:"modelPath"}),e.createObjectStore(Us,{keyPath:"modelPath"})}class Hr{constructor(e){if(this.indexedDB=Ww(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Jf,eh);o.onupgradeneeded=()=>th(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(Rr,"readonly"),l=i.objectStore(Rr).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=u=>(a.close(),r(l.error)),i.oncomplete=()=>a.close()}else{t.weightData=Un.join(t.weightData);const i=vc(t),c=a.transaction(Us,"readwrite");let l=c.objectStore(Us),u;try{u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(p){return r(p)}let d;u.onsuccess=()=>{d=a.transaction(Rr,"readwrite");const p=d.objectStore(Rr);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(h){return r(h)}f.onsuccess=()=>s({modelArtifactsInfo:i}),f.onerror=h=>{l=c.objectStore(Us);const g=l.delete(this.modelPath);g.onsuccess=()=>(a.close(),r(f.error)),g.onerror=m=>(a.close(),r(f.error))}},u.onerror=p=>(a.close(),r(u.error)),c.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}Hr.URL_SCHEME="indexeddb://";const zw=n=>P().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Hr.URL_SCHEME)?pk(n.slice(Hr.URL_SCHEME.length)):null;Je.registerSaveRouter(zw);Je.registerLoadRouter(zw);function pk(n){return new Hr(n)}function fk(n){return n.startsWith(Hr.URL_SCHEME)?n.slice(Hr.URL_SCHEME.length):n}class hk{constructor(){this.indexedDB=Ww()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Jf,eh);s.onupgradeneeded=()=>th(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Us,"readonly"),i=o.objectStore(Us).getAll();i.onsuccess=()=>{const c={};for(const l of i.result)c[l.modelPath]=l.modelArtifactsInfo;e(c)},i.onerror=c=>(r.close(),t(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=fk(e),new Promise((t,s)=>{const r=this.indexedDB.open(Jf,eh);r.onupgradeneeded=()=>th(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(Us,"readwrite"),i=a.objectStore(Us),c=i.get(e);let l;c.onsuccess=()=>{if(c.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=i.delete(e),d=()=>{l=o.transaction(Rr,"readwrite");const f=l.objectStore(Rr).delete(e);f.onsuccess=()=>t(c.result.modelArtifactsInfo),f.onerror=h=>s(c.error)};u.onsuccess=d,u.onerror=p=>(d(),o.close(),s(c.error))}},c.onerror=u=>(o.close(),s(c.error)),a.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms="/",wo="tensorflowjs_models",Uw="info",mk="model_topology",gk="weight_specs",yk="weight_data",bk="model_metadata";function Gw(n){return{info:[wo,n,Uw].join(ms),topology:[wo,n,mk].join(ms),weightSpecs:[wo,n,gk].join(ms),weightData:[wo,n,yk].join(ms),modelMetadata:[wo,n,bk].join(ms)}}function Hw(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function xk(n){const e=n.split(ms);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(ms)}function wk(n){return n.startsWith(jr.URL_SCHEME)?n.slice(jr.URL_SCHEME.length):n}class jr{constructor(e){if(!P().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Gw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=vc(e),o=Un.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,tk(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw Hw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=nk(a),t}}jr.URL_SCHEME="localstorage://";const jw=n=>P().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(jr.URL_SCHEME)?vk(n.slice(jr.URL_SCHEME.length)):null;Je.registerSaveRouter(jw);Je.registerLoadRouter(jw);function vk(n){return new jr(n)}class $k{constructor(){T(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),T(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=wo+ms,s=ms+Uw;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const a=xk(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=wk(e);const t=Gw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return Hw(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro="://";class It{constructor(){this.managers={}}static getInstance(){return It.instance==null&&(It.instance=new It),It.instance}static registerManager(e,t){T(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ro)&&(e=e.slice(0,e.indexOf(Ro))),T(e.length>0,()=>"scheme must not be an empty string.");const s=It.getInstance();T(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=It.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(It.getInstance().managers)}}function vl(n){if(n.indexOf(Ro)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${It.getSchemes().join(",")}`);return{scheme:n.split(Ro)[0],path:n.split(Ro)[1]}}async function Kw(n,e,t=!1){T(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Je.getLoadHandlers(n);T(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),T(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Je.getSaveHandlers(e);T(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),T(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=o[0],i=vl(n).scheme,c=vl(n).path,l=i===vl(n).scheme,u=await r.load();t&&l&&await It.getManager(i).removeModel(c);const d=await a.save(u);return t&&!l&&await It.getManager(i).removeModel(c),d.modelArtifactsInfo}async function Ck(){const n=It.getSchemes(),e={};for(const t of n){const s=await It.getManager(t).listModels();for(const r in s){const o=t+Ro+r;e[o]=s[r]}}return e}async function Nk(n){const e=vl(n);return It.getManager(e.scheme).removeModel(e.path)}async function Tk(n,e){return Kw(n,e,!1)}async function Sk(n,e){return Kw(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ek{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!P().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return yw(e)}}if(P().get("IS_BROWSER")){P().setPlatform("browser",new Ek);try{It.registerManager(jr.URL_SCHEME,new $k)}catch{}try{It.registerManager(Hr.URL_SCHEME,new hk)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k={importFetch:()=>require("node-fetch")};let sf;class Ik{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return P().global.fetch!=null?P().global.fetch(e,t):(sf==null&&(sf=_k.importFetch()),sf(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}P().get("IS_NODE")&&!P().get("IS_BROWSER")&&P().setPlatform("node",new Ik);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ee(n,e="float32",t){return e=e||"float32",on(n),new lt(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n,e){const t=N(n,"x","cast");if(!lw(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return k.runKernel(Ci,s,r)}const Xe=I({cast_:kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n){const t={x:N(n,"x","clone","string_or_numeric")};return k.runKernel(Vi,t)}const bs=I({clone_:Ak});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ow();const Rk={buffer:Ee,cast:Xe,clone:bs,print:Sm};TI(Rk);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e){let t=N(n,"a","add"),s=N(e,"b","add");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(ca,r)}const Te=I({add_:Ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,e){let t=N(n,"a","floorDiv"),s=N(e,"b","floorDiv");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(Fi,r)}const Em=I({floorDiv_:Dk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,e){let t=N(n,"a","div"),s=N(e,"b","div");if([t,s]=tt(t,s),t.dtype==="int32"&&s.dtype==="int32")return Em(t,s);const r={a:t,b:s},o={};return k.runKernel(_i,r,o)}const qe=I({div_:Fk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n,e){let t=N(n,"a","mul"),s=N(e,"b","mul");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(Zi,r)}const de=I({mul_:Pk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return k.runKernel(ku,t)}else{const t={x:e};return k.runKernel(yu,t)}}const Yt=I({abs_:Lk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n){const t={x:N(n,"x","acos")};return k.runKernel(mi,t)}const qw=I({acos_:Vk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n){const t={x:N(n,"x","acosh")};return k.runKernel(gi,t)}const Xw=I({acosh_:Mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n){T(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),T(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>N(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Ue(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return k.runKernel(bu,s)}const Yw=I({addN_:Bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,e=null,t=!1){const r={x:N(n,"x","all","bool")},o={axis:e,keepDims:t};return k.runKernel(xu,r,o)}const Qw=I({all_:Wk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n,e=null,t=!1){const r={x:N(n,"x","any","bool")},o={axis:e,keepDims:t};return k.runKernel(wu,r,o)}const Zw=I({any_:zk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n,e=0){const s={x:N(n,"x","argMax")},r={axis:e};return k.runKernel(vu,s,r)}const Jw=I({argMax_:Uk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,e=0){const s={x:N(n,"x","argMin")},r={axis:e};return k.runKernel($u,s,r)}const e1=I({argMin_:Gk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n){const t={x:N(n,"x","asin")};return k.runKernel(yi,t)}const t1=I({asin_:Hk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n){const t={x:N(n,"x","asinh")};return k.runKernel(bi,t)}const n1=I({asinh_:jk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n){const t={x:N(n,"x","atan")};return k.runKernel(xi,t)}const s1=I({atan_:Kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,e){let t=N(n,"a","atan2"),s=N(e,"b","atan2");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(vi,r)}const r1=I({atan2_:qk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n){const t={x:N(n,"x","atanh")};return k.runKernel(wi,t)}const o1=I({atanh_:Xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $c(n,e,t,s,r="NHWC",o){const a=n[3],i=[...e,a],c=As(r);return mt(n,i,t,o,s,null,null,c)}function En(n,e,t,s,r,o,a="channelsLast"){const[i,c]=ti(e);let l;if(a==="channelsLast")l=[i,c,n[3],n[3]];else if(a==="channelsFirst")l=[i,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return mt(n,l,t,s,r,o,!1,a)}function ks(n,e,t,s,r,o,a="NDHWC"){const[i,c,l]=nh(e);let u,d;if(a==="NDHWC")d="channelsLast",u=[i,c,l,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",u=[i,c,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return ur(n,u,t,s,r,!1,d,o)}function mt(n,e,t,s,r,o,a=!1,i="channelsLast"){let[c,l,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,l,u,d]=n;else if(i==="channelsFirst")[c,d,l,u]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,,h]=e,[g,m]=ti(t),[y,b]=ti(s),v=Oo(p,y),x=Oo(f,b),{padInfo:$,outHeight:C,outWidth:S}=Zk(r,l,u,g,m,v,x,o,i),E=a?h*d:h;let R;return i==="channelsFirst"?R=[c,E,C,S]:i==="channelsLast"&&(R=[c,C,S,E]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:d,outHeight:C,outWidth:S,outChannels:E,padInfo:$,strideHeight:g,strideWidth:m,filterHeight:p,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:n,outShape:R,filterShape:e}}function ur(n,e,t,s,r,o=!1,a="channelsLast",i){let[c,l,u,d,p]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[c,l,u,d,p]=n;else if(a==="channelsFirst")[c,p,l,u,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,h,g,,m]=e,[y,b,v]=nh(t),[x,$,C]=nh(s),S=Oo(f,x),E=Oo(h,$),R=Oo(g,C),{padInfo:A,outDepth:D,outHeight:L,outWidth:F}=Jk(r,l,u,d,y,b,v,S,E,R,i),B=o?m*p:m;let W;return a==="channelsFirst"?W=[c,B,D,L,F]:a==="channelsLast"&&(W=[c,D,L,F,B]),{batchSize:c,dataFormat:a,inDepth:l,inHeight:u,inWidth:d,inChannels:p,outDepth:D,outHeight:L,outWidth:F,outChannels:B,padInfo:A,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:f,filterHeight:h,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:x,dilationHeight:$,dilationWidth:C,inShape:n,outShape:W,filterShape:e}}function Yk(n,e,t,s,r){s==null&&(s=_m(n,e,t));const o=n[0],a=n[1],i=ni((o-e+2*s)/t+1,r),c=ni((a-e+2*s)/t+1,r);return[i,c]}function Qk(n,e,t,s,r,o){r==null&&(r=_m(n,e[0],s[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*r>=e[i]&&(a[i]=ni((n[i]-e[i]+2*r)/s[i]+1,o));return a}function _m(n,e,t,s=1){const r=Oo(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function ti(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function nh(n){return typeof n=="number"?[n,n,n]:n}function Oo(n,e){return e<=1?n:n+(n-1)*(e-1)}function Zk(n,e,t,s,r,o,a,i,c){let l,u,d;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=Yk([e,t],o,s,n,i);u=f[0],d=f[1]}else if(n==="same"){u=Math.ceil(e/s),d=Math.ceil(t/r);const p=Math.max(0,(u-1)*s+o-e),f=Math.max(0,(d-1)*r+a-t),h=Math.floor(p/2),g=p-h,m=Math.floor(f/2),y=f-m;l={top:h,bottom:g,left:m,right:y,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-o+1)/s),d=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const p=c==="channelsLast"?n[1][0]:n[2][0],f=c==="channelsLast"?n[1][1]:n[2][1],h=c==="channelsLast"?n[2][0]:n[3][0],g=c==="channelsLast"?n[2][1]:n[3][1];l={top:p,bottom:f,left:h,right:g,type:p===0&&f===0&&h===0&&g===0?"VALID":"EXPLICIT"},u=ni((e-o+p+f)/s+1,i),d=ni((t-a+h+g)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:u,outWidth:d}}function Jk(n,e,t,s,r,o,a,i,c,l,u){let d,p,f,h;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const m=Qk([e,t,s,1],[i,c,l],1,[r,o,a],n,u);p=m[0],f=m[1],h=m[2]}else if(n==="same"){p=Math.ceil(e/r),f=Math.ceil(t/o),h=Math.ceil(s/a);const g=(p-1)*r+i-e,m=(f-1)*o+c-t,y=(h-1)*a+l-s,b=Math.floor(g/2),v=g-b,x=Math.floor(m/2),$=m-x,C=Math.floor(y/2),S=y-C;d={top:x,bottom:$,left:C,right:S,front:b,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:p,outHeight:f,outWidth:h}}function ni(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function si(n){const[e,t,s]=ti(n);return e===1&&t===1&&s===1}function Et(n,e){return si(n)||si(e)}function Kr(n){return ti(n).every(e=>e>0)}function As(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function _n(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")T(Ur(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{T(Ur(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,e){const s={x:N(n,"x","reshape","string_or_numeric")},r={shape:e};return k.runKernel(kd,s,r)}const q=I({reshape_:e2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(n,e,t,s,r){const o=N(n,"x","avgPool","float32"),a=1;T(Et(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,c=!1;o.rank===3&&(c=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),_n("avgPool",s,r);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=k.runKernel(Cu,l,u);return d=Xe(d,o.dtype),c?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Im=I({avgPool_:t2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,e,t,s,r,o="NDHWC"){const a=N(n,"x","avgPool3d","float32");let i=a,c=!1;a.rank===4&&(c=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),T(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),T(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),_n("avgPool3d",s,r);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let d=k.runKernel(Nu,l,u);return d=Xe(d,i.dtype),c?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const a1=I({avgPool3d_:n2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n,e=0){T(n.length>=1,()=>"Pass at least one tensor to concat");const t=ei(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return bs(t[0]);const s=t,r={axis:e};return k.runKernel(Au,s,r)}const Tt=I({concat_:s2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n,e,t=!1,s=!1){let r=N(n,"a","matMul"),o=N(e,"b","matMul");[r,o]=tt(r,o);const a={a:r,b:o},i={transposeA:t,transposeB:s};return k.runKernel(Tu,a,i)}const Me=I({matMul_:r2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n){const t={x:N(n,"x","sigmoid","float32")};return k.runKernel(uc,t)}const Mr=I({sigmoid_:o2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a2(n,e,t){const s=N(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return k.runKernel(Vd,r,o)}const He=I({slice_:a2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(n){const t={x:N(n,"x","tanh","float32")};return k.runKernel(yc,t)}const Vl=I({tanh_:i2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(n,e,t,s,r,o){const a=N(n,"forgetBias","basicLSTMCell"),i=N(e,"lstmKernel","basicLSTMCell"),c=N(t,"lstmBias","basicLSTMCell"),l=N(s,"data","basicLSTMCell"),u=N(r,"c","basicLSTMCell"),d=N(o,"h","basicLSTMCell"),p=Tt([l,d],1),f=Me(p,i),h=Te(f,c),g=h.shape[0],m=h.shape[1]/4,y=[g,m],b=He(h,[0,0],y),v=He(h,[0,m],y),x=He(h,[0,m*2],y),$=He(h,[0,m*3],y),C=Te(de(Mr(b),Vl(v)),de(u,Mr(Te(a,x)))),S=de(Vl(C),Mr($));return[C,S]}const i1=I({basicLSTMCell_:c2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(n,e,t){const s=N(n,"x","batchToSpaceND"),r=e.reduce((i,c)=>i*c);T(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),T(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),T(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},a={blockShape:e,crops:t};return k.runKernel(Su,o,a)}const km=I({batchToSpaceND_:l2});function u2(n){let e;return n.rank===0||n.rank===1?e=q(n,[1,1,1,n.size]):n.rank===2?e=q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n,e,t,s,r,o){o==null&&(o=.001);const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),c=N(t,"variance","batchNorm");let l;r!=null&&(l=N(r,"scale","batchNorm"));let u;s!=null&&(u=N(s,"offset","batchNorm")),T(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:u2(a),scale:l,offset:u,mean:i,variance:c},f={varianceEpsilon:o},h=k.runKernel(Ju,p,f);return q(h,a.shape)}const Cc=I({batchNorm_:d2});function p2(n,e,t,s,r,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),c=N(t,"variance","batchNorm");let l;r!=null&&(l=N(r,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),T(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),T(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),T(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&T(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Cc(a,i,c,u,l,o)}const c1=I({batchNorm2d_:p2});function f2(n,e,t,s,r,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),c=N(t,"variance","batchNorm");let l;r!=null&&(l=N(r,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),T(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),T(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),T(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&T(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Cc(a,i,c,u,l,o)}const l1=I({batchNorm3d_:f2});function h2(n,e,t,s,r,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),c=N(t,"variance","batchNorm");let l;r!=null&&(l=N(r,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),T(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),T(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),T(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&T(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Cc(a,i,c,u,l,o)}const u1=I({batchNorm4d_:h2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n,e,t){const s=N(n,"x","bincount"),r=N(e,"weights","bincount");T(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),T(t>=0,()=>`size must be non-negative, but got ${t}.`),T(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:t};return k.runKernel(Eu,o,a)}const Am=I({bincount_:m2});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,e){const t=N(n,"x","bitwiseAnd"),s=N(e,"y","bitwiseAnd");if(!Ue(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return k.runKernel($i,r)}const d1=I({bitwiseAnd_:g2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n,e){const t=N(n,"s0","broadcastArgs","int32"),s=N(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return k.runKernel(_u,r)}const p1=I({broadcastArgs_:y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e){let t=N(n,"broadcastTo","x");const s=t.shape;if(on(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=q(t,l)}const r=t.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(r[l]===e[l])o[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return bs(t);const i={x:t},c={reps:o};return k.runKernel(bc,i,c)}const Do=I({broadcastTo_:b2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n){const t={x:N(n,"x","ceil","float32")};return k.runKernel(Ni,t)}const f1=I({ceil_:x2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n,e,t){on(n),t=t||oo(e);const s={shape:n,value:e,dtype:t};return k.runKernel(Qu,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n,e,t){const s=N(n,"x","clipByValue");if(T(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return la(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return k.runKernel(Ti,r,o)}const h1=I({clipByValue_:w2});function v2(n){return Tt(n,0)}const m1=I({concat1d_:v2});function $2(n,e){return Tt(n,e)}const g1=I({concat2d_:$2});function C2(n,e){return Tt(n,e)}const y1=I({concat3d_:C2});function N2(n,e){return Tt(n,e)}const b1=I({concat4d_:N2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n,e,t,s,r="NHWC",o=[1,1],a){const i=N(n,"x","conv2d","float32"),c=N(e,"filter","conv2d","float32");let l=i,u=!1;i.rank===3&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),T(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),_n("conv2d",s,a);const d=r==="NHWC"?l.shape[3]:l.shape[1];T(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),T(Et(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),T(Kr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),T(Kr(t),()=>"Error in conv2D: Strides should be larger than 0.");const p={x:l,filter:c},f={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},h=k.runKernel(Ru,p,f);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Nc=I({conv2d_:T2});function S2(n,e,t,s,r="NWC",o=1,a){const i=N(n,"x","conv1d"),c=N(e,"filter","conv1d");let l=i,u=!1;i.rank===2&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1]])),T(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),T(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),_n("conv1d",s,a),T(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),T(Et(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),T(Kr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),T(Kr(t),()=>"Error in conv1D: Stride should be larger than 0."),T(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=q(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=q(l,[l.shape[0],1,l.shape[1],l.shape[2]]),m=Nc(p,d,[1,t],s,"NHWC",[1,o],a);return u?q(m,[m.shape[2],m.shape[3]]):q(m,[m.shape[0],m.shape[2],m.shape[3]])}const x1=I({conv1d_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,e,t,s,r,o="NHWC",a){T(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,c=e,l=!1;e.rank===3&&(l=!0,c=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),T(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),T(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),T(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?c.shape[3]:c.shape[1];T(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),T(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),_n("conv2dDerInput",r,a);const p={dy:c,filter:t},f={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},h=k.runKernel(Du,p,f);return l?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const w1=I({conv2DBackpropInput_:E2});function _2(n,e,t,s,r,o){const a=N(n,"x","conv2dTranspose"),i=N(e,"filter","conv2dTranspose");return w1(t,a,i,s,r,"NHWC",o)}const v1=I({conv2dTranspose_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,e,t,s,r="NDHWC",o=[1,1,1]){const a=N(n,"x","conv3d"),i=N(e,"filter","conv3d");let c=a,l=!1;a.rank===4&&(l=!0,c=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),T(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),T(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),T(Et(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),T(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),T(Kr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),T(Kr(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:c,filter:i},d={strides:t,pad:s,dataFormat:r,dilations:o},p=k.runKernel(Fu,u,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const $1=I({conv3d_:I2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n,e,t,s,r){T(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const c=o[4],l=a.shape[4];T(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),T(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),T(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),T(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),T(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const u={dy:a,filter:t},d={pad:r,strides:s,inputShape:o},p=k.runKernel(Pu,u,d);return i?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const A2=I({conv3DBackpropInput_:k2});function R2(n,e,t,s,r){const o=N(n,"x","conv3dTranspose"),a=N(e,"filter","conv3dTranspose");return A2(t,o,a,s,r)}const C1=I({conv3dTranspose_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n){const t={x:N(n,"x","cos","float32")};return k.runKernel(Si,t)}const N1=I({cos_:O2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n){const t={x:N(n,"x","cosh","float32")};return k.runKernel(Ei,t)}const T1=I({cosh_:D2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,e=0,t=!1,s=!1){const o={x:N(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:s};return k.runKernel(Lu,o,a)}const S1=I({cumprod_:F2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n,e=0,t=!1,s=!1){const o={x:N(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return k.runKernel(Vu,o,a)}const E1=I({cumsum_:P2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n,e,t,s=!1){const r=N(n,"x","denseBincount"),o=N(e,"weights","denseBincount");T(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),T(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),T(t>=0,()=>`size must be non-negative, but got ${t}.`),T(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:t,binaryOutput:s};return k.runKernel(Bu,a,i)}const _1=I({denseBincount_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n,e,t="NHWC"){const s=N(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];T(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),T(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),T(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),T(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},c={blockSize:e,dataFormat:t};return k.runKernel(Wu,i,c)}const I1=I({depthToSpace_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,e,t,s,r="NHWC",o=[1,1],a){const i=N(n,"x","depthwiseConv2d","float32"),c=N(e,"filter","depthwiseConv2d","float32");let l=i,u=!1;i.rank===3&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),T(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const d=r==="NHWC"?l.shape[3]:l.shape[1];T(d===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${c.shape[2]}.`),_n("depthwiseConv2d",s,a);const p={x:l,filter:c},f={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},h=k.runKernel(zu,p,f);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ip=I({depthwiseConv2d_:M2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(n){const t={x:N(n,"x","diag")};return k.runKernel(Hu,t)}const k1=I({diag_:B2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e,t,s,r=[1,1],o="NHWC"){const a=N(n,"x","dilation2d"),i=N(e,"filter","dilation2d");T(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),T(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),T(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let c=a,l=!1;a.rank===3&&(c=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0),T(c.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${i.shape[2]}`);const u={x:c,filter:i},d={strides:t,pad:s,dilations:r},p=k.runKernel(ju,u,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const A1=I({dilation2d_:W2});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,a=n[o]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function Rm(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,a=e[o];(r==null||r===1&&a>1)&&t.unshift(o)}return t}function Re(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=e[e.length-r-1];if(a==null&&(a=1),o===1)s[t-r-1]=a;else if(a===1)s[t-r-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else s[t-r-1]=o}return s}const z2=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Re,getBroadcastDims:qr,getReductionAxes:Rm},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e){let t=N(n,"a","equal","string_or_numeric"),s=N(e,"b","equal","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Ai,r)}const Om=I({equal_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,e,t){const s=N(e,"a","where"),r=N(t,"b","where"),o=N(n,"condition","where","bool"),a=Re(Re(o.shape,s.shape),r.shape),i=Do(o,a),c=Do(s,a),l=Do(r,a),u={condition:i,t:c,e:l};return k.runKernel(Ld,u)}const xs=I({where_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n){const t={x:N(n,"x","zerosLike")};return k.runKernel(sp,t)}const tn=I({zerosLike_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n,e){let t=N(n,"a","div"),s=N(e,"b","div");[t,s]=tt(t,s);const r=qe(t,s),o=tn(r),a=Om(s,o);return xs(a,o,r)}const R1=I({divNoNan_:j2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e){const t=N(n,"t1","dot"),s=N(e,"t2","dot");T((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(T(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const a=q(t,[1,-1]),i=q(s,[-1,1]),c=Me(a,i);return q(c,[])}else if(t.rank===1&&s.rank===2){const a=q(t,[1,-1]),i=q(s,[s.shape[0],s.shape[1]]),c=Me(a,i);return q(c,[c.size])}else if(t.rank===2&&s.rank===1){const a=q(s,[-1,1]),i=Me(t,a);return q(i,[i.size])}else{const a=q(s,[s.shape[0],s.shape[1]]);return Me(t,a)}}const O1=I({dot_:K2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,...e){const t=e.map((r,o)=>N(r,`tensors${o}`,"einsum")),s={equation:n};return k.runKernel(qu,t,s)}const _r=I({einsum_:q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n){const t={x:N(n,"x","elu","float32")};return k.runKernel(Ii,t)}const Dm=I({elu_:X2});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n,e){const t=N(n,"x","ensureShape","string_or_numeric");if(!iw(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const D1=I({ensureShape_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(n){let e=N(n,"x","erf");T(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Xe(e,"float32"));const t={x:e};return k.runKernel(ki,t)}const F1=I({erf_:Q2});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fm(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function P1(n,e,t){const s=n.length+e.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)t.indexOf(i)===-1?r.push(n[o++]):r.push(e[a++]);return r}function vt(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function ut(n,e){const t=e.map(s=>1);return P1(n,t,e)}function $t(n,e,t){T(Fm(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function at(n,e){if(Fm(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Tc(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function it(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,e=null,t=!1){const r={x:N(n,"x","max")},o={reductionIndices:e,keepDims:t};return k.runKernel(id,r,o)}const Br=I({max_:Z2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n,e=null,t=!1){const r={x:N(n,"x","min")},o={axis:e,keepDims:t};return k.runKernel(pd,r,o)}const Ml=I({min_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n,e){let t=N(n,"base","pow"),s=N(e,"exp","pow");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(ec,r)}const Uo=I({pow_:eA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(n,e){if((ft(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ft(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return lr(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n){const t={x:N(n,"x","sqrt","float32")};return k.runKernel(pc,t)}const rs=I({sqrt_:tA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n){const e=N(n,"x","square"),t={};return k.runKernel("Square",{x:e},t)}const Cn=I({square_:nA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e=null,t=!1){let s=N(n,"x","sum");s.dtype==="bool"&&(s=Xe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return k.runKernel(Md,r,o)}const Ke=I({sum_:sA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e="euclidean",t=null,s=!1){n=N(n,"x","norm");const r=L1(n,e,t);let o=r.shape;if(s){const a=Pe(t,n.shape);o=ut(r.shape,a)}return q(r,o)}function L1(n,e,t=null){if(n.rank===0)return Yt(n);if(n.rank!==1&&t===null)return L1(q(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ke(Yt(n),t);if(e===1/0)return Br(Yt(n),t);if(e===-1/0)return Ml(Yt(n),t);if(e==="euclidean"||e===2)return rs(Ke(Uo(Yt(n),Oe(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Br(Ke(Yt(n),t[0]),t[1]-1);if(e===1/0)return Br(Ke(Yt(n),t[1]),t[0]);if(e===-1/0)return Ml(Ke(Yt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return rs(Ke(Cn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Sc=I({norm_:rA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,e=null,t=!1){return Sc(n,"euclidean",e,t)}const V1=I({euclideanNorm_:oA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n){const t={x:N(n,"x","exp")};return k.runKernel(Ri,t)}const er=I({exp_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");T(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return k.runKernel(Xu,s,r)}const ds=I({expandDims_:iA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){const t={x:N(n,"x","expm1")};return k.runKernel(Oi,t)}const M1=I({expm1_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e){const t=N(n,"x","tile","string_or_numeric");T(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return k.runKernel(bc,s,r)}const Fo=I({tile_:lA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e,t,s="float32"){e==null&&(e=n);const r=Ee([n,e],s),o=n<=e?n:e;for(let i=0;i<o;++i)r.set(1,i,i);const a=q(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Fo(ds(a,0),[t[0],1,1]);if(t.length===2)return Fo(ds(ds(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Fo(ds(ds(ds(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Pm=I({eye_:uA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n){const t={x:N(n,"x","floor","float32")};return k.runKernel(Di,t)}const Lm=I({floor_:dA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n,e,t=0,s=0){const r=N(n,"x","gather"),o=N(e,"indices","gather","int32"),a={x:r,indices:o},i={axis:t,batchDims:s};return k.runKernel(ed,a,i)}const Vm=I({gather_:pA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n,e){let t=N(n,"a","greater","string_or_numeric"),s=N(e,"b","greater","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Pi,r)}const Ec=I({greater_:fA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),s=N(e,"b","greaterEqual","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Li,r)}const Mm=I({greaterEqual_:hA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n){const t={input:N(n,"input","imag")};return k.runKernel(sd,t)}const _c=I({imag_:mA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n){const t={x:N(n,"x","isFinite")};return k.runKernel(Mi,t)}const B1=I({isFinite_:gA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n){const t={x:N(n,"x","isInf")};return k.runKernel(Bi,t)}const W1=I({isInf_:yA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n){const t={x:N(n,"x","isNaN")};return k.runKernel(Wi,t)}const z1=I({isNaN_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e=.2){const s={x:N(n,"x","leakyRelu")},r={alpha:e};return k.runKernel(rd,s,r)}const Bm=I({leakyRelu_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n,e){let t=N(n,"a","less","string_or_numeric"),s=N(e,"b","less","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(zi,r)}const Bl=I({less_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),s=N(e,"b","lessEqual","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Ui,r)}const cp=I({lessEqual_:vA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return k.runKernel(od,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e=5,t=1,s=1,r=.5){const o=N(n,"x","localResponseNormalization");T(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),T(Ur(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=q(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:a},l={depthRadius:e,bias:t,alpha:s,beta:r},u=k.runKernel(ad,c,l);return i?q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const G1=I({localResponseNormalization_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const t={x:N(n,"x","log","float32")};return k.runKernel(Gi,t)}const Go=I({log_:CA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const t={x:N(n,"x","log1p")};return k.runKernel(Hi,t)}const Wm=I({log1p_:NA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n){return T(Qs(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=N(e,"x","tf.grad","string_or_numeric"),r=t!=null?N(t,"dy","tf.grad"):null;return k.tidy(()=>{const{value:o,grads:a}=k.gradients(()=>n(s),[s],r);return r!=null&&wt(o.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lp(a),a[0]})}}function SA(n){return T(Qs(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{T(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=ei(e,"args","tf.grads","string_or_numeric"),r=t!=null?N(t,"dy","tf.grads"):null;return k.tidy(()=>{const{value:o,grads:a}=k.gradients(()=>n(...s),s,r);return r!=null&&wt(o.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lp(a),a})}}function EA(n){return T(Qs(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{T(e instanceof nt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),T(t==null||t instanceof nt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=k.gradients(()=>n(e),[e],t);return lp(s),{grad:s[0],value:r}}}function _A(n){return T(Qs(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{T(Array.isArray(e)&&e.every(r=>r instanceof nt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),T(t==null||t instanceof nt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=k.gradients(()=>n(...e),e,t);return t!=null&&wt(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lp(s.grads),s}}function H1(n,e){T(Qs(n),()=>"The f passed in variableGrads(f) must be a function"),T(e==null||Array.isArray(e)&&e.every(l=>l instanceof Ja),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in k.registeredVariables)e.push(k.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,r=e.length;e=e.filter(l=>l.trainable),T(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=k.gradients(n,e,null,o);T(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),T(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const c={};return e.forEach((l,u)=>{i[u]!=null&&(c[l.name]=i[u])}),s!=null&&s.forEach(l=>c[l.name]=null),{value:a,grads:c}}function os(n){return k.customGrad(n)}function lp(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const t={x:N(n,"x","neg")};return k.runKernel(md,t)}const Bn=I({neg_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n){const t={x:N(n,"x","softplus")};return k.runKernel(dc,t)}const zm=I({softplus_:kA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n){const e=N(n,"x","logSigmoid");return os(s=>({value:Bn(zm(Bn(s))),gradFunc:a=>de(a,Mr(Bn(s)))}))(e)}const j1=I({logSigmoid_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e){let t=N(n,"a","sub"),s=N(e,"b","sub");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(mc,r)}const Ae=I({sub_:RA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return os((r,o)=>{const i=Br(r,e,!0),c=Ae(r,i),l=Ae(Xe(c,"float32"),Go(Ke(er(c),e,!0)));return o([l]),{value:l,gradFunc:(d,p)=>{const[f]=p,h=!0,g=er(f);return Ae(d,de(Ke(d,e,h),g))}}})(t)}const K1=I({logSoftmax_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n,e=null,t=!1){const s=N(n,"x","logSumExp"),r=Pe(e,s.shape),o=Br(s,r,!0),a=Ae(s,o),i=er(a),c=Ke(i,r),l=Go(c),u=Te(q(o,l.shape),l);if(t){const d=ut(u.shape,r);return q(u,d)}return u}const Um=I({logSumExp_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e){const t=N(n,"a","logicalAnd","bool"),s=N(e,"b","logicalAnd","bool");Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(ji,r)}const ri=I({logicalAnd_:FA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const t={x:N(n,"x","logicalNot","bool")};return k.runKernel(Ki,t)}const Gm=I({logicalNot_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n,e){const t=N(n,"a","logicalOr","bool"),s=N(e,"b","logicalOr","bool");Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(qi,r)}const Hm=I({logicalOr_:LA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e){const t=N(n,"a","logicalXor","bool"),s=N(e,"b","logicalXor","bool");return Re(t.shape,s.shape),ri(Hm(n,e),Gm(ri(n,e)))}const q1=I({logicalXor_:VA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jc=2147483648;function MA(n,e,t="left"){const s=N(n,"sortedSequence","searchSorted"),r=N(e,"values","searchSorted"),o=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],i=q(s,[-1,o]),c=q(r,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(G(c.shape)>=Jc)throw new Error(`values tensor size must less than ${Jc}`);if(i.shape[1]>=Jc)throw new Error(`trailing dim_size must less than ${Jc} for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:c},u={side:t};return k.runKernel(Pd,l,u)}const up=I({searchSorted_:MA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n,e){return up(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t,s,r){const o=N(n,"x","maxPool"),a=1;let i=o,c=!1;o.rank===3&&(c=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),T(Et(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),_n("maxPool",s,r);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=k.runKernel(cd,l,u);return c?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const jm=I({maxPool_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,e=[1,1,1],t,s,r,o="NDHWC"){const a=N(n,"x","maxPool3d");let i=a,c=!1;a.rank===4&&(c=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),T(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),_n("maxPool3d",s,r);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},d=k.runKernel(ld,l,u);return c?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Y1=I({maxPool3d_:WA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,e,t,s,r=!1){const a={x:N(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},c=k.runKernel(ud,a,i);return{result:c[0],indexes:c[1]}}const Q1=I({maxPoolWithArgmax_:zA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,e){let t=N(n,"a","maximum"),s=N(e,"b","maximum");[t,s]=tt(t,s),t.dtype==="bool"&&(t=Xe(t,"int32"),s=Xe(s,"int32")),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Xi,r)}const Km=I({maximum_:UA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n,e=null,t=!1){const r={x:N(n,"x","mean")},o={axis:e,keepDims:t};return k.runKernel(dd,r,o)}const oi=I({mean_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(n,e="float32"){if(on(n),e==="complex64"){const s=tr(n,"float32"),r=tr(n,"float32");return Cs(s,r)}const t=xt(G(n),e);return k.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(n,e="float32"){if(on(n),e==="complex64"){const s=Gs(n,"float32"),r=tr(n,"float32");return Cs(s,r)}const t=gu(G(n),e);return k.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=N(n,"x","meshgrid",n instanceof nt?n.dtype:"float32");if(e===void 0)return[s];let r=N(e,"y","meshgrid",e instanceof nt?e.dtype:"float32");const o=G(s.shape),a=G(r.shape);return t==="xy"?(s=q(s,[1,-1]),r=q(r,[-1,1]),[Me(Gs([a,1],s.dtype),s),Me(r,Gs([1,o],r.dtype))]):(s=q(s,[-1,1]),r=q(r,[1,-1]),[Me(s,Gs([1,a],s.dtype)),Me(Gs([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e){let t=N(n,"a","minimum"),s=N(e,"b","minimum");[t,s]=tt(t,s),t.dtype==="bool"&&(t=Xe(t,"int32"),s=Xe(s,"int32")),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Yi,r)}const ai=I({minimum_:HA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n,e,t){T(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=N(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");T(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let i=0;i<s.rank;i++)T(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),T(e[i][0]>=0&&e[i][0]<=s.shape[i]-r&&e[i][1]>=0&&e[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},a={x:s};return k.runKernel(fd,a,o)}const J1=I({mirrorPad_:jA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,e){let t=N(n,"a","mod"),s=N(e,"b","mod");[t,s]=tt(t,s);const r={a:t,b:s};return k.runKernel(Qi,r)}const ev=I({mod_:KA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e=null,t=!1){n=N(n,"x","moments");const s=Pe(e,n.shape),r=oi(n,s,t);let o=r.shape;t||(o=ut(r.shape,s));const a=Cn(Ae(Xe(n,"float32"),q(r,o))),i=oi(a,s,t);return{mean:r,variance:i}}const tv=I({moments_:qA});function XA(n,e,t,s){const r=N(e,"data","multiRNNCell"),o=ei(t,"c","multiRNNCell"),a=ei(s,"h","multiRNNCell");let i=r;const c=[];for(let d=0;d<n.length;d++){const p=n[d](i,o[d],a[d]);c.push(p[0]),c.push(p[1]),i=p[1]}const l=[],u=[];for(let d=0;d<c.length;d+=2)l.push(c[d]),u.push(c[d+1]);return[l,u]}const nv=I({multiRNNCell_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e,t,s=!1){const r=N(n,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const c={logits:a===1?q(r,[1,-1]):r},l={numSamples:e,seed:t,normalized:s},u=k.runKernel(hd,c,l);return a===1?q(u,[u.size]):u}const sv=I({multinomial_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e){let t=N(n,"a","notEqual","string_or_numeric"),s=N(e,"b","notEqual","string_or_numeric");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s};return k.runKernel(Ji,r)}const qm=I({notEqual_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:N(n,"indices","oneHot","int32")},i={dtype:r,depth:e,onValue:t,offValue:s};return k.runKernel(wd,a,i)}const Wl=I({oneHot_:ZA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n){const t={x:N(n,"x","onesLike")};return k.runKernel(xd,t)}const rv=I({onesLike_:JA});function eR(n,e){const t=N(n,"v1","outerProduct"),s=N(e,"v2","outerProduct");T(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=q(t,[-1,1]),o=q(s,[1,-1]);return Me(r,o)}const ov=I({outerProduct_:eR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n,e,t=0){const s=N(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return k.runKernel($d,o,r)}const ua=I({pad_:tR});function nR(n,e,t=0){return T(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),ua(n,[e],t)}const av=I({pad1d_:nR});function sR(n,e,t=0){return T(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ua(n,e,t)}const iv=I({pad2d_:sR});function rR(n,e,t=0){return T(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ua(n,e,t)}const cv=I({pad3d_:rR});function oR(n,e,t=0){return T(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ua(n,e,t)}const lv=I({pad4d_:oR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,e,t){const s=N(n,"x","spaceToBatchND");T(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),T(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),T(s.shape.reduce((a,i,c)=>c>0&&c<=e.length?a&&(i+t[c-1][0]+t[c-1][1])%e[c-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return k.runKernel(Bd,r,o)}const Xm=I({spaceToBatchND_:aR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n,e,t,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=N(n,"x","maxPool");let c=i,l=!1;i.rank===3&&(l=!0,c=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(Et(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const u=En(c.shape,e,o,r,s),d=[u.dilationHeight,u.dilationWidth];let p;s==="same"?p=lR([u.filterHeight,u.filterWidth],d):p=[[0,0],[0,0]];const f=d[0]===1&&d[1]===1,[h,g]=cR([u.inHeight,u.inWidth],d,p),m=f?s:"valid",y=f?c:Xm(c,d,h),v=(t==="avg"?()=>Im(y,e,o,m,a):()=>jm(y,e,o,m,a))(),x=f?v:km(v,d,g);return l?q(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function cR(n,e,t){const s=t.map(u=>u[0]),r=t.map(u=>u[1]),o=n.concat(s,r),a=e.map((u,d)=>(u-o[d]%u)%u),i=r.map((u,d)=>u+a[d]),c=e.map((u,d)=>[s[d],i[d]]),l=e.map((u,d)=>[0,a[d]]);return[c,l]}function lR(n,e){const s=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const uv=I({pool_:iR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,e){const t=N(n,"x","prelu"),s=N(e,"alpha","prelu"),r={x:t,alpha:s};return k.runKernel(Cd,r)}const Ym=I({prelu_:uR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(n,e=null,t=!1){let s=N(n,"x","prod");s.dtype==="bool"&&(s=Xe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return k.runKernel(Nd,r,o)}const dv=I({prod_:dR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e,t,s){const r=n.map((u,d)=>N(u,`tensors${d}`,"raggedGather","int32")),o=N(e,"paramsDenseValues","raggedGather"),a=N(t,"indices","raggedGather","int32"),i={paramsNestedSplits:r,paramsDenseValues:o,indices:a},c={outputRaggedRank:s},l=k.runKernel(Td,i,c);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const pv=I({raggedGather_:pR});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n,e,t){const s=N(n,"starts","raggedRange"),r=N(e,"limits","raggedRange",s.dtype),o=N(t,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:o},i=k.runKernel(Sd,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const fv=I({raggedRange_:fR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,e,t,s,r){const o=N(n,"shape","raggedTensorToTensor","int32"),a=N(e,"values","raggedTensorToTensor"),i=N(t,"defaultValue","raggedTensorToTensor",a.dtype),c=s.map((d,p)=>N(d,`tensors${p}`,"raggedTensorToTensor","int32")),l={shape:o,values:a,defaultValue:i,rowPartitionTensors:c},u={rowPartitionTypes:r};return k.runKernel(Ed,l,u)}const hv=I({raggedTensorToTensor_:hR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,e,t){on(n);const s=G(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return k.makeTensor(r,n,t)}const mv=I({rand_:mR});var Qm={exports:{}};Qm.exports;(function(n){(function(e,t,s){function r(c){var l=this,u=i();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function a(c,l){var u=new r(c),d=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}function i(){var c=4022871197,l=function(u){u=String(u);for(var d=0;d<u.length;d++){c+=u.charCodeAt(d);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(ir,n,!1)})(Qm);var gR=Qm.exports,Zm={exports:{}};Zm.exports;(function(n){(function(e,t,s){function r(i){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,h=(p+f)/(1<<21);while(h===0);return h},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(ir,n,!1)})(Zm);var yR=Zm.exports,Jm={exports:{}};Jm.exports;(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,h=(p+f)/(1<<21);while(h===0);return h},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(ir,n,!1)})(Jm);var bR=Jm.exports,eg={exports:{}};eg.exports;(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.x,d=c.i,p,f;return p=u[d],p^=p>>>7,f=p^p<<24,p=u[d+1&7],f^=p^p>>>10,p=u[d+3&7],f^=p^p>>>3,p=u[d+4&7],f^=p^p<<7,p=u[d+7&7],p=p^p<<13,f^=p^p<<9,u[d]=f,c.i=d+1&7,f};function l(u,d){var p,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,p=0;p<d.length;++p)f[p&7]=f[p&7]<<15^d.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?f[7]=-1:f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(c,i)}function o(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,h=(p+f)/(1<<21);while(h===0);return h},d.int32=l.next,d.quick=d,u&&(u.x&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(ir,n,!1)})(eg);var xR=eg.exports,tg={exports:{}};tg.exports;(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.w,d=c.X,p=c.i,f,h;return c.w=u=u+1640531527|0,h=d[p+34&127],f=d[p=p+1&127],h^=h<<13,f^=f<<17,h^=h>>>15,f^=f>>>12,h=d[p]=h^f,c.i=p,h+(u^u>>>16)|0};function l(u,d){var p,f,h,g,m,y=[],b=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,b=Math.max(b,d.length)),h=0,g=-32;g<b;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,p=y[g&127]^=f+m,h=p==0?h+1:0);for(h>=128&&(y[(d&&d.length||0)&127]=-1),h=127,g=4*128;g>0;--g)f=y[h+34&127],p=y[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,y[h]=f^p;u.w=m,u.X=y,u.i=h}l(c,i)}function o(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,h=(p+f)/(1<<21);while(h===0);return h},d.int32=l.next,d.quick=d,u&&(u.X&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(ir,n,!1)})(tg);var wR=tg.exports,ng={exports:{}};ng.exports;(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.b,p=c.c,f=c.d,h=c.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^h,h=h-d|0,c.b=d=d<<20^d>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^h,c.a=h-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,h=(p+f)/(1<<21);while(h===0);return h},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(ir,n,!1)})(ng);var vR=ng.exports,gv={exports:{}};const $R={},CR=Object.freeze(Object.defineProperty({__proto__:null,default:$R},Symbol.toStringTag,{value:"Module"})),NR=gm(CR);(function(n){(function(e,t,s){var r=256,o=6,a=52,i="random",c=s.pow(r,o),l=s.pow(2,a),u=l*2,d=r-1,p;function f(x,$,C){var S=[];$=$==!0?{entropy:!0}:$||{};var E=y(m($.entropy?[x,v(t)]:x??b(),3),S),R=new h(S),A=function(){for(var D=R.g(o),L=c,F=0;D<l;)D=(D+F)*r,L*=r,F=R.g(1);for(;D>=u;)D/=2,L/=2,F>>>=1;return(D+F)/L};return A.int32=function(){return R.g(4)|0},A.quick=function(){return R.g(4)/4294967296},A.double=A,y(v(R.S),t),($.pass||C||function(D,L,F,B){return B&&(B.S&&g(B,R),D.state=function(){return g(R,{})}),F?(s[i]=D,L):D})(A,E,"global"in $?$.global:this==s,$.state)}function h(x){var $,C=x.length,S=this,E=0,R=S.i=S.j=0,A=S.S=[];for(C||(x=[C++]);E<r;)A[E]=E++;for(E=0;E<r;E++)A[E]=A[R=d&R+x[E%C]+($=A[E])],A[R]=$;(S.g=function(D){for(var L,F=0,B=S.i,W=S.j,V=S.S;D--;)L=V[B=d&B+1],F=F*r+V[d&(V[B]=V[W=d&W+L])+(V[W]=L)];return S.i=B,S.j=W,F})(r)}function g(x,$){return $.i=x.i,$.j=x.j,$.S=x.S.slice(),$}function m(x,$){var C=[],S=typeof x,E;if($&&S=="object")for(E in x)try{C.push(m(x[E],$-1))}catch{}return C.length?C:S=="string"?x:x+"\0"}function y(x,$){for(var C=x+"",S,E=0;E<C.length;)$[d&E]=d&(S^=$[d&E]*19)+C.charCodeAt(E++);return v($)}function b(){try{var x;return p&&(x=p.randomBytes)?x=x(r):(x=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(x)),v(x)}catch{var $=e.navigator,C=$&&$.plugins;return[+new Date,e,C,e.screen,v(t)]}}function v(x){return String.fromCharCode.apply(0,x)}if(y(s.random(),t),n.exports){n.exports=f;try{p=NR}catch{}}else s["seed"+i]=f})(typeof self<"u"?self:ir,[],Math)})(gv);var TR=gv.exports,SR=gR,ER=yR,_R=bR,IR=xR,kR=wR,AR=vR,co=TR;co.alea=SR;co.xor128=ER;co.xorwow=_R;co.xorshift7=IR;co.xor4096=kR;co.tychei=AR;var dp=co;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR=.001,yv=.1;function OR(n,e,t){return t==null&&(t=sg()),sh(n,e,(s,r)=>rg(s,r,t))}function sg(){return k.backend.floatPrecision()===32?RR:yv}function sh(n,e,t){let s=!0;if((ft(n)||ft(e))&&(s=!1),ft(n)&&ft(e)&&(s=!0),s){const a=n.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=ss(n),i=ss(e);if(!Ue(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}const r=ft(n)?n:ns(n),o=ft(e)?e:ns(e);if(r.length!==o.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${o.length}.
Actual:   ${r}.
Expected: ${o}.`);for(let a=0;a<o.length;++a){const i=r[a],c=o[a];if(!t(i,c))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${c}.
Actual:   ${r}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function DR(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function FR(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Yn(n)||Yn(n[0])||Yn(e)||Yn(e[0])?sh(n,t,(s,r)=>s==r):sh(n,e,(s,r)=>rg(s,r,0))}function PR(n,e,t){if(t==null&&(t=sg()),!rg(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function rg(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function LR(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function VR(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let r=0;r<s.length;r++)if(t[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${t[r]} instead`)}function bv(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?bv(t):n[e]=Zn(t)}return n}function MR(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function BR(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const WR=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:yv,createVideoElement:MR,encodeStrings:bv,expectArrayBuffersEqual:VR,expectArraysClose:OR,expectArraysEqual:FR,expectNumbersClose:PR,expectPromiseToFail:DR,expectValuesInRange:LR,play:BR,testEpsilon:sg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class og{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=dp.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class zR{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=dp.alea(o.toString()),this.randn=new og(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class UR{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n,e,t=1,s="float32",r){if(on(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new zR(e,t,s,r),a=Ee(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const xv=I({randomGamma_:GR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e=0,t=1,s,r){if(on(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new og(e,t,s,!1,r),a=Ee(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const ag=I({randomNormal_:HR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return ag(n,0,1,e,t)}const wv=I({randomStandardNormal_:jR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n,e=0,t=1,s="float32",r){on(n);const o=Ee(n,s),a=new UR(e,t,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const pp=I({randomUniform_:KR});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t,s){return pp(n,e,t,"int32",s)}const vv=I({randomUniformInt_:qR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return k.runKernel(_d,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n){const t={input:N(n,"input","real")};return k.runKernel(Id,t)}const jo=I({real_:XR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const t={x:N(n,"x","reciprocal")};return k.runKernel(tc,t)}const $v=I({reciprocal_:YR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n){const t={x:N(n,"x","relu")};return k.runKernel(nc,t)}const Ic=I({relu_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n){const t={x:N(n,"x","relu6")};return k.runKernel(sc,t)}const ig=I({relu6_:ZR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n,e){const s={x:N(n,"x","reverse")},r={dims:e};return k.runKernel(Od,s,r)}const nr=I({reverse_:JR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n){const e=N(n,"x","reverse");return T(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),nr(e,0)}const Cv=I({reverse1d_:eO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n,e){const t=N(n,"x","reverse");return T(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),nr(t,e)}const Nv=I({reverse2d_:tO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e){const t=N(n,"x","reverse");return T(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),nr(t,e)}const Tv=I({reverse3d_:nO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(n,e){const t=N(n,"x","reverse");return T(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),nr(t,e)}const Sv=I({reverse4d_:sO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){const t={x:N(n,"x","round")};return k.runKernel(rc,t)}const cg=I({round_:rO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const t={x:N(n,"x","rsqrt","float32")};return k.runKernel(oc,t)}const Ev=I({rsqrt_:oO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n){const t={x:N(n,"x","selu")};return k.runKernel(ac,t)}const _v=I({selu_:aO});function iO(n,e,t,s,r,o=[1,1],a="NHWC"){const i=N(n,"x","separableConv2d"),c=N(e,"depthwiseFilter","separableConv2d"),l=N(t,"pointwiseFilter","separableConv2d");let u=i,d=!1;if(i.rank===3&&(d=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");T(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),T(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),T(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),T(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),T(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const p=c.shape[2],f=c.shape[3];T(l.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${l.shape[2]}.`);const h=ip(u,c,s,r,a,o),m=Nc(h,l,1,"valid",a);return d?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Iv=I({separableConv2d_:iO});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cO(n,e){const t=N(n,"x","setdiff1d"),s=N(e,"y","setdiff1d");T(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),T(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),T(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),a=new Set(o);let i=0;for(let u=0;u<r.length;u++)a.has(r[u])||i++;const c=new lt([i],t.dtype),l=new lt([i],"int32");for(let u=0,d=0;u<r.length;u++)a.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]}const kv=cO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(n){const t={x:N(n,"x","sign")};return k.runKernel(lc,t)}const Av=I({sign_:lO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n){const t={x:N(n,"x","sin","float32")};return k.runKernel(ic,t)}const Rv=I({sin_:uO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n){const t={x:N(n,"x","sinh")};return k.runKernel(cc,t)}const Ov=I({sinh_:dO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t){const s=N(n,"x","slice1d");return T(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),He(s,[e],[t])}const Dv=I({slice1d_:pO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n,e,t){const s=N(n,"x","slice2d");return T(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),He(s,e,t)}const Fv=I({slice2d_:fO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e,t){const s=N(n,"x","slice3d");return T(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),He(s,e,t)}const Pv=I({slice3d_:hO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,e,t){const s=N(n,"x","slice4d");return T(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),He(s,e,t)}const Lv=I({slice4d_:mO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return k.runKernel(zd,s,r)}const Vv=I({softmax_:gO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n){T(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return k.runKernel(Yu,e)}const fp=I({fft_:yO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){T(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return k.runKernel(nd,e)}const ii=I({ifft_:bO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=q(n,[t,e]);s=ii(r)}else{const r=[t,2*(e-1)],o=q(jo(n),[t,e]),a=q(_c(n),[t,e]),i=nr(He(o,[0,1],[t,e-2]),1),c=de(nr(He(a,[0,1],[t,e-2]),1),Oe(-1)),l=Tt([o,i],1),u=Tt([a,c],1),d=q(Cs(l,u),[r[0],r[1]]);s=ii(d)}if(s=jo(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=q(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const lg=I({irfft_:xO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n,e,t=0){const r={x:N(n,"x","split")},o={numOrSizeSplits:e,axis:t};return k.runKernel(Wd,r,o)}const Ko=I({split_:wO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n,e){T(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const h=n.shape.map(m=>0),g=n.shape.map(m=>m);g[n.shape.length-1]=e,r=He(n,h,g),t=e}else if(e!=null&&e>t){const h=n.shape.map(g=>g);h[n.shape.length-1]=e-t,r=Tt([n,tr(h)],n.shape.length-1),t=e}else r=n;const o=tn(r),a=q(Cs(r,o),[s,t]),i=fp(a),c=Math.floor(t/2)+1,l=jo(i),u=_c(i),d=Ko(l,[c,t-c],l.shape.length-1),p=Ko(u,[c,t-c],u.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=c,q(Cs(d[0],p[0]),f)}const hp=I({rfft_:vO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n,e){let t=N(n,"a","squaredDifference"),s=N(e,"b","squaredDifference");[t,s]=tt(t,s),Re(t.shape,s.shape);const r={a:t,b:s},o={};return k.runKernel(fc,r,o)}const ug=I({squaredDifference_:$O});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(n,e){const t=N(n,"x","squeeze","string_or_numeric");return q(t,_s(t.shape,e).newShape)}const mp=I({squeeze_:CO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n,e=0){const t=ei(n,"tensors","stack","string_or_numeric");T(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&T(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return k.runKernel(vd,s,r)}const as=I({stack_:NO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(n,e=0){const s={x:N(n,"x","step")},r={alpha:e};return k.runKernel(xc,s,r)}const dg=I({step_:TO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n,e,t,s,r=0,o=0,a=0,i=0,c=0){const u={x:N(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};return k.runKernel(qd,u,d)}const Mv=I({stridedSlice_:SO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const t={x:N(n,"x","tan","float32")};return k.runKernel(gc,t)}const Bv=I({tan_:EO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(n,e){ro(n);const t=ss(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return lr(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(n,e,t){if(ro(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=ss(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return lr(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pg(n,e,t){if(ro(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=ss(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return lr(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(n,e,t){if(ro(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=ss(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return lr(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(n,e,t){if(ro(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=ss(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return lr(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(n,e,t){if(ro(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=ss(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,lr(n,e,s,t)}function fg(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function gp(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}fg(t,e,n)}function dr(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let a=1;for(let d=r;d<o;++d)a*=t[d];const i=r<1?1:r,c=G(e.shape)/i,l=[...we(t.slice(0,r)),1],u=G(t);return{sliceRank:r,numUpdates:c,sliceSize:a,strides:l,outputSize:u}}const _O=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:dr,validateInput:gp,validateUpdateShape:fg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e,t){const s=N(n,"tensor","tensorScatterupdate"),r=N(e,"indices","tensorScatterupdate","int32"),o=N(t,"updates","tensorScatterupdate");if(gp(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const a={tensor:s,indices:r,updates:o},i={};return k.runKernel(Fd,a,i)}const Gv=I({tensorScatterUpdate_:IO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n,e=1,t=!0){const s=N(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},a={k:e,sorted:t},[i,c]=k.runKernel(Zd,o,a);return{values:i,indices:c}}const Hv=I({topk_:kO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n,e=0,t=1,s,r){if(on(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new og(e,t,s,!0,r),a=Ee(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const jv=I({truncatedNormal_:AO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n,e=0){const t=N(n,"x","unique","string_or_numeric");T(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,a]=k.runKernel(ep,s,r);return{values:o,indices:a}}const Kv=I({unique_:RO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n,e,t){const s=N(n,"x","unsortedSegmentSum"),r=N(e,"segmentIds","unsortedSegmentSum","int32");T(Ur(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:t};return k.runKernel(np,o,a)}const qv=I({unsortedSegmentSum_:OO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n,e=0){const t=N(n,"x","unstack","string_or_numeric");T(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return k.runKernel(tp,s,r)}const pr=I({unstack_:DO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n,e){return up(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv(n,e=!0,t,s){return k.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Ee(n,"int32"),r=Ee([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=s.indexToLoc(t[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FO(n){const e=N(n,"condition","whereAsync","bool"),t=await e.data(),s=yp(e.shape,t);return n!==e&&e.dispose(),s}const hg=FO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PO(n,e,t){const s=N(n,"tensor","boolMask"),r=N(e,"mask","boolMask","bool"),o=t??0,a=r.rank,i=s.shape;T(a>0,()=>"mask cannot be scalar"),wt(i.slice(o,o+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let g=o;g<o+a;g++)c*=i[g];const l=i.slice(0,o).concat([c],i.slice(o+a)),u=q(s,l),d=q(r,[-1]),p=await hg(d),f=mp(p,[1]),h=Vm(u,f,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),f.dispose(),u.dispose(),d.dispose(),p.dispose(),h}const Qv=PO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,e,t){const s=N(n,"x","transpose");if(e==null&&(e=s.shape.map((a,i)=>i).reverse()),T(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{T(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?Ve(()=>{let a=jo(s),i=_c(s);return a=k.runKernel(Ao,{x:a},o),i=k.runKernel(Ao,{x:i},o),t&&(i=Bn(i)),Cs(a,i)}):k.runKernel(Ao,r,o)}const ci=I({transpose_:LO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n,e,t,s,r=!0){const o=N(n,"v","movingAverage"),a=N(e,"x","movingAverage"),i=N(t,"decay","movingAverage");Aw(o,a),T(Ue(o.shape,a.shape),()=>"Shape mismatch in v and x");const c=Oe(1),l=Ae(c,i);let u=de(Ae(a,o),l);if(r){T(s!=null,()=>"When using zeroDebias: true, step is required.");const d=N(s,"step","movingAverage");u=qe(u,Ae(c,Uo(i,d)))}return Te(o,u)}const Zv=I({movingAverage_:VO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n,e,t){on(t);const s=N(n,"indices","scatterND","int32"),r=N(e,"updates","scatterND");gp(r,s,t);const o={indices:s,updates:r},a={shape:t};return k.runKernel(Dd,o,a)}const Jv=I({scatterND_:MO});function BO(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,e,t,s=0){on(t);const r=N(n,"sparseIndices","sparseToDense","int32"),o=N(e,"sparseValues","sparseToDense","string_or_numeric"),a=N(s,"defaultValue","sparseToDense",o.dtype);BO(r,o,t,a);const i={sparseIndices:r,sparseValues:o,defaultValue:a},c={outputShape:t};return k.runKernel(Kd,i,c)}const e$=I({sparseToDense_:WO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(n,e){const t=N(e,"indices","gatherND","int32"),r={params:N(n,"x","gatherND","string_or_numeric"),indices:t};return k.runKernel(td,r)}const t$=I({gatherND_:zO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n,e){if(e==null)return n.shape.slice();if(Ue(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(n,e,t,s){const r=N(n,"x","dropout");if(T(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),T(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof nt?r.clone():r;const o=UO(r,t),a=1-e,i=qe(Lm(Te(pp(o,0,1,"float32",s),a)),a);return de(r,i)}const n$=I({dropout_:GO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mg(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function bp(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(a)}return un(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HO(n,e,t=1){const s=N(n,"predictions","inTopK"),r=N(e,"targets","inTopK");T(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),T(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),wt(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];T(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=await s.data(),i=await r.data(),[c,l]=[a.length/o,o],u=ht("bool",c);for(let d=0;d<c;d++){const p=d*l,f=a.subarray(p,p+l),h=[];for(let g=0;g<f.length;g++)h.push({value:f[g],index:g});h.sort((g,m)=>m.value-g.value),u[d]=0;for(let g=0;g<t;g++)if(h[g].index===i[d]){u[d]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Mn(u,r.shape,"bool")}const s$=HO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n,e,t,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=q(e,[1,e.shape[0],e.shape[1],e.shape[2]])),T(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),T(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),T(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=o==="NHWC"?i.shape[3]:i.shape[1],u=o==="NHWC"?c.shape[3]:c.shape[1];T(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),T(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),_n("conv2dDerFilter",r,a);const d={x:i,dy:c},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:t};return k.runKernel(Ou,d,p)}const KO=I({conv2DBackpropFilter_:jO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return de(n,dg(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function wp(n,e){let t=e;const s=Rm(n.shape,e.shape);return s.length>0&&(t=Ke(t,s)),q(t,n.shape)}function vp(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Ic(n);if(e==="elu")return Dm(n);if(e==="relu6")return ig(n);if(e==="prelu")return Ym(n,t);if(e==="leakyrelu")return Bm(n,s);if(e==="sigmoid")return Mr(n);throw new Error(`Unknown fused activation ${e}.`)}const $p=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",$p(k.state.gradientDepth,c)===!1){T(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Nc(n,e,t,s,r,o,a);return i!=null&&(C=Te(C,i)),vp(C,c,l,u)}const d=N(n,"x","conv2d","float32"),p=N(e,"filter","conv2d","float32");let f=d,h=!1;d.rank===3&&(h=!0,f=q(d,[1,d.shape[0],d.shape[1],d.shape[2]])),T(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),T(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),_n("fused conv2d",s,a);const g=r==="NHWC"?f.shape[3]:f.shape[1];T(p.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`),T(Et(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const m=mt(f.shape,p.shape,t,o,s,a);let y;i!=null&&(y=N(i,"bias","fused conv2d"),[y]=tt(y,d),r==="NHWC"?Re(m.outShape,y.shape):(T(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),T(y.shape.length===0||y.shape[0]===m.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let b;if(l!=null){const C=l.shape;if(T(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)T(C[0]===1||C[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${m.outChannels}).`);else if(C.length===3)try{Re(C,m.outShape)}catch{const E=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(E)}b=N(l,"prelu weights","fused conv2d")}const v=(C,S)=>{T(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[E,R,A,D]=S,L=xp(C,A,c);T(si(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const F=w1(R.shape,L,E,t,s),B=KO(R,L,E.shape,t,s),W=[F,B];if(D!=null){const V=wp(D,L);W.push(V)}return W},x={x:f,filter:p,bias:y,preluActivationWeights:b},$={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return i==null?os((S,E,R)=>{let A=k.runKernel(Xa,x,$);return R([E,S,A]),h&&(A=q(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:v}})(f,p):os((S,E,R,A)=>{let D=k.runKernel(Xa,x,$);return A([E,S,D,R]),h&&(D=q(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:v}})(f,p,y)}const XO=I({fusedConv2d_:qO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YO(n,e,t,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:t};return k.runKernel(Uu,l,u)}const QO=I({depthwiseConv2dNativeBackpropFilter_:YO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n,e,t,s,r,o=[1,1],a){let i=e,c=!1;e.rank===3&&(c=!0,i=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:t},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=k.runKernel(Gu,l,u);return c?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const JO=I({depthwiseConv2dNativeBackpropInput_:ZO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if($p(k.state.gradientDepth,c)===!1){let $=ip(n,e,t,s,r,o,a);return i!=null&&($=Te($,i)),vp($,c,l,u)}const d=N(n,"x","depthwiseConv2d","float32"),p=N(e,"filter","depthwiseConv2d","float32");let f=d,h=!1;d.rank===3&&(h=!0,f=q(d,[1,d.shape[0],d.shape[1],d.shape[2]])),T(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),T(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),T(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),o==null&&(o=[1,1]),T(Et(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),_n("fused depthwiseConv2d",s,a);const g=mt(f.shape,p.shape,t,o,s,a,!0);let m;i!=null&&(m=N(i,"bias","fused conv2d"),[m]=tt(m,d),Re(g.outShape,m.shape));let y;l!=null&&(y=N(l,"prelu weights","fused depthwiseConv2d"));const b=($,C)=>{T(si(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[S,E,R,A]=C,D=xp($,R,c),L=JO(E.shape,D,S,t,s,o,a),F=QO(E,D,S.shape,t,s,o,a);if(A!=null){const B=wp(m,D);return[L,F,B]}return[L,F]},v={x:f,filter:p,bias:m,preluActivationWeights:y},x={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return i==null?os((C,S,E)=>{let R=k.runKernel(Ya,v,x);return E([S,C,R]),h&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:b}})(f,p):os((C,S,E,R)=>{let A=k.runKernel(Ya,v,x);return R([S,C,A,E]),h&&(A=q(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(f,p,m)}const tD=I({fusedDepthwiseConv2d_:eD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if($p(k.state.gradientDepth,o)===!1){let D=Me(n,e,t,s);return r!=null&&(D=Te(D,r)),vp(D,o,a,i)}let c=N(n,"a","fused matMul"),l=N(e,"b","fused matMul");[c,l]=tt(c,l);const u=t?c.shape[c.rank-2]:c.shape[c.rank-1],d=s?l.shape[l.rank-1]:l.shape[l.rank-2],p=t?c.shape[c.rank-1]:c.shape[c.rank-2],f=s?l.shape[l.rank-2]:l.shape[l.rank-1],h=c.shape.slice(0,-2),g=l.shape.slice(0,-2),m=G(h),y=G(g);T(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=Re(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),x=t?q(c,[m,u,p]):q(c,[m,p,u]),$=s?q(l,[y,f,d]):q(l,[y,d,f]);let C;r!=null&&(C=N(r,"bias","fused matMul"),[C]=tt(C,c),Re(v,C.shape));let S;a!=null&&(S=N(a,"prelu weights","fused matMul"));const E=(D,L)=>{const[F,B,W,V]=L,z=xp(q(D,W.shape),W,o);let M,j;if(!t&&!s?(M=Me(z,B,!1,!0),j=Me(F,z,!0,!1)):!t&&s?(M=Me(z,B,!1,!1),j=Me(z,F,!0,!1)):t&&!s?(M=Me(B,z,!1,!0),j=Me(F,z,!1,!1)):(M=Me(B,z,!0,!0),j=Me(z,F,!0,!0)),r!=null){const J=wp(V,z);return[M,j,J]}else return[M,j]},R={a:x,b:$,bias:C,preluActivationWeights:S},A={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?os((L,F,B)=>{const W=k.runKernel(qa,R,A);return B([L,F,W]),{value:q(W,v),gradFunc:E}})(x,$):os((L,F,B,W)=>{const V=k.runKernel(qa,R,A);return W([L,F,V,B]),{value:q(V,v),gradFunc:E}})(x,$,C)}const sD=I({fusedMatMul_:nD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r$=Object.freeze(Object.defineProperty({__proto__:null,conv2d:XO,depthwiseConv2d:tD,matMul:sD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n){return bp(n,.54,.46)}const oD=I({hammingWindow_:rD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n){return bp(n,.5,.5)}const o$=I({hannWindow_:aD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e,t,s=!1,r=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(He(n,o,e)),o+=t;if(s)for(;o<n.size;){const i=o+e-n.size,c=Tt([He(n,o,e-i),la([i],r)]);a.push(c),o+=t}return a.length===0?Po([],[0,e]):q(Tt(a),[a.length,e])}const a$=I({frame_:iD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e,t,s,r=o$){s==null&&(s=mg(e));const o=a$(n,e,t),a=de(o,r(e));return hp(a,s)}const lD=I({stft_:cD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e,t,s,r="bilinear",o=0){const a=N(n,"image","cropAndResize"),i=N(e,"boxes","cropAndResize","float32"),c=N(t,"boxInd","cropAndResize","int32"),l=i.shape[0];T(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),T(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),T(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),T(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),T(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),T(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:a,boxes:i,boxInd:c},d={method:r,extrapolationValue:o,cropSize:s};return k.runKernel(Mu,u,d)}const dD=I({cropAndResize_:uD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n){const e=N(n,"image","flipLeftRight","float32");T(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return k.runKernel(Zu,t,{})}const fD=I({flipLeftRight_:pD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];T(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),T(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Fo(e,r)}const mD=I({grayscaleToRGB_:hD});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n){const e=N(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];T(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),T(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=Xe(e,"float32"),a=un([.2989,.587,.114]);let i;switch(e.rank){case 2:i=_r("ij,j->i",o,a);break;case 3:i=_r("ijk,k->ij",o,a);break;case 4:i=_r("ijkl,l->ijk",o,a);break;case 5:i=_r("ijklm,m->ijkl",o,a);break;case 6:i=_r("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=ds(i,-1),Xe(i,r)}const yD=I({rgbToGrayscale_:gD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e,t=0,s=.5){const r=N(n,"image","rotateWithOffset","float32");T(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:e,fillValue:t,center:s};return k.runKernel(rp,o,a)}const xD=I({rotateWithOffset_:bD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),T(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),T(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),T(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),T(e.rank===1,()=>"scores must be a 1D tensor"),T(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),T(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=N(n,"boxes","nonMaxSuppression","float32"),a=N(e,"scores","nonMaxSuppression","float32"),i=da(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return k.runKernel(gd,{boxes:o,scores:a},c)}const vD=I({nonMaxSuppression_:wD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n,e,t){const s=CD(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function CD(n,e,t){return TD(n,e,t||ND)}function ND(n,e){return n>e?1:n<e?-1:0}function TD(n,e,t){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=t(e,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cp(n,e,t,s,r){return gg(n,e,t,s,r,0)}function Np(n,e,t,s,r,o){return gg(n,e,t,s,r,0,!1,o,!0)}function Tp(n,e,t,s,r,o){return gg(n,e,t,s,r,o,!0)}function gg(n,e,t,s,r,o,a=!1,i=!1,c=!1){const l=[];for(let m=0;m<e.length;m++)e[m]>r&&l.push({score:e[m],boxIndex:m,suppressBeginIndex:0});l.sort(Ib);const u=o>0?-.5/o:0,d=[],p=[];for(;d.length<t&&l.length>0;){const m=l.pop(),{score:y,boxIndex:b,suppressBeginIndex:v}=m;if(y<r)break;let x=!1;for(let $=d.length-1;$>=v;--$){const C=SD(n,b,d[$]);if(C>=s){x=!0;break}if(m.score=m.score*ED(s,u,C),m.score<=r)break}m.suppressBeginIndex=d.length,x||(m.score===y?(d.push(b),p.push(m.score)):m.score>r&&$D(l,m,Ib))}const f=d.length,h=t-f;i&&h>0&&(d.push(...new Array(h).fill(0)),p.push(...new Array(h).fill(0)));const g={selectedIndices:d};return a&&(g.selectedScores=p),c&&(g.validOutputs=f),g}function SD(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),f=(i-o)*(c-a),h=(d-l)*(p-u);if(f<=0||h<=0)return 0;const g=Math.max(o,l),m=Math.max(a,u),y=Math.min(i,d),b=Math.min(c,p),v=Math.max(y-g,0)*Math.max(b-m,0);return v/(f+h-v)}function ED(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function Ib(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _D(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),i=da(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),a.data()]),l=c[0],u=c[1],{selectedIndices:d}=Cp(l,u,t,s,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),un(d,"int32")}const ID=_D;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),c=da(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l={boxes:a,scores:i},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=k.runKernel(bd,l,u);return{selectedIndices:d[0],selectedScores:d[1]}}const AD=I({nonMaxSuppressionWithScore_:kD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function RD(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=N(n,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),c=da(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:p,selectedScores:f}=Tp(u,d,t,s,r,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:un(p,"int32"),selectedScores:un(f)}}const OD=RD;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),c=da(a,i,t,s,r,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,p={boxes:a,scores:i},f={maxOutputSize:l,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:o},h=k.runKernel(yd,p,f);return{selectedIndices:h[0],validOutputs:h[1]}}const FD=I({nonMaxSuppressionPadded_:DD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PD(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=N(n,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),c=da(a,i,t,s,r,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,[p,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:h,validOutputs:g}=Np(p,f,l,u,d,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:un(h,"int32"),validOutputs:Oe(g,"int32")}}const LD=PD;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(n,e,t=!1,s=!1){const r=N(n,"images","resizeBilinear");T(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),T(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),T(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=k.runKernel(Rd,i,c);return a?q(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const MD=I({resizeBilinear_:VD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,e,t=!1,s=!1){const r=N(n,"images","resizeNearestNeighbor");T(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),T(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),T(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),T(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=k.runKernel(Ad,i,c);return a?q(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const WD=I({resizeNearestNeighbor_:BD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n,e="binary",t=!1,s=.5){const r=N(n,"image","threshold"),o=.2989,a=.587,i=.114,c=r.shape[0]*r.shape[1];let l=de(un([s]),255),u,d,p,f;if(T(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),T(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),T(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),T(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[u,d,p]=Ko(r,[1,1,1],-1);const m=de(u,o),y=de(d,a),b=de(p,i);f=Te(Te(m,y),b)}else f=n;if(e==="otsu"){const m=Am(Xe(cg(f),"int32"),Mn([]),256);l=UD(m,c)}const h=t?cp(f,l):Ec(f,l);return Xe(de(h,255),"int32")}function UD(n,e){let t=un([-1]),s=un([0]),r=un([0]),o,a,i,c,l,u;for(let d=0;d<n.size-1;d++){o=He(n,0,d+1),a=He(n,d+1),l=qe(Ke(o),e),u=qe(Ke(a),e);const p=Ke(de(o,Ho(0,o.size)));i=qe(p,Ke(o));const f=la(a.shape,o.size),h=Te(Ho(0,a.size),f),g=de(a,h);c=qe(Ke(g),Ke(a));const m=Ae(i,c),y=Ae(i,c),b=de(l,u);r=de(de(b,m),y);const v=Ec(r,s);s=xs(v,r,s),t=xs(v,un([d]),t)}return t}const GD=I({threshold_:zD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(n,e,t="nearest",s="constant",r=0,o){const a=N(n,"image","transform","float32"),i=N(e,"transforms","transform","float32");T(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),T(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),T(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const c={image:a,transforms:i},l={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return k.runKernel(Jd,c,l)}const jD=I({transform_:HD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n,e,t){const s=N(n,"a","bandPart");T(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);let i,c;typeof e=="number"?(T(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),T(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=N(e<0?o:e,"numLower","bandPart")):(T(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=xs(Bl(e,0),o,ai(e,o))),typeof t=="number"?(T(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),T(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),c=N(t<0?a:t,"numUpper","bandPart")):(T(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=xs(Bl(t,0),a,ai(t,a)));const l=q(Ho(0,o,1,"int32"),[-1,1]),u=Ho(0,a,1,"int32"),d=Ae(l,u),p=ri(cp(d,i),Mm(d,Bn(c))),f=tr([o,a],s.dtype);return q(as(pr(q(s,[-1,o,a])).map(h=>xs(p,h,f))),r)}const qD=I({bandPart_:KD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n){let e;if(Array.isArray(n)){e=!1,T(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)T(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=Ko(n,n.shape[0],0).map(r=>mp(r,[0]));T(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(k.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=de(Ke(de(t[a],o)),t[a]);o=Ae(o,i)}return qe(o,Sc(o,"euclidean"))}));return e?as(t,0):t}const YD=I({gramSchmidt_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n,e=!1){if(T(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return kb(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,l)=>c*l),s=pr(q(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(c=>{const[l,u]=kb(c,e);r.push(l),o.push(u)});const a=q(as(r,0),n.shape),i=q(as(o,0),n.shape);return[a,i]}}function kb(n,e=!1){return k.tidy(()=>{T(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=Pm(t),o=bs(n);const a=Po([[1]],[1,1]);let i=bs(a);const c=t>=s?s:t;for(let l=0;l<c;++l){const u=o,d=i,p=r;[i,o,r]=k.tidy(()=>{const f=He(o,[l,l],[t-l,1]),h=Sc(f),g=He(o,[l,l],[1,1]),m=xs(Ec(g,0),Po([[-1]]),Po([[1]])),y=Ae(g,de(m,h)),b=qe(f,y);b.shape[0]===1?i=bs(a):i=Tt([a,He(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const v=Bn(qe(Me(m,y),h)),x=He(o,[l,0],[t-l,s]),$=de(v,i),C=ci(i);if(l===0)o=Ae(x,Me($,Me(C,x)));else{const R=Ae(x,Me($,Me(C,x)));o=Tt([He(o,[0,0],[l,s]),R],0)}const S=ci($),E=He(r,[0,l],[t,r.shape[1]-l]);if(l===0)r=Ae(E,Me(Me(E,i),S));else{const R=Ae(E,Me(Me(E,i),S));r=Tt([He(r,[0,0],[t,l]),R],1)}return[i,o,r]}),Dt([u,d,p])}return!e&&t>s&&(r=He(r,[0,0],[t,s]),o=He(o,[0,0],[s,s])),[r,o]})}const ZD=I({qr_:QD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Rt||(Rt={}));function JD(n,e,t=Rt.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=N(e,"weights","computeWeightedLoss"));const o=r==null?s:de(s,r);if(t===Rt.NONE)return o;if(t===Rt.SUM)return Ke(o);if(t===Rt.MEAN){if(r==null)return oi(o);{const a=s.size/r.size,i=qe(Ke(o),Ke(r));return a>1?qe(i,Oe(a)):i}}if(t===Rt.SUM_BY_NONZERO_WEIGHTS){if(r==null)return qe(Ke(o),Oe(s.size));{const a=de(r,Gs(s.shape)),i=Xe(Ke(qm(a,Oe(0))),"float32");return qe(Ke(o),i)}}throw Error(`Unknown reduction: ${t}`)}const Rs=I({computeWeightedLoss_:JD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n,e,t,s=Rt.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","absoluteDifference"),o=N(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=N(t,"weights","absoluteDifference")),wt(r.shape,o.shape,"Error in absoluteDifference: ");const i=Yt(Ae(r,o));return Rs(i,a,s)}const tF=I({absoluteDifference_:eF});function nF(n,e,t,s,r=Rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","cosineDistance"),a=N(e,"predictions","cosineDistance");let i=null;s!=null&&(i=N(s,"weights","cosineDistance")),wt(o.shape,a.shape,"Error in cosineDistance: ");const c=Oe(1),l=Ae(c,Ke(de(o,a),t,!0));return Rs(l,i,r)}const sF=I({cosineDistance_:nF});function rF(n,e,t,s=Rt.SUM_BY_NONZERO_WEIGHTS){let r=N(n,"labels","hingeLoss");const o=N(e,"predictions","hingeLoss");let a=null;t!=null&&(a=N(t,"weights","hingeLoss")),wt(r.shape,o.shape,"Error in hingeLoss: ");const i=Oe(1);r=Ae(de(Oe(2),r),i);const c=Ic(Ae(i,de(r,o)));return Rs(c,a,s)}const oF=I({hingeLoss_:rF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n,e,t,s=1,r=Rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","huberLoss"),a=N(e,"predictions","huberLoss");let i=null;t!=null&&(i=N(t,"weights","huberLoss")),wt(o.shape,a.shape,"Error in huberLoss: ");const c=Oe(s),l=Yt(Ae(a,o)),u=ai(l,c),d=Ae(l,u),p=Te(de(Oe(.5),Cn(u)),de(c,d));return Rs(p,i,r)}const iF=I({huberLoss_:aF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n,e,t,s=1e-7,r=Rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","logLoss"),a=N(e,"predictions","logLoss");let i=null;t!=null&&(i=N(t,"weights","logLoss")),wt(o.shape,a.shape,"Error in logLoss: ");const c=Oe(1),l=Oe(s),u=Bn(de(o,Go(Te(a,l)))),d=de(Ae(c,o),Go(Te(Ae(c,a),l))),p=Ae(u,d);return Rs(p,i,r)}const lF=I({logLoss_:cF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t,s=Rt.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","meanSquaredError"),o=N(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=N(t,"weights","meanSquaredError")),wt(r.shape,o.shape,"Error in meanSquaredError: ");const i=ug(r,o);return Rs(i,a,s)}const dF=I({meanSquaredError_:uF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n,e){const t=N(n,"labels","sigmoidCrossEntropyWithLogits"),s=N(e,"logits","sigmoidCrossEntropyWithLogits");wt(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Ic(s),o=de(s,t),a=Wm(er(Bn(Yt(s))));return Te(Ae(r,o),a)}function fF(n,e,t,s=0,r=Rt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"multiClassLabels","sigmoidCrossEntropy");const a=N(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","sigmoidCrossEntropy")),wt(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const l=Oe(s),u=Oe(1),d=Oe(.5);o=Te(de(o,Ae(u,l)),de(d,l))}const c=pF(o,a);return Rs(c,i,r)}const hF=I({sigmoidCrossEntropy_:fF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return os((r,o,a)=>{const c=Um(o,[t],!0),l=Ae(Xe(o,"float32"),c);a([r,l]);const u=Bn(de(l,r));return{value:Ke(u,[t]),gradFunc:(f,h)=>{const[g,m]=h,y=ut(f.shape,[t]);return[de(q(f,y),Ae(Xe(g,"float32"),er(m))),de(q(f,y),Ae(er(m),Xe(g,"float32")))]}}})(n,e)}function gF(n,e,t,s=0,r=Rt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"onehotLabels","softmaxCrossEntropy");const a=N(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","softmaxCrossEntropy")),wt(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const l=Oe(s),u=Oe(1),d=Oe(o.shape[1]);o=Te(de(o,Ae(u,l)),qe(l,d))}const c=mF(o,a);return Rs(c,i,r)}const yF=I({softmaxCrossEntropy_:gF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t,s){const r=N(n,"indices","sparseFillEmptyRows","int32"),o=N(e,"values","sparseFillEmptyRows"),a=N(t,"denseShape","sparseFillEmptyRows","int32"),i=N(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const c={indices:r,values:o,denseShape:a,defaultValue:i},l=k.runKernel(Ud,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const xF=I({sparseFillEmptyRows_:bF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n,e,t){const s=N(n,"inputIndices","sparseReshape","int32"),r=N(e,"inputShape","sparseReshape","int32"),o=N(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:s,inputShape:r,newShape:o},i=k.runKernel(Gd,a);return{outputIndices:i[0],outputShape:i[1]}}const vF=I({sparseReshape_:wF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n,e,t){const s=N(n,"data","sparseSegmentMean"),r=N(e,"indices","sparseSegmentMean","int32"),o=N(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return k.runKernel(Hd,a)}const CF=I({sparseSegmentMean_:$F});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t){const s=N(n,"data","sparseSegmentSum"),r=N(e,"indices","sparseSegmentSum","int32"),o=N(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return k.runKernel(jd,a)}const TF=I({sparseSegmentSum_:NF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(n,e,t,s,r,o,a,i){const c=N(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const l=N(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:c,dataSplits:l},p=k.runKernel(Xd,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}const EF=I({stringNGrams_:SF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n,e,t=!0){const s=N(n,"input","stringSplit","string"),r=N(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},a={input:s,delimiter:r},i=k.runKernel(Yd,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const IF=I({stringSplit_:_F});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(n,e){const t=N(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return k.runKernel(Qd,r,s)}const AF=I({stringToHashBucketFast_:kF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e,t,s=!0){const r=N(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return k.runKernel(hc,{x:r},o)}const OF=I({staticRegexReplace_:RF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i$={fft:fp,ifft:ii,rfft:hp,irfft:lg},c$={hammingWindow:oD,hannWindow:o$,frame:a$,stft:lD},l$={flipLeftRight:fD,grayscaleToRGB:mD,resizeNearestNeighbor:WD,resizeBilinear:MD,rgbToGrayscale:yD,rotateWithOffset:xD,cropAndResize:dD,nonMaxSuppression:vD,nonMaxSuppressionAsync:ID,nonMaxSuppressionWithScore:AD,nonMaxSuppressionWithScoreAsync:OD,nonMaxSuppressionPadded:FD,nonMaxSuppressionPaddedAsync:LD,threshold:GD,transform:jD},u$={bandPart:qD,gramSchmidt:YD,qr:ZD},d$={absoluteDifference:tF,computeWeightedLoss:Rs,cosineDistance:sF,hingeLoss:oF,huberLoss:iF,logLoss:lF,meanSquaredError:dF,sigmoidCrossEntropy:hF,softmaxCrossEntropy:yF},p$={sparseFillEmptyRows:xF,sparseReshape:vF,sparseSegmentMean:CF,sparseSegmentSum:TF},f$={stringNGrams:EF,stringSplit:IF,stringToHashBucketFast:AF,staticRegexReplace:OF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=new Map,rh=new Map;class h${getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class zs{constructor(){this.classNameMap={}}static getMap(){return zs.instance==null&&(zs.instance=new zs),zs.instance}static register(e){zs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function m$(n,e,t){T(n.className!=null,()=>"Class being registered does not have the static className property defined."),T(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),T(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return zs.register(n),DF.set(r,n),rh.set(n,r),n}function FF(n){return rh.has(n)?rh.get(n):n.className}const PF=Object.freeze(Object.defineProperty({__proto__:null,Serializable:h$,SerializationMap:zs,getRegisteredName:FF,registerClass:m$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fr extends h${minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Dt(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return H1(e,t)}dispose(){this.iterations_!=null&&Dt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Oe(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(fr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yg extends fr{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=k.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=k.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Ve(()=>tn(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Ve(()=>tn(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;Ve(()=>{const u=Te(de(c,this.rho),de(Cn(i),1-this.rho)),d=de(qe(rs(Te(l,this.epsilon)),rs(Te(c,this.epsilon))),i),p=Te(de(l,this.rho),de(Cn(d),1-this.rho));c.assign(u),l.assign(p);const f=Te(de(d,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Dt(this.accumulatedGrads.map(e=>e.variable)),Dt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bg extends fr{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=k.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Ve(()=>la(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;Ve(()=>{const c=Te(i,Cn(a));i.assign(c);const l=Te(de(qe(a,rs(Te(c,k.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Dt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xg extends fr{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ve(()=>{this.accBeta1=Oe(t).variable(),this.accBeta2=Oe(s).variable()}),r==null&&(this.epsilon=k.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Ve(()=>{const s=Ae(1,this.accBeta1),r=Ae(1,this.accBeta2);t.forEach((o,a)=>{const i=k.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ve(()=>tn(i).variable(c))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Ve(()=>tn(i).variable(c))});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,p=Te(de(u,this.beta1),de(l,1-this.beta1)),f=Te(de(d,this.beta2),de(Cn(l),1-this.beta2)),h=qe(p,s),g=qe(f,r);u.assign(p),d.assign(f);const m=Te(de(qe(h,Te(rs(g),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(de(this.accBeta1,this.beta1)),this.accBeta2.assign(de(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Dt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Dt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Ve(()=>{this.accBeta1.assign(Uo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Uo(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wg extends fr{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ve(()=>{this.iteration=Oe(0).variable(),this.accBeta1=Oe(t).variable()}),r==null&&(this.epsilon=k.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Ve(()=>{const s=Ae(1,this.accBeta1),r=qe(-this.learningRate,Te(de(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=k.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:tn(i).variable(c)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:tn(i).variable(c)});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,p=Te(de(u,this.beta1),de(l,1-this.beta1)),f=de(d,this.beta2),h=Yt(l),g=Km(f,h);u.assign(p),d.assign(g);const m=Te(de(qe(r,s),qe(p,Te(g,this.epsilon))),i);i.assign(m)}),this.iteration.assign(Te(this.iteration,1)),this.accBeta1.assign(de(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Dt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Dt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sp extends fr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=k.registeredVariables[s];Ve(()=>{const i=Te(de(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Pn(Oe(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vg extends Sp{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Oe(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=k.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Ve(()=>tn(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[s];i!=null&&Ve(()=>{let c;const l=Te(de(this.m,a),i);this.useNesterov?c=Te(de(this.c,Te(i,de(l,this.m))),o):c=Te(de(this.c,l),o),a.assign(l),o.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Dt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $g extends fr{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=k.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=k.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Ve(()=>tn(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Ve(()=>tn(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Ve(()=>tn(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;Ve(()=>{const u=Te(de(c,this.decay),de(Cn(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,p=Te(de(d,this.decay),de(i,1-this.decay)),f=qe(de(i,this.learningRate),rs(Ae(u,Te(Cn(p),this.epsilon)))),h=Te(de(l,this.momentum),f);c.assign(u),d.assign(p),l.assign(h);const g=Ae(o,h);o.assign(g)}else{const d=Te(de(c,this.decay),de(Cn(i),1-this.decay)),p=Te(de(l,this.momentum),qe(de(i,this.learningRate),rs(Te(d,this.epsilon))));c.assign(d),l.assign(p);const f=Ae(o,p);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Dt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Dt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Dt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LF=[yg,bg,xg,wg,vg,$g,Sp];function VF(){for(const n of LF)m$(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF="model",BF=".json",WF=".weights.bin";function Ab(n){return new Promise(e=>setTimeout(e)).then(n)}class Xr{constructor(e){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Xr.URL_SCHEME)&&(e=e.slice(Xr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=MF),this.modelJsonFileName=e+BF,this.weightDataFileName=e+WF}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Un.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=Bw(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Ab(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=s,await Ab(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:vc(e)}}}}Xr.URL_SCHEME="downloads://";class zF{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const c=Tm(o,l=>this.loadWeights(l));e(c)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const a of e)t.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(o).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;s(i)},o.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>_b(o.name)),r={};for(const o of e)o.paths.forEach(a=>{const i=_b(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),s.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const UF=n=>P().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Xr.URL_SCHEME)?GF(n.slice(Xr.URL_SCHEME.length)):null;Je.registerSaveRouter(UF);function GF(n="model"){return new Xr(n)}function HF(n){return new zF(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n,e,t,s){a(n),t=t??0,s=s??1,i(t,s);let r=0;const o=c=>(c.then(l=>{const u=t+ ++r/n.length*(s-t);return e(u),l}),c);function a(c){T(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,l){T(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),T(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),T(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function g$(n,e){e==null&&(e={});const t=e.fetchFunc==null?P().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(s):await Rb(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(i):await Rb(i,e.onProgress,.5,1)}function jF(n,e){var t;const s=e.fetchFunc==null?P().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var i;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:c,value:l}=await o.read();if(c){r++,o=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,r/n.length);continue}a.enqueue(l);return}a.close()}})}async function KF(n,e="",t,s){return y$(a=>g$(a,{requestInit:s}))(n,e,t)}function y$(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},a=s!=null?s.map(()=>!1):[],i=[];if(e.forEach((f,h)=>{let g=0;f.weights.forEach(m=>{const y="quantization"in m?m.quantization.dtype:m.dtype,b=Gr[y]*G(m.shape),v=()=>{r[h]=!0,o[h]==null&&(o[h]=[]),o[h].push({manifestEntry:m,groupOffset:g,sizeBytes:b})};s!=null?s.forEach((x,$)=>{x===m.name&&(v(),a[$]=!0)}):v(),i.push(m.name),g+=b})}),!a.every(f=>f)){const f=s.filter((h,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const c=r.reduce((f,h,g)=>(h&&f.push(g),f),[]),l=[];c.forEach(f=>{e[f].paths.forEach(h=>{const g=t+(t.endsWith("/")?"":"/")+h;l.push(g)})});const u=await n(l),d={};let p=0;return c.forEach(f=>{const h=e[f].paths.length,g=new Un(u.slice(p,p+h));o[f].forEach(y=>{const b=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),v=Lw(b,[y.manifestEntry]);for(const x in v)d[x]=v[x]}),p+=h}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF="application/octet-stream",XF="application/json";class Cg{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(T(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=P().platform.fetch,T(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&T(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Bw(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:XF}),"model.json"),e.weightData!=null){const a=Un.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:qF}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:vc(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Tm(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Ll(e.weightsManifest),r=()=>jF(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=YF(t),o=this.weightPathPrefix||s,a=[],i=[];for(const c of e)for(const l of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):a.push(o+l+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e),s=Ll(e),r=await g$(t,this.loadOptions);return[s,r]}}Cg.URL_SCHEME_REGEX=/^https?:\/\//;function YF(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function oh(n){return n.match(Cg.URL_SCHEME_REGEX)!=null}const b$=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>oh(s)):t=oh(n),t)return Ng(n,e)}return null};Je.registerSaveRouter(b$);Je.registerLoadRouter(b$);function Ng(n,e){return new Cg(n,e)}function QF(n,e){return Ng(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rf{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class x${constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class ZF{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function JF(n,e,t,s){const r=arguments;return new ZF(zl(...r))}function zl(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new rf(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rf({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rf({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function eP(n){return new x$(n)}function tP(n){return new x$(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tg=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Un,browserFiles:HF,browserHTTPRequest:QF,concatenateArrayBuffers:sk,copyModel:Tk,decodeWeights:Lw,decodeWeightsStream:Mw,encodeWeights:QI,fromMemory:JF,fromMemorySync:zl,getLoadHandlers:dk,getModelArtifactsForJSON:Tm,getModelArtifactsForJSONSync:Nm,getModelArtifactsInfoForJSON:vc,getSaveHandlers:uk,getWeightSpecs:Ll,http:Ng,isHTTPScheme:oh,listModels:Ck,loadWeights:KF,moveModel:Sk,registerLoadRouter:lk,registerSaveRouter:ck,removeModel:Nk,weightsLoaderFactory:y$,withSaveHandler:eP,withSaveHandlerSync:tP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n,e,t){const s=N(n,"labels","confusionMatrix"),r=N(e,"predictions","confusionMatrix");T(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),T(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),T(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),T(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),T(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=Wl(Xe(s,"int32"),t),a=Wl(Xe(r,"int32"),t),i=ci(o),c=Me(i,a);return Xe(c,"int32")}const sP=I({confusionMatrix_:nP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rP=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:sP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cr,Ob=!1;function w$(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Za(Dl,k.backendName)!=null){const h={pixels:n},g={numChannels:e};return k.runKernel(Dl,h,g)}const[l,u]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(a)d=n.getContext("2d").getImageData(0,0,l,u).data;else if(s||t)d=n.data;else if(o||r||i){if(Cr==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Cr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Cr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Cr.canvas.width=l,Cr.canvas.height=u,Cr.drawImage(n,0,0,l,u),d=Cr.getImageData(0,0,l,u).data}let p;if(e===4)p=new Int32Array(d);else{const h=l*u;p=new Int32Array(h*e);for(let g=0;g<h;g++)for(let m=0;m<e;++m)p[g*e+m]=d[g*4+m]}return pg(p,[u,l,e],"int32")}function oP(n){return n!=null&&n.data instanceof Uint8Array}function aP(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function iP(n){return n!=null&&n.width!==0&&n.height!==0}function cP(n){return aP()&&!(n instanceof ImageBitmap)&&iP(n)&&!oP(n)}async function lP(n,e=3){let t=null;if(P().getBool("WRAP_TO_IMAGEBITMAP")&&cP(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return w$(t,e)}function v$(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function uP(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function dP(n,e){let t=N(n,"img","toPixels");if(!(n instanceof nt)){const l=t;t=Xe(l,"int32"),l.dispose()}v$(t);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],a=await t.data(),i=t.dtype==="float32"?255:1,c=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){const u=[0,0,0,255];for(let p=0;p<o;p++){const f=a[l*o+p];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);o===1?(u[0]=f*i,u[1]=f*i,u[2]=f*i):u[p]=f*i}const d=l*4;c[d+0]=Math.round(u[0]),c[d+1]=Math.round(u[1]),c[d+2]=Math.round(u[2]),c[d+3]=Math.round(u[3])}if(e!=null){Ob||Za(Ku,k.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Ob=!0),e.width=r,e.height=s;const l=e.getContext("2d"),u=new ImageData(c,r,s);l.putImageData(u,0,0)}return t!==n&&t.dispose(),c}function pP(n,e,t){let s=N(n,"img","draw");if(!(n instanceof nt)){const a=s;s=Xe(a,"int32"),a.dispose()}v$(s),uP(t==null?void 0:t.imageOptions);const r={image:s},o={canvas:e,options:t};k.runKernel(Ku,r,o)}const fP=I({fromPixels_:w$}),hP=Object.freeze(Object.defineProperty({__proto__:null,draw:pP,fromPixels:fP,fromPixelsAsync:lP,toPixels:dP},Symbol.toStringTag,{value:"Module"}));function Ep(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(G(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const i=n.shape,c=r.slice();c.pop();let l=1;for(let d=o;d<t;++d)l*=i[d],c.push(i[d]);const u=[...we(n.shape).map(d=>d/l),1].slice(0,o);return[c,a,l,u]}const mP=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Ep},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ah=-2,gP=-1;function Sg(n,e,t){const s=n.shape.length;T(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),T(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)T(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function yP(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Eg(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function $$(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function C$(n,e,t){return t<=n?t:t-(e-1)}function N$(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function bP(n,e,t,s,r,o,a,i,c){const l=n.length;let u=new Array(l),d=new Array(l),p=new Array(l);if(e.length&&t>0){const f=e[0],h=t+1;u=T$(a,f,h,s,n),d=S$(i,f,h,r,n),p=$$(o,f,h,n)}else for(let f=0;f<l;f++)u[f]=_$(a,s,o,n,f,c),d[f]=I$(i,r,o,n,f,c),p[f]=E$(o,f,c);return{begin:u,end:d,strides:p}}function T$(n,e,t,s,r){const o=[...r],a=N$(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const c=C$(e,t,i);let l=s[c];n&1<<c&&(l=0),o[i]=l}return o}function S$(n,e,t,s,r){const o=[...r],a=N$(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const c=C$(e,t,i);let l=s[c];n&1<<c&&(l=Number.MAX_SAFE_INTEGER),o[i]=l}for(let i=0;i<o.length;i++){const c=r[i];o[i]<0&&(o[i]+=c),o[i]=Ys(0,o[i],r[i])}return o}function E$(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function _$(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),a=Ys(0,a,c-1),a}function I$(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),i>0?a=Ys(0,a,c):a=Ys(-1,a,c-1),a}function _g(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Ig(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function kg(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{T(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(T(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function Ag(n,e,t,s,r,o,a,i,c){let l;if(s==null?(l=new Array(e.length),l.fill(1)):l=s,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};for(let v=0;v<d.dims;v++)u&&1<<v&i&&d.numAddAxisAfterEllipsis++,1<<v&a&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};xP(d,p);let f=!0,h=!0,g=!0;const m=[],y=[];for(let v=0;v<n.length;++v){if(p.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const x=!!(p.shrinkAxisMask&1<<v),$=n[v];if($===-1){m.push(x?1:-1);continue}const C=[p.beginMask&1<<v,p.endMask&1<<v],S=[p.strides[v]>0?0:-1,p.strides[v]>0?$:$-1];if(x&&p.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&p.strides[v]===1;const E=!!(p.beginMask&1<<v&&p.endMask&1<<v);if(p.beginValid&&p.endValid){if(x){const L=p.begin[v]<0?$+p.begin[v]:p.begin[v];if(p.begin[v]=L,p.end[v]=p.begin[v]+1,L<0||L>=$)throw Error(`slice index ${p.begin[v]} of dimension ${v} out of bounds.`)}else p.begin[v]=Db(p.begin[v],0,p.strides[v],$,C,S),p.end[v]=Db(p.end[v],1,p.strides[v],$,C,S);const D=p.strides[v]===1&&p.begin[v]===0&&p.end[v]===$;f=f&&D,h=h&&(v===0&&p.strides[v]===1||D)}else f=f&&p.strides[v]===1&&E,h=h&&(v===0&&p.strides[v]===1||E);let R,A=!1;if(p.beginValid&&p.endValid?(R=p.end[v]-p.begin[v],A=!0):x?(R=1,A=!0):E&&$>=0&&(p.strides[v]<0?R=-$:R=$,A=!0),A){let D;R===0||R<0!=p.strides[v]<0?D=0:D=Math.trunc(R/p.strides[v])+(R%p.strides[v]!==0?1:0),m.push(D)}else m.push(-1)}for(let v=0;v<p.finalShapeGatherIndices.length;++v){const x=p.finalShapeGatherIndices[v];x>=0?y.push(m[x]):x===ah&&y.push(1)}return{finalShapeSparse:y.filter((v,x)=>p.finalShapeGatherIndices[x]!==ah),finalShape:y,isIdentity:f,sliceDim0:h,isSimpleSlice:g,begin:p.begin,end:p.end,strides:p.strides}}function xP(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(ah),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(gP),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function Db(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const a=n<0?s+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const k$=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Sg,computeFlatOffset:Ig,computeOutShape:Eg,getNormalizedAxes:bP,isSliceContinous:_g,maskToAxes:yP,parseSliceParams:kg,sliceInfo:Ag,startForAxis:_$,startIndicesWithElidedDims:T$,stopForAxis:I$,stopIndicesWithElidedDims:S$,stridesForAxis:E$,stridesWithElidedDims:$$},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const wP="4.17.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A${static sgd(e){return new Sp(e)}static momentum(e,t,s=!1){return new vg(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new $g(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new xg(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new yg(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new wg(e,t,s,r,o)}static adagrad(e,t=.1){return new bg(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vP=A$;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function R$(){return new Promise(n=>$P(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,e){const t=n[0].length;n.forEach((r,o)=>{T(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),T(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<t;a++)T(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Jn(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Dn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Dn||(Dn={}));function O$(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],a=s[s.length-t.length+r],i=s[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${i}`)}else s[a]=o}return s}function D$(n){const e={FIRST_DIM_SIZE:Dn.FIRST_DIM_SIZE,VALUE_ROWIDS:Dn.VALUE_ROWIDS,ROW_LENGTHS:Dn.ROW_LENGTHS,ROW_SPLITS:Dn.ROW_SPLITS,ROW_LIMITS:Dn.ROW_LIMITS,ROW_STARTS:Dn.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function F$(n){return n.length===0?0:n[0]===Dn.FIRST_DIM_SIZE?n.length-1:n.length}function P$(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],a=e[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Og=30;function _p(n){return n<=Og?n:Ol(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(o+1))}return r}function Ac(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function Rc(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function Fg(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function Pg(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lg=1.7580993408473768,Vg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mg=.3275911,Bg=.254829592,Wg=-.284496736,zg=1.421413741,Ug=-1.453152027,Gg=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function L$(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function V$(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function M$(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Hg(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function B$(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function W$(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function z$(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const of="->",CP=/->/g,Fb=",",Pb="...";function jg(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(CP,"").length)/of.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${of}").`);const[s,r]=n.split(of);T(s.indexOf(Pb)===-1,()=>`The ellipsis notation ("${Pb}") is not supported yet.`);const o=s.split(Fb),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<r.length;++p){const f=r[p];if(!o.some(h=>h.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);i.indexOf(f)===-1&&i.push(f)}for(let p=0;p<s.length;++p){const f=s[p];i.indexOf(f)===-1&&f!==Fb&&i.push(f)}const c=new Array(o.length);for(let p=0;p<a;++p){if(new Set(o[p].split("")).size!==o[p].length)throw new Error(`Found duplicate axes in input component ${o[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let f=0;f<o[p].length;++f)c[p].push(i.indexOf(o[p][f]))}const l=i.length,u=r.length,d=[];for(let p=u;p<l;++p)d.push(p);return{allDims:i,summedDims:d,idDims:c}}function Kg(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function qg(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=o[a]:T(s[e[r][a]]===o[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Xg(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],c=NP(e,i);for(const l of c)o.indexOf(l)===-1&&(s[a].push(l),o.push(l))}return{path:t,steps:s}}function Yg(n){return n.every((e,t)=>e===t)}function NP(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Qg(n,e,t=0){let s=[];if(typeof e=="number")T(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);T(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,c)=>c>0?i+c:i);e[o]=n.shape[t]-a}T(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function G$(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function H$(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function K$(n,e){return`size ${n} must be non-negative, not ${e}`}function q$(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function X$(n,e){const t=G(n),s=G(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function Y$(n,e){const t=G(n),s=G(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ih(){return"segment ids must be >= 0"}function Q$(){return"segment ids are not increasing"}function Z$(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function J$(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n,e){let t=!1,s;for(n<=Og?(s=n,t=!0):s=Ol(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Ol(n,s+1);return s}function tC(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function Zg(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let c=1,l=1,u=1;for(let d=0;d<s;++d)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<t;d++)i.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<r;d++)i.push(e.shape[d]);for(let d=t+1;d<o;d++)i.push(n.shape[d]),u*=n.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:a,outputShape:i}}const TP=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Zg,computeOutShape:tC,segOpComputeOptimalWindowSize:eC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(n){try{return n.map(e=>$s(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function nC(n){return n.map(e=>Zn(e))}const sC=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Bg,ERF_A2:Wg,ERF_A3:zg,ERF_A4:Ug,ERF_A5:Gg,ERF_P:Mg,PARALLELIZE_THRESHOLD:Og,get RowPartitionType(){return Dn},SELU_SCALE:Vg,SELU_SCALEALPHA:Lg,applyActivation:vp,assertAndGetBroadcastShape:Re,assertAxesAreInnerMostDims:$t,assertParamsConsistent:Rg,assignToTypedArray:B$,axesAreInnerMostDims:Fm,calculateShapes:dr,checkEinsumDimSizes:qg,checkPadOnDimRoundingMode:_n,combineLocations:P1,combineRaggedTensorToTensorShapes:O$,complexWithEvenIndex:V$,complexWithOddIndex:M$,computeConv2DInfo:mt,computeConv3DInfo:ur,computeDefaultPad:_m,computeDilation2DInfo:$c,computeOptimalWindowSize:_p,computeOutAndReduceShapes:vt,computeOutShape:Jn,computePool2DInfo:En,computePool3DInfo:ks,convertConv2DDataFormat:As,decodeEinsumEquation:jg,eitherStridesOrDilationsAreOne:Et,expandShapeToKeepDim:ut,exponent:z$,exponents:W$,fromStringArrayToUint8:nC,fromUint8ToStringArray:Ts,getAxesPermutation:at,getBroadcastDims:qr,getComplexWithIndex:Hg,getEinsumComputePath:Xg,getEinsumPermutation:Kg,getFusedBiasGradient:wp,getFusedDyActivation:xp,getImageCenter:Dg,getInnerMostAxes:it,getPermuted:Ac,getRaggedRank:F$,getReductionAxes:Rm,getReshaped:kc,getReshapedPermuted:Rc,getRowPartitionTypesHelper:D$,getSliceBeginCoords:Fg,getSliceSize:Pg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:U$,getSparseFillEmptyRowsNegativeIndexErrorMessage:G$,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:H$,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:q$,getSparseReshapeInputOutputMismatchErrorMessage:Y$,getSparseReshapeInputOutputMultipleErrorMessage:X$,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:j$,getSparseReshapeNegativeOutputDimErrorMessage:K$,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:J$,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ih,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Q$,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Z$,getUndoAxesPermutation:Tc,isIdentityPermutation:Yg,log:nI,mergeRealAndImagArrays:Ns,prepareAndValidate:Ep,prepareSplitSize:Qg,segment_util:TP,shouldFuse:$p,slice_util:k$,splitRealAndImagArrays:L$,stridesOrDilationsArePositive:Kr,tupleValuesAreOne:si,upcastType:Ut,validateDefaultValueShape:P$,validateInput:gp,validateUpdateShape:fg,warn:ln},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Cp,nonMaxSuppressionV4Impl:Np,nonMaxSuppressionV5Impl:Tp,whereImpl:yp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */VF();const EP=Object.freeze(Object.defineProperty({__proto__:null,Abs:yu,Acos:mi,Acosh:gi,AdadeltaOptimizer:yg,AdagradOptimizer:bg,AdamOptimizer:xg,AdamaxOptimizer:wg,Add:ca,AddN:bu,All:xu,Any:wu,ArgMax:vu,ArgMin:$u,Asin:yi,Asinh:bi,Atan:xi,Atan2:vi,Atanh:wi,AvgPool:Cu,AvgPool3D:Nu,AvgPool3DGrad:am,AvgPoolGrad:om,BatchMatMul:Tu,BatchToSpaceND:Su,Bincount:Eu,BitwiseAnd:$i,BroadcastArgs:_u,BroadcastTo:X_,Cast:Ci,Ceil:Ni,ClipByValue:Ti,Complex:Iu,ComplexAbs:ku,Concat:Au,Conv2D:Ru,Conv2DBackpropFilter:Ou,Conv2DBackpropInput:Du,Conv3D:Fu,Conv3DBackpropFilterV2:im,Conv3DBackpropInputV2:Pu,Cos:Si,Cosh:Ei,CropAndResize:Mu,Cumprod:Lu,Cumsum:Vu,DataStorage:Jh,DenseBincount:Bu,DepthToSpace:Wu,DepthwiseConv2dNative:zu,DepthwiseConv2dNativeBackpropFilter:Uu,DepthwiseConv2dNativeBackpropInput:Gu,Diag:Hu,Dilation2D:ju,Dilation2DBackpropFilter:Uf,Dilation2DBackpropInput:zf,Draw:Ku,get ENV(){return sm},Einsum:qu,Elu:Ii,EluGrad:cm,Environment:mw,Equal:Ai,Erf:ki,Exp:Ri,ExpandDims:Xu,Expm1:Oi,FFT:Yu,Fill:Qu,FlipLeftRight:Zu,Floor:Di,FloorDiv:Fi,FromPixels:Dl,FusedBatchNorm:Ju,FusedConv2D:Xa,FusedDepthwiseConv2D:Ya,GatherNd:td,GatherV2:ed,Greater:Pi,GreaterEqual:Li,IFFT:nd,Identity:Vi,Imag:sd,IsFinite:Mi,IsInf:Bi,IsNan:Wi,KernelBackend:hu,LRN:ad,LRNGrad:lm,LeakyRelu:rd,Less:zi,LessEqual:Ui,LinSpace:od,Log:Gi,Log1p:Hi,LogSoftmax:Q_,LogicalAnd:ji,LogicalNot:Ki,LogicalOr:qi,LogicalXor:Y_,LowerBound:Z_,MatrixBandPart:J_,Max:id,MaxPool:cd,MaxPool3D:ld,MaxPool3DGrad:dm,MaxPoolGrad:um,MaxPoolWithArgmax:ud,Maximum:Xi,Mean:dd,Min:pd,Minimum:Yi,MirrorPad:fd,Mod:Qi,MomentumOptimizer:vg,Multinomial:hd,Multiply:Zi,Neg:md,NonMaxSuppressionV3:gd,NonMaxSuppressionV4:yd,NonMaxSuppressionV5:bd,NotEqual:Ji,OP_SCOPE_SUFFIX:vm,OneHot:wd,OnesLike:xd,Optimizer:fr,OptimizerConstructors:A$,Pack:vd,PadV2:$d,Pool:eI,Pow:ec,Prelu:Cd,Prod:Nd,RMSPropOptimizer:$g,RaggedGather:Td,RaggedRange:Sd,RaggedTensorToTensor:Ed,Range:_d,get Rank(){return Kf},Real:Id,RealDiv:_i,Reciprocal:tc,get Reduction(){return Rt},Relu:nc,Relu6:sc,Reshape:kd,ResizeBilinear:Rd,ResizeBilinearGrad:fm,ResizeNearestNeighbor:Ad,ResizeNearestNeighborGrad:pm,Reverse:Od,RotateWithOffset:rp,Round:rc,Rsqrt:oc,SGDOptimizer:Sp,ScatterNd:Dd,SearchSorted:Pd,Select:Ld,Selu:ac,Sigmoid:uc,Sign:lc,Sin:ic,Sinh:cc,Slice:Vd,Softmax:zd,Softplus:dc,SpaceToBatchND:Bd,SparseFillEmptyRows:Ud,SparseReshape:Gd,SparseSegmentMean:Hd,SparseSegmentSum:jd,SparseToDense:Kd,SplitV:Wd,Sqrt:pc,Square:hm,SquaredDifference:fc,StaticRegexReplace:hc,Step:xc,StridedSlice:qd,StringNGrams:Xd,StringSplit:Yd,StringToHashBucketFast:Qd,Sub:mc,Sum:Md,Tan:gc,Tanh:yc,Tensor:nt,TensorBuffer:lt,TensorScatterUpdate:Fd,Tile:bc,TopK:Zd,Transform:Jd,Transpose:Ao,Unique:ep,Unpack:tp,UnsortedSegmentSum:np,UpperBound:tI,Variable:Ja,ZerosLike:sp,_FusedMatMul:qa,abs:Yt,acos:qw,acosh:Xw,add:Te,addN:Yw,all:Qw,any:Zw,argMax:Jw,argMin:e1,asin:t1,asinh:n1,atan:s1,atan2:r1,atanh:o1,avgPool:Im,avgPool3d:a1,backend:Pw,backend_util:sC,basicLSTMCell:i1,batchNorm:Cc,batchNorm2d:c1,batchNorm3d:l1,batchNorm4d:u1,batchToSpaceND:km,bincount:Am,bitwiseAnd:d1,booleanMaskAsync:Qv,broadcastArgs:p1,broadcastTo:Do,broadcast_util:z2,browser:hP,buffer:Ee,cast:Xe,ceil:f1,clipByValue:h1,clone:bs,complex:Cs,concat:Tt,concat1d:m1,concat2d:g1,concat3d:y1,concat4d:b1,conv1d:x1,conv2d:Nc,conv2dTranspose:v1,conv3d:$1,conv3dTranspose:C1,copyRegisteredKernels:aI,cos:N1,cosh:T1,cosineWindow:bp,cumprod:S1,cumsum:E1,customGrad:os,denseBincount:_1,deprecationWarn:BI,depthToSpace:I1,depthwiseConv2d:ip,device_util:DI,diag:k1,dilation2d:A1,disableDeprecationWarnings:MI,dispose:Dt,disposeVariables:WI,div:qe,divNoNan:R1,dot:O1,dropout:n$,einsum:_r,elu:Dm,enableDebugMode:VI,enableProdMode:LI,enclosingPowerOfTwo:mg,engine:Rn,ensureShape:D1,env:P,equal:Om,erf:F1,euclideanNorm:V1,exp:er,expandDims:ds,expm1:M1,eye:Pm,fft:fp,fill:la,findBackend:qI,findBackendFactory:XI,floor:Lm,floorDiv:Em,fused:r$,gather:Vm,gatherND:t$,gather_util:mP,getBackend:Fw,getGradient:Gf,getKernel:Za,getKernelsForBackend:Fl,grad:TA,grads:SA,greater:Ec,greaterEqual:Mm,ifft:ii,imag:_c,image:l$,inTopKAsync:s$,io:Tg,irfft:lg,isFinite:B1,isInf:W1,isNaN:z1,keep:Pn,kernel_impls:SP,leakyRelu:Bm,less:Bl,lessEqual:cp,linalg:u$,linspace:U1,localResponseNormalization:G1,log:Go,log1p:Wm,logSigmoid:j1,logSoftmax:K1,logSumExp:Um,logicalAnd:ri,logicalNot:Gm,logicalOr:Hm,logicalXor:q1,losses:d$,lowerBound:X1,matMul:Me,math:rP,max:Br,maxPool:jm,maxPool3d:Y1,maxPoolWithArgmax:Q1,maximum:Km,mean:oi,memory:zI,meshgrid:Z1,min:Ml,minimum:ai,mirrorPad:J1,mod:ev,moments:tv,movingAverage:Zv,mul:de,multiRNNCell:nv,multinomial:sv,neg:Bn,nextFrame:R$,norm:Sc,notEqual:qm,oneHot:Wl,ones:Gs,onesLike:rv,op:I,outerProduct:ov,pad:ua,pad1d:av,pad2d:iv,pad3d:cv,pad4d:lv,pool:uv,pow:Uo,prelu:Ym,print:Sm,prod:dv,profile:UI,raggedGather:pv,raggedRange:fv,raggedTensorToTensor:hv,rand:mv,randomGamma:xv,randomNormal:ag,randomStandardNormal:wv,randomUniform:pp,randomUniformInt:vv,range:Ho,ready:jI,real:jo,reciprocal:$v,registerBackend:$m,registerGradient:sI,registerKernel:op,relu:Ic,relu6:ig,removeBackend:KI,reshape:q,reverse:nr,reverse1d:Cv,reverse2d:Nv,reverse3d:Tv,reverse4d:Sv,rfft:hp,round:cg,rsqrt:Ev,scalar:Oe,scatterND:Jv,scatter_util:_O,searchSorted:up,selu:_v,separableConv2d:Iv,serialization:PF,setBackend:HI,setPlatform:YI,setdiff1dAsync:kv,sigmoid:Mr,sign:Av,signal:c$,sin:Rv,sinh:Ov,slice:He,slice1d:Dv,slice2d:Fv,slice3d:Pv,slice4d:Lv,slice_util:k$,softmax:Vv,softplus:zm,spaceToBatchND:Xm,sparse:p$,sparseToDense:e$,spectral:i$,split:Ko,sqrt:rs,square:Cn,squaredDifference:ug,squeeze:mp,stack:as,step:dg,stridedSlice:Mv,string:f$,sub:Ae,sum:Ke,sumOutType:ap,tan:Bv,tanh:Vl,tensor:Mn,tensor1d:un,tensor2d:Po,tensor3d:pg,tensor4d:Wv,tensor5d:zv,tensor6d:Uv,tensorScatterUpdate:Gv,tensor_util:II,test_util:WR,tidy:Ve,tile:Fo,time:GI,topk:Hv,train:vP,transpose:ci,truncatedNormal:jv,unique:Kv,unregisterGradient:oI,unregisterKernel:rI,unsortedSegmentSum:qv,unstack:pr,upcastType:Ut,upperBound:Xv,util:gI,valueAndGrad:EA,valueAndGrads:_A,variable:Yv,variableGrads:H1,version_core:wP,where:xs,whereAsync:hg,zeros:tr,zerosLike:tn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&T(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P=yp;class Ip extends hu{nextDataId(){return Ip.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Jh(this,Rn())}write(e,t,s){this.firstUse&&(this.firstUse=!1,P().get("IS_NODE")&&ln(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Yn(s[0])){const o=s.map(a=>Zn(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Ns(r,o)}return hw(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>$s(r));return Ee(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ee(e.shape,e.dtype,t)}makeOutput(e,t,s){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Qt();return e(),{kernelMs:Qt()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ge([e],"where");const t=this.readSync(e.dataId);return _P(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ip.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const IP=n=>{const{x:e}=n.inputs,t=n.backend;ge(e,"abs");let s=new Float32Array(G(e.shape));const r=t.data.get(e.dataId).values;return s=rC(r),t.makeOutput(s,e.shape,e.dtype)},kP={kernelName:yu,backendName:"cpu",kernelFunc:IP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n){return(e,t,s,r,o)=>{const a=Re(e,t),i=a.length,c=we(a),l=G(a),u=ht(o,l),d=e.length,p=t.length,f=we(e),h=we(t),g=qr(e,a),m=qr(t,a);if(g.length+m.length===0)for(let y=0;y<u.length;++y)u[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const b=ao(y,i,c),v=b.slice(-d);g.forEach(S=>v[S]=0);const x=Vn(v,d,f),$=b.slice(-p);m.forEach(S=>$[S]=0);const C=Vn($,p,h);u[y]=n(s[x],r[C])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,i=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(i.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",a)},i}const AP={kernelName:Iu,backendName:"cpu",kernelFunc:Zt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n,e,t="float32"){if(t==="complex64"){const r=Ul(n,e,"float32"),o=Ul(n,e,"float32");return Zt({inputs:{real:r,imag:o},backend:n})}const s=xt(G(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const RP={kernelName:Vi,backendName:"cpu",kernelFunc:is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const OP={kernelName:Id,backendName:"cpu",kernelFunc:Yr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=cr([0],t),[o,a]=ct((i,c)=>i!==c?1:0)(e,[],n,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function sr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return is({inputs:{x:r},backend:t});const u=Ul(t,r.shape,r.dtype),d=sr({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),p=Zt({inputs:{real:d,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),p}if(r.dtype==="complex64"){const u=Yr({inputs:{input:r},backend:t}),d=sr({inputs:{x:u},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(u),d}if(!tm(r.dtype,o)){const u=is({inputs:{x:r},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:o}}const a=t.data.get(r.dataId).values,[i,c,l]=oC(a,r.shape,r.dtype,o);return t.makeTensorInfo(i,c,l)}const DP={kernelName:Ci,backendName:"cpu",kernelFunc:sr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;ge([a,i],n);const l=c.data.get(a.dataId).values,u=c.data.get(i.dataId).values,d=a.dtype==="string"?Ts(l):l,p=a.dtype==="string"?Ts(u):u,f=s||a.dtype,[h,g]=e(a.shape,i.shape,d,p,f);return c.makeTensorInfo(g,f,h)}:({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const l=sr({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),u=c.data.get(l.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,f=c.data.get(d.dataId).values,h=c.data.get(p.dataId).values,g=sr({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),m=c.data.get(g.dataId),y=m.complexTensorInfos.real,b=m.complexTensorInfos.imag,v=c.data.get(y.dataId).values,x=c.data.get(b.dataId).values,[$,C,S]=t(a.shape,i.shape,f,h,v,x),E=c.makeTensorInfo(S,"float32",$),R=c.makeTensorInfo(S,"float32",C),A=Zt({inputs:{real:E,imag:R},backend:c});return c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(E),c.disposeIntermediateTensorInfo(R),A}else{const l=c.data.get(a.dataId).values,u=c.data.get(i.dataId).values,d=s||a.dtype,[p,f]=e(a.shape,i.shape,l,u,d);return c.makeTensorInfo(f,d,p)}}}function Jg(n){return(e,t,s,r,o,a)=>{const i=Re(e,t),c=G(i),l=i.length,u=we(i),d=ht("float32",c),p=ht("float32",c),f=qr(e,i),h=qr(t,i),g=Ns(s,r),m=Ns(o,a),y=e.length,b=we(e),v=t.length,x=we(t);if(f.length+h.length===0)for(let $=0;$<d.length;$++){const C=$%g.length,S=$%m.length,E=n(g[C*2],g[C*2+1],m[S*2],m[S*2+1]);d[$]=E.real,p[$]=E.imag}else for(let $=0;$<d.length;$++){const C=ao($,l,u),S=C.slice(-y);f.forEach(L=>S[L]=0);const E=Vn(S,y,b),R=C.slice(-v);h.forEach(L=>R[L]=0);const A=Vn(R,v,x),D=n(g[E*2],g[E*2+1],m[A*2],m[A*2+1]);d[$]=D.real,p[$]=D.imag}return[d,p,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aC=ct((n,e)=>n+e),FP=Jg((n,e,t,s)=>({real:n+t,imag:e+s})),qo=dt(ca,aC,FP),PP={kernelName:ca,backendName:"cpu",kernelFunc:qo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ey(n,e,t,s,r){const o=G(s),a=xt(r,t);for(let i=0;i<n.length;i++){const c=n[i];if(c<0)throw new Error("Input x must be non-negative!");c>=r||(o>0?a[c]+=e[i]:a[c]+=1)}return a}function iC(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],a=Ee([r,t],e.dtype);for(let i=0;i<r;i++)for(let c=0;c<o;c++){const l=n.get(i,c);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,c),i,l):a.set(a.get(i,l)+1,i,l))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cC=ct((n,e)=>n&e),LP=dt($i,cC),VP={kernelName:$i,backendName:"cpu",kernelFunc:LP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(n){return(e,t,s)=>{const r=st(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(n,e,t){const s=ls(e);return hr(n,s,t)}function hr(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;ge(a,n);const i=o,c=i.data.get(a.dataId).values;let l;if(a.dtype==="string"){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=Ts(c)}else l=c;const u=t||a.dtype,d=e(l,u,r);return i.makeTensorInfo(a.shape,u,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=ls(n=>Math.ceil(n)),MP=hr(Ni,lC),BP={kernelName:Ni,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(n,e,t,s){const r=st(t,G(e));if(s&&t!=="string"){let o=0;n.forEach(a=>{const i=G(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?Ts(a.vals):a.vals;let c=0;for(let l=0;l<a.shape[0];++l){const u=l*e[1]+o;for(let d=0;d<a.shape[1];++d)r[u+d]=i[c++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=ct((n,e)=>n===e?1:0),pC=dt(Ai,dC,null,"bool"),WP={kernelName:Ai,backendName:"cpu",kernelFunc:pC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=ls(n=>Math.exp(n)),hC=hr(Ri,fC,"float32"),zP={kernelName:Ri,backendName:"cpu",kernelFunc:hC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=ls(n=>Math.expm1(n)),UP=hr(Oi,mC),GP={kernelName:Oi,backendName:"cpu",kernelFunc:UP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC=ls(n=>Math.floor(n)),HP=hr(Di,gC),jP={kernelName:Di,backendName:"cpu",kernelFunc:HP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=ct((n,e)=>Math.floor(n/e)),KP=dt(Fi,yC,null,"int32"),qP={kernelName:Fi,backendName:"cpu",kernelFunc:KP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,e,t,s,r,o,a,i,c){const l=Ee([s,o],t);for(let u=0;u<s;u++){const d=[];let p=0;for(let f=0;f<r;f++){const h=n[u*r+f];p+=h*a[f],d.push(h)}if(p<0||p>=c/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let f=0;f<o;f++)l.values[u*o+f]=e.get(...e.indexToLoc(p*o+f))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(n,e,t){const s=Ee(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],c=a[2],l=e.locToIndex([i,c]);a[2]=e.values[l];const u=n.locToIndex(a);0<=u&&u<n.values.length&&(s.values[r]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=ct((n,e)=>n>e?1:0),XP=dt(Pi,wC,null,"bool"),YP={kernelName:Pi,backendName:"cpu",kernelFunc:XP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=ct((n,e)=>n>=e?1:0),QP=dt(Li,vC,null,"bool"),ZP={kernelName:Li,backendName:"cpu",kernelFunc:QP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C=ct((n,e)=>n<e?1:0),JP=dt(zi,$C,null,"bool"),eL={kernelName:zi,backendName:"cpu",kernelFunc:JP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=ct((n,e)=>n<=e?1:0),tL=dt(Ui,CC,null,"bool"),nL={kernelName:Ui,backendName:"cpu",kernelFunc:tL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e,t){const s=(e-n)/(t-1),r=xt(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=ls(n=>Math.log(n)),sL=hr(Gi,TC),rL={kernelName:Gi,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n,e,t,s){const r=ht(s,G(t));for(let o=0;o<r.length;++o){const a=o*e;let i=n[a];for(let c=0;c<e;++c){const l=n[a+c];(Number.isNaN(l)||l>i)&&(i=l)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EC=ct((n,e)=>Math.max(n,e)),oL=dt(Xi,EC),aL={kernelName:Xi,backendName:"cpu",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=ct((n,e)=>Math.min(n,e)),iL=dt(Yi,_C),cL={kernelName:Yi,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ty=ct((n,e)=>n*e),lL=Jg((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),kp=dt(Zi,ty,lL),uL={kernelName:Zi,backendName:"cpu",kernelFunc:kp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,e,t){const s=Is(-1,t);return ty([],e,s,n,t)}function dL(n){const{inputs:e,backend:t}=n,{x:s}=e;ge(s,"neg");const r=t.data.get(s.dataId).values,[o,a]=IC(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}const pL={kernelName:md,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC=ct((n,e)=>n!==e?1:0),fL=dt(Ji,kC,null,"bool"),hL={kernelName:Ji,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ny(n,e,t,s,r){const o=e.length,a=G(e),i=we(e),c=we(r),l=ht(t,G(r));for(let u=0;u<a;++u){const d=ao(u,o,i),p=new Array(d.length);for(let h=0;h<p.length;h++)p[h]=d[s[h]];const f=Vn(p,o,c);l[f]=n[u]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;ge(r,"transpose");const a=r.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=r.shape[o[d]];const c=s.data.get(r.dataId).values,l=ny(c,r.shape,r.dtype,o,i);return{dataId:s.write(l,i,r.dtype),shape:i,dtype:r.dtype}}const mL={kernelName:Ao,backendName:"cpu",kernelFunc:Ht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n,e,t,s){const[r,o]=vt(n,s),a=Ut(e,"int32"),i=xt(G(r),a),c=G(o);for(let l=0;l<i.length;++l){const u=l*c;let d=1;for(let p=0;p<c;++p)d*=t[u+p];i[l]=d}return{outVals:i,outShape:r,outDtype:a}}function gL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ge(r,"prod");const i=r.shape.length,c=Pe(o,r.shape),l=at(c,i);let u=c,d=r;const p=[];l!=null&&(d=Ht({inputs:{x:r},backend:t,attrs:{perm:l}}),p.push(d),u=it(u.length,i));const f=t.data.get(d.dataId).values,{outVals:h,outShape:g,outDtype:m}=AC(d.shape,d.dtype,f,u);let y=g;return a&&(y=ut(g,c)),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,m,h)}const yL={kernelName:Nd,backendName:"cpu",kernelFunc:gL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=ao(r,e.length,we(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function xL(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function wL(n,e,t,s){const r=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);xL(t,s);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const u=e[l+1];for(let d=1;d<c+1;++d)i[l].push(d*u)}for(let l=0;l<n.length;++l){let u=n[l],d=n[l]+1;for(let p=0;p<t.length;++p){const f=t[p],h=p+e.length-1;if(h>=0){const g=i[h],m=g[g.length-1]-f[u];for(let y=u;y<d;++y)i[h].push(f[y+1]+m)}u=f[u],d=f[d]}d!==u&&(r.push([u,d]),o+=d-u)}return{outSplits:i,valueSlices:r,numValues:o}}function vL(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=st("int32",s);e.push(r),n[t].forEach((o,a)=>r[a]=o)}return e}function Lb(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function $L(n,e,t,s,r,o){const a=Lb(e,2)[1],i=Lb(o,2)[1];let c=0;for(const l of t)for(let u=l[0];u<l[1];++u){for(let d=0;d<s;++d)r[c*i+d]=n[u*a+d];++c}}function CL(n,e,t,s,r){const o=e.slice();o[0]=r;const a=st(t,G(o)),i=n.length,c=i===0?0:i/e[0];return $L(n,e,s,c,a,o),[a,o]}function RC(n,e,t,s,r,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(bL(o,a,c),s.length===0)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:d,numValues:p}=wL(o,a,n,l),f=vL(u),h=CL(t,s,r,d,p);return[f,h[0],h[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vb=2147483647;function OC(n,e,t,s,r,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,c=r.length===0,l=a.length===0,u=[];i||u.push(e[0]),c||u.push(r[0]),l||u.push(a[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const d=u.length===0?1:u[0],p=st("int32",d+1);p[0]=0;for(let m=0;m<d;++m){const y=i?n[0]:n[m],b=c?s[0]:s[m],v=l?o[0]:o[m];if(v===0)throw new Error("Requires delta != 0");let x;if(v>0&&b<y||v<0&&b>y)x=0;else if(x=Math.ceil(Math.abs((b-y)/v)),x>Vb)throw new Error(`Requires ((limit - start) / delta) <= ${Vb}`);p[m+1]=p[m]+x}const f=p[d],h=st(t,f);let g=0;for(let m=0;m<d;++m){const y=p[m+1]-p[m];let b=i?n[0]:n[m];const v=l?o[0]:o[m];for(let x=0;x<y;++x)h[g++]=b,b+=v}return[p,h]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var gn=Dn;class Gl{constructor(e,t,s,r,o,a,i,c,l,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=D$(u),this.raggedRank=F$(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===gn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===gn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case gn.VALUE_ROWIDS:return Gl.getMaxWidthValueRowID(t);case gn.ROW_SPLITS:return Gl.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${gn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==r&&(r=i,o=Math.max(a-s,o),s=a)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Bb(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;P$(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=O$(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let a=0;for(let i=0;i<r;++i,a+=t)o.push(a);for(let i=r;i<e;++i)o.push(-1);return T(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,a=[];for(let i=0;i<o-1;++i){const c=e[i+1]-e[i];let l=Math.min(r,c),u=t[i];u===-1&&(l=0);for(let d=0;d<l;++d)a.push(u),u+=s;for(let d=0;d<c-l;++d)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,a=[];if(o===0)return[];let i=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let l=t[c];a.push(l);for(let u=1;u<o;++u){const d=e[u];if(d===c)l>=0&&(++i,i<r?l+=s:l=-1);else{if(i=0,c=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);l=t[d]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case gn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case gn.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${gn[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case gn.FIRST_DIM_SIZE:return e[0];case gn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case gn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${gn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let c=r.length-2;c>=0;--c)r[c]=r[c+1]*s[c+1];const o=Bb(s,!1),a=st(this.valuesDType,G(o));if(r[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let l=1;l<=this.raggedRank;++l)c=this.calculateOutputIndex(l-1,c,r[l],s[l]);this.setOutput(this.raggedRank,c,a,o)}return[o,a]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,a=s;let i=r.slice();i=i.slice(e+1);const c=G(i),l=t.length;let u=this.defaultValue;if(u.length!==c&&u.length!==1){const h=this.defaultValueShape;Ve(()=>{const g=q(u,h);u=Do(g,i).dataSync()})}let d=0,p=0,f=0;for(let h=0;h<=l;++h){let g=h<l?t[h]:-1;if(g===f){++f;continue}if(p<f){const m=o.subarray(d*c),y=a.subarray(p*c),b=(f-p)*c;Mb(y,m,b)}if(h>=l){const m=s.length;g=Math.floor(m/c)}if(g>f)if(this.defaultValue.length===1)a.subarray(f*c,g*c).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=a.slice(f*c);Mb(m,u,c),++f}g<0?(d=h+1,p=f):(d=h,p=f,f=p+1)}}}function Mb(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function Bb(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function DC(n,e,t,s,r,o,a,i,c,l){return new Gl(n,e,t,s,r,o,a,i,c,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(n,e,t,s){const r=n===e,o=n<e&&t<0,a=e<n&&t>1;if(r||o||a)return xt(0,s);const i=Math.abs(Math.ceil((e-n)/t)),c=xt(i,s);e<n&&t===1&&(t=-1),c[0]=n;for(let l=1;l<c.length;l++)c[l]=c[l-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=ls(n=>1/Math.sqrt(n)),NL=hr(oc,PC),TL={kernelName:oc,backendName:"cpu",kernelFunc:NL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(n,e,t,s,r,o,a,i,c,l){const u=[s/r,r],d=n.values,p=e.values;if(s===0)return Ee(t,e.dtype);const f=c instanceof lt?c:Ee(u,e.dtype);typeof c=="string"||typeof c=="number"?f.values.fill(c):typeof c=="boolean"&&f.values.fill(+c);for(let h=0;h<o;h++){const g=[];let m=0;for(let y=0;y<a;y++){const b=d[h*a+y];g.push(b),m+=b*i[y]}if(m<0||m>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let y=0;y<r;y++)l?f.values[m*r+y]+=p[h*r+y]:f.values[m*r+y]=e.rank===0?p[0]:p[h*r+y]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL=ls(n=>1/(1+Math.exp(-n))),LC=ze(uc,n=>1/(1+Math.exp(-n))),EL={kernelName:uc,backendName:"cpu",kernelFunc:LC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,e,t,s,r){const o=_g(s,e,t),a=G(t),i=we(s);if(o){const d=Ig(e,i);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const c=r==="string"?Ts(n):n,l=Ee(s,r,c),u=Ee(t,r);for(let d=0;d<u.size;++d){const p=u.indexToLoc(d),f=p.map((h,g)=>h+e[g]);u.set(l.get(...f),...p)}return r==="string"?nC(u.values):u.values}function Qr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s;ge(r,"slice");const[i,c]=kg(r,o,a);Sg(r,i,c);const l=t.data.get(r.dataId).values,u=VC(l,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,u)}const _L={kernelName:Vd,backendName:"cpu",kernelFunc:Qr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n,e,t,s,r,o,a){const i=e[0],c=o[0],l=new Array(c),u=new Array(i),d=e[1];if(c===0){if(i!==0)throw new Error(U$(i));const m=st(t,0),y=st(r,0);return[m,[0,d],y,l,u]}let p=!0,f=0;const h=new Array(c).fill(0);for(let m=0;m<i;++m){const y=n[m*d];if(y<0)throw new Error(G$(m,y));if(y>=c)throw new Error(H$(m,y,c));++h[y],p=p&&y>=f,f=y}let g=!0;for(let m=0;m<c;++m){const y=h[m]===0;l[m]=y,g=g&&!y,h[m]=Math.max(h[m],1),m>0&&(h[m]+=h[m-1])}if(g&&p){const m=n,y=s;for(let b=0;b<i;++b)u[b]=b;return[m,[i,d],y,l,u]}else{const m=h[c-1],y=st(t,m*d),b=st(r,m),v=new Array(c).fill(0);for(let x=0;x<i;++x){const $=n[x*d],C=v[$],S=($===0?0:h[$-1])+C;v[$]++;for(let E=0;E<d;++E)y[S*d+E]=n[x*d+E];b[S]=s[x],u[x]=S}for(let x=0;x<c;++x)if(v[x]===0){const C=x===0?0:h[x-1];y[C*d+0]=x;for(let S=1;S<d;++S)y[C*d+S]=0;b[C]=a}return[y,[m,d],b,l,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n,e,t,s,r){const o=G(s),a=e[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const y=r[m];if(y===-1){if(u!==-1)throw new Error(j$(u,m));u=m,c.push(1)}else{if(y<0)throw new Error(K$(m,y));l*=y,c.push(y)}}if(u!==-1){if(l<=0)throw new Error(q$());const m=Math.trunc(o/l);if(l*m!==o)throw new Error(X$(s,c));c[u]=m}if(G(c)!==o)throw new Error(Y$(s,c));const p=s.length,f=[];if(p>0){f[p-1]=1;for(let m=p-2;m>=0;--m)f[m]=f[m+1]*s[m+1]}const h=[];if(i>0){h[i-1]=1;for(let m=i-2;m>=0;--m)h[m]=h[m+1]*c[m+1]}const g=st(t,a*i);for(let m=0;m<a;++m){let y=0;for(let b=0;b<p;++b)y+=n[m*p+b]*f[b];for(let b=0;b<i;++b)g[m*i+b]=Math.trunc(y/h[b]),y%=h[b]}return[g,[a,i],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e,t,s,r,o=!1,a=0){const i=s.length,c=[e[0],n.length/e[0]],l=c[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(ih());const p=e.slice();p[0]=d;const f=p.reduce((v,x)=>v*x,1),h=st(t,f);if(i===0)return d>0&&h.fill(a),[h,p];if(d<=0)throw new Error(ih());let g=0,m=1,y=0,b=r[g];for(;;){let v=0;if(m<i){if(v=r[m],b===v){++m;continue}if(b>=v)throw new Error(Q$())}if(b<0||b>=d)throw new Error(Z$(b,d));b>y&&h.fill(a,y*l,b*l);for(let x=g;x<m;++x){const $=s[x];if($<0||$>=c[0])throw new Error(J$(x,s[x],c[0]));for(let C=0;C<l;C++)h[b*l+C]+=n[$*l+C]}if(o)for(let x=0;x<l;x++)h[b*l+x]/=m-g;if(g=m,++m,y=b+1,b=v,m>i)break}return y<d&&h.fill(a,y*l,d*l),[h,p]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=ls(n=>Math.sqrt(n)),kL=ze(pc,n=>Math.sqrt(n)),AL={kernelName:pc,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC=ct((n,e)=>{const t=n-e;return t*t}),RL=dt(fc,WC),OL={kernelName:fc,backendName:"cpu",kernelFunc:RL};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC=ls((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),DL=hr(hc,zC),FL={kernelName:hc,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e,t,s){const r=Ee(n,e.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let c=0;c<i.length;c++)i[c]=a[c]*t[c]+s[c];r.set(e.get(...i),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PL{constructor(e,t,s,r,o,a){this.separator=Zn(e),this.nGramWidths=t,this.leftPad=Zn(s),this.rightPad=Zn(r),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,a){for(let i=0;i<o;++i){const c=this.getPadWidth(a),l=Math.max(0,c-i),u=Math.max(0,c-(o-(i+1))),d=a-(l+u),p=t+(l>0?0:i-c);let f=0;f+=l*this.leftPad.length;for(let b=0;b<d;++b)f+=e[p+b].length;f+=u*this.rightPad.length;const h=l+u+d-1;f+=h*this.separator.length,s[r+i]=new Uint8Array(f);const g=s[r+i];let m=0;const y=b=>b.forEach(v=>g[m++]=v);for(let b=0;b<l;++b)y(this.leftPad),y(this.separator);for(let b=0;b<d-1;++b)y(e[p+b]),y(this.separator);if(d>0){y(e[p+d-1]);for(let b=0;b<u;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<u-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let l=1;l<r;++l){let u=t[l]>=c;if(u=u&&t[l]<=s,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${c}, ${s}]`);c=t[l]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const o=r-1,a=st("int32",r);if(s===0||r===0){const c=new Array(s);for(let l=0;l<=o;++l)a[l]=0;return[c,a]}a[0]=0;for(let c=1;c<=o;++c){const l=t[c]-t[c-1];let u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),a[c]=a[c-1]+u}const i=new Array(a[o]);for(let c=0;c<o;++c){const l=t[c];let u=a[c];if(this.nGramWidths.forEach(d=>{const p=t[c+1]-t[c],f=this.getNumNGrams(p,d);this.createNGrams(e,l,i,u,f,d),u+=f}),this.preserveShort&&u===a[c]){const d=t[c+1]-t[c];if(d===0)continue;const p=d+2*this.padWidth;this.createNGrams(e,l,i,u,1,p)}}return[i,a]}}function GC(n,e,t,s,r,o,a,i){return new PL(t,s,r,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&s.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(r,o);(!t||a.length!==0)&&s.push(a),r=o+1}}function HC(n,e,t){const s=n.length,r=[];let o=0,a=0;const i=new Array(s);for(let p=0;p<s;++p){const f=r.length;LL(n[p],e,t,r);const h=r.length-f;i[p]=h,o+=h,a=Math.max(a,h)}const c=st("int32",o*2),l=new Array(o),u=[s,a];let d=0;for(let p=0;p<s;++p)for(let f=0;f<i[p];++f)c[d*2]=p,c[d*2+1]=f,l[d]=r[d],++d;return[c,l,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,e){const t=st("int32",n.length);for(let s=0;s<n.length;++s)t[s]=Sw(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=ct((n,e)=>n-e),VL=Jg((n,e,t,s)=>({real:n-t,imag:e-s})),ry=dt(mc,KC,VL),ML={kernelName:mc,backendName:"cpu",kernelFunc:ry};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=Ee(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let c=0;c<a.length;c++)a[c]=o[c]%n.shape[c];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function XC(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const i=s-t+1,c=e-t+1,l=Math.log(i),u=.5*Math.exp(2*l/3),d=.5*Math.sqrt(l*u*(i-u)/i)*Math.sign(c-i/2),p=Math.max(t,Math.floor(e-c*u/i+d)),f=Math.min(s,Math.floor(e+(i-c)*u/i+d));XC(n,e,p,f)}const r=n[e];let o=t,a=s;for(hs(n,t,e),Da(n[s],r)>0&&hs(n,t,s);o<a;){for(hs(n,o,a),o++,a--;Da(n[o],r)<0;)o=o+1;for(;Da(n[a],r)>0;)a=a-1}Da(n[t],r)===0?hs(n,t,a):(a=a+1,hs(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function YC(n,e,t,s,r){const o=e[e.length-1],[a,i]=[n.length/o,o],c=ht(t,a*s),l=ht("int32",a*s);for(let d=0;d<a;d++){const p=d*i,f=n.subarray(p,p+i);let h=new Array(f.length);f.forEach((b,v)=>h[v]={value:b,index:v}),s<h.length&&(XC(h,s),h=h.slice(0,s)),r&&h.sort(Da);const g=d*s,m=c.subarray(g,g+s),y=l.subarray(g,g+s);for(let b=0;b<s;b++)m[b]=h[b].value,y[b]=h[b].index}const u=e.slice();return u[u.length-1]=s,[Ee(u,t,c),Ee(u,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,e,t,s){const r=Pe(e,t)[0],o=[1,t[0],1];for(let h=0;h<r;h++)o[0]*=t[h];o[1]=t[r];for(let h=r+1;h<t.length;h++)o[2]*=t[h];const a=new Map,i=new Int32Array(t[r]),c=new lt(o,s,n),l=[],u=o[0]===1&&o[2]===1;for(let h=0;h<t[r];h++){let g;if(u)g=n[h].toString();else{const y=[];for(let b=0;b<o[0];b++)for(let v=0;v<o[2];v++)y.push(c.get(b,h,v));g=y.join(",")}const m=a.get(g);if(m!=null)i[h]=m;else{const y=a.size;a.set(g,y),i[h]=y,l.push(h)}}const d=o.slice();d[1]=a.size;const p=new lt(d,s);l.forEach((h,g)=>{for(let m=0;m<o[0];m++)for(let y=0;y<o[2];y++)p.set(c.get(m,h,y),m,g,y)});const f=t.slice();return f[r]=d[1],{outputValues:p.values,outputShape:f,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL=Object.freeze(Object.defineProperty({__proto__:null,addImpl:aC,bincountImpl:ey,bincountReduceImpl:iC,bitwiseAndImpl:cC,castImpl:oC,ceilImpl:lC,concatImpl:uC,equalImpl:dC,expImpl:fC,expm1Impl:mC,floorDivImpl:yC,floorImpl:gC,gatherNdImpl:bC,gatherV2Impl:xC,greaterEqualImpl:vC,greaterImpl:wC,lessEqualImpl:CC,lessImpl:$C,linSpaceImpl:NC,logImpl:TC,maxImpl:SC,maximumImpl:EC,minimumImpl:_C,multiplyImpl:ty,negImpl:IC,notEqualImpl:kC,prodImpl:AC,raggedGatherImpl:RC,raggedRangeImpl:OC,raggedTensorToTensorImpl:DC,rangeImpl:FC,rsqrtImpl:PC,scatterImpl:Or,sigmoidImpl:SL,simpleAbsImpl:rC,sliceImpl:VC,sparseFillEmptyRowsImpl:MC,sparseReshapeImpl:BC,sparseSegmentReductionImpl:sy,sqrtImpl:IL,squaredDifferenceImpl:WC,staticRegexReplaceImpl:zC,stridedSliceImpl:UC,stringNGramsImpl:GC,stringSplitImpl:HC,stringToHashBucketFastImpl:jC,subImpl:KC,tileImpl:qC,topKImpl:YC,transposeImpl:ny,uniqueImpl:QC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$m("cpu",()=>new Ip,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=ze(Ii,n=>n>=0?n:Math.exp(n)-1),WL={kernelName:Ii,backendName:"cpu",kernelFunc:ZC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;ge([r],"leakyRelu");const a=G(r.shape),i=t.data.get(r.dataId).values,c=ht("float32",a);for(let l=0;l<i.length;l++)c[l]=i[l]<0?o*i[l]:i[l];return t.makeTensorInfo(r.shape,"float32",c)}const zL={kernelName:rd,backendName:"cpu",kernelFunc:JC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UL=ct((n,e)=>n<0?e*n:n);function eN(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;ge([s,r],"prelu");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[i,c]=UL(s.shape,r.shape,o,a,"float32");return t.makeTensorInfo(c,"float32",i)}const GL={kernelName:Cd,backendName:"cpu",kernelFunc:eN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=ze(nc,n=>Math.max(0,n)),HL={kernelName:nc,backendName:"cpu",kernelFunc:tN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN=ze(sc,n=>Math.min(Math.max(0,n),6)),jL={kernelName:sc,backendName:"cpu",kernelFunc:nN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n,e,t,s,r){if(t==="linear")return is({inputs:{x:e},backend:n});if(t==="relu")return tN({inputs:{x:e},backend:n});if(t==="elu")return ZC({inputs:{x:e},backend:n});if(t==="relu6")return nN({inputs:{x:e},backend:n});if(t==="prelu")return eN({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return JC({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return LC({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=G(r.shape),i=em(o,a),c=G(i);T(a===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const l=t.data.get(r.dataId);if(l.complexTensorInfos!=null){const u=l.complexTensorInfos.real,d=l.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const KL={kernelName:kd,backendName:"cpu",kernelFunc:Ye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;ge([r,o],"matMul");const c=r.shape.length,l=o.shape.length,u=a?r.shape[c-2]:r.shape[c-1],d=i?o.shape[l-1]:o.shape[l-2],p=a?r.shape[c-1]:r.shape[c-2],f=i?o.shape[l-2]:o.shape[l-1],h=r.shape.slice(0,-2),g=o.shape.slice(0,-2),m=G(h),y=G(g),v=Re(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);T(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const x=a?[m,u,p]:[m,p,u],$=i?[y,f,d]:[y,d,f],C=Ye({inputs:{x:r},backend:t,attrs:{shape:x}}),S=Ye({inputs:{x:o},backend:t,attrs:{shape:$}}),E=a?C.shape[1]:C.shape[2],R=a?C.shape[2]:C.shape[1],A=i?S.shape[1]:S.shape[2],D=Math.max(m,y),L=t.data.get(C.dataId).values,F=t.data.get(S.dataId).values,B=we(C.shape),W=we(S.shape),[V,z,M]=a?[B[0],1,B[1]]:[B[0],B[1],1],[j,J,Z]=i?[1,W[1],W[0]]:[W[1],1,W[0]],ee=R*A,ne=Ee([D,R,A],C.dtype),oe=ne.values,se=t.blockSize;for(let ae=0;ae<D;ae++){const fe=ae%m,be=ae%y;for(let xe=0;xe<R;xe+=se){const Ce=Math.min(xe+se,R);for(let Ne=0;Ne<A;Ne+=se){const De=Math.min(Ne+se,A);for(let _=0;_<E;_+=se){const O=Math.min(_+se,E);for(let U=xe;U<Ce;U++)for(let H=Ne;H<De;H++){let K=0;for(let Y=_;Y<O;Y++){const ie=L[fe*V+U*z+Y*M],X=F[Y*j+H*J+be*Z];K+=ie*X}oe[ae*ee+(U*A+H)]+=K}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo(S),t.makeTensorInfo(v,ne.dtype,ne.values)}const qL={kernelName:Tu,backendName:"cpu",kernelFunc:sN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=s;let p,f,h;const g=[];p=sN({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:l},backend:t}),a&&(f=qo({inputs:{a:p,b:a},backend:t}),g.push(p),p=f),u&&(h=Hl(t,p,u,i,d),g.push(p),p=h);for(const y of g)t.disposeIntermediateTensorInfo(y);return p}const YL={kernelName:qa,backendName:"cpu",kernelFunc:XL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL=ze(mi,n=>Math.acos(n)),ZL={kernelName:mi,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JL=ze(gi,n=>Math.acosh(n)),e3={kernelName:gi,backendName:"cpu",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n){const{inputs:e,backend:t}=n,s=e;ge(e,"addN");const r=s.map(i=>t.data.get(i.dataId).values),o=Ee(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const c=r[i];for(let l=0;l<a.length;l++)a[l]+=c[l]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const n3={kernelName:bu,backendName:"cpu",kernelFunc:t3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ge(r,"all");const i=Pe(o,r.shape);let c=i;const l=at(c,r.shape.length);let u=r;l!=null&&(u=Ht({inputs:{x:r},backend:t,attrs:{perm:l}}),c=it(c.length,r.shape.length)),$t("all",c,u.shape.length);const[d,p]=vt(u.shape,c),f=G(p),h=xt(G(d),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<h.length;++y){const b=y*f;let v=g[b];for(let x=0;x<f;++x){const $=g[b+x];v=v&&$}h[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(d,u.dtype,h);if(a){const y=ut(d,i),b=Ye({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const r3={kernelName:xu,backendName:"cpu",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ge(r,"any");const i=Pe(o,r.shape);let c=i;const l=at(c,r.shape.length);let u=r;l!=null&&(u=Ht({inputs:{x:r},backend:t,attrs:{perm:l}}),c=it(c.length,r.shape.length)),$t("any",c,u.shape.length);const[d,p]=vt(u.shape,c),f=G(p),h=xt(G(d),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<h.length;++y){const b=y*f;let v=g[b];for(let x=0;x<f;++x){const $=g[b+x];v=v||$}h[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(d,u.dtype,h);if(a){const y=ut(d,i),b=Ye({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const a3={kernelName:wu,backendName:"cpu",kernelFunc:o3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;ge(r,"argMax");let a=Pe(o,r.shape);const i=at(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Ht({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=it(a.length,c.shape.length)),a=[a[0]],$t("argMax",a,c.shape.length);const[u,d]=vt(c.shape,a),p=G(u),f=xt(p,"int32"),h=G(d),g=t.data.get(c.dataId).values;for(let m=0;m<f.length;++m){const y=m*h;let b=g[y],v=0;for(let x=0;x<h;++x){const $=g[y+x];$>b&&(b=$,v=x)}f[m]=v}return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(u,"int32",f)}const c3={kernelName:vu,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;ge(r,"argMin");let a=Pe(o,r.shape);const i=at(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Ht({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=it(a.length,c.shape.length)),a=[a[0]],$t("argMin",a,c.shape.length);const[u,d]=vt(c.shape,a),p=G(u),f=xt(p,"int32"),h=G(d),g=t.data.get(c.dataId).values;for(let m=0;m<f.length;++m){const y=m*h;let b=g[y],v=0;for(let x=0;x<h;++x){const $=g[y+x];$<b&&(b=$,v=x)}f[m]=v}return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(u,"int32",f)}const u3={kernelName:$u,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d3=ze(yi,n=>Math.asin(n)),p3={kernelName:yi,backendName:"cpu",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=ze(bi,n=>Math.asinh(n)),h3={kernelName:bi,backendName:"cpu",kernelFunc:f3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m3=ze(xi,n=>Math.atan(n)),g3={kernelName:xi,backendName:"cpu",kernelFunc:m3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=ct((n,e)=>Math.atan2(n,e)),b3=dt(vi,y3),x3={kernelName:vi,backendName:"cpu",kernelFunc:b3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=ze(wi,n=>Math.atanh(n)),v3={kernelName:wi,backendName:"cpu",kernelFunc:w3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oy(n,e,t,s,r,o){const a=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,h=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ee(r.outShape,t),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const $=x*y,C=x*s[0];for(let S=0;S<r.inChannels;++S)for(let E=0;E<r.outHeight;++E){const R=E*a-p,A=Math.max(0,R),D=Math.min(r.inHeight,u+R),L=$+E*b;for(let F=0;F<r.outWidth;++F){const B=F*i-f,W=Math.max(0,B),V=Math.min(r.inWidth,d+B);let z=h,M=0,j=0;for(let Z=A;Z<D;Z+=c){const ee=C+Z*s[1];for(let ne=W;ne<V;ne+=l){const oe=ee+ne*s[2],se=n[oe+S];o==="max"&&se>z?z=se:o==="avg"&&(M+=se,j++)}if(isNaN(z))break}const J=L+F*v+S;m[J]=o==="avg"?M/j:z}}}return g}function rN(n,e,t,s,r=!1,o=!1){const a=Ee(s.outShape,"int32"),i=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,h=s.padInfo.left,g=Ee(e,t,n);for(let m=0;m<s.batchSize;++m)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const v=b*i-f;let x=v;for(;x<0;)x+=l;const $=Math.min(s.inHeight,d+v);for(let C=0;C<s.outWidth;++C){const S=C*c-h;let E=S;for(;E<0;)E+=u;const R=Math.min(s.inWidth,p+S);let A=Number.NEGATIVE_INFINITY,D=-1;for(let L=x;L<$;L+=l){const F=L-v;for(let B=E;B<R;B+=u){const W=B-S,V=g.get(m,L,B,y);V>A&&(A=V,r?D=o?((m*s.inHeight+L)*s.inWidth+B)*s.inChannels+y:(L*s.inWidth+B)*s.inChannels+y:D=F*p+W)}}a.set(D,m,b,C,y)}}return a}function oN(n,e,t,s,r,o){const a=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,h=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,y=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Ee(r.outShape,t),x=v.values,$=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){const A=R*$,D=R*s[0];for(let L=0;L<r.inChannels;++L)for(let F=0;F<r.outDepth;++F){const B=F*a-g;let W=B;for(;W<0;)W+=l;const V=Math.min(r.inDepth,p+B),z=A+F*C;for(let M=0;M<r.outHeight;++M){const j=M*i-m;let J=j;for(;J<0;)J+=u;const Z=Math.min(r.inHeight,f+j),ee=z+M*S;for(let ne=0;ne<r.outWidth;++ne){const oe=ne*c-y;let se=oe;for(;se<0;)se+=d;const ae=Math.min(r.inWidth,h+oe),fe=ee+ne*E;let be=b,xe=0,Ce=0;for(let De=W;De<V;De+=l){const _=D+De*s[1];for(let O=J;O<Z;O+=u){const U=_+O*s[2];for(let H=se;H<ae;H+=d){const K=U+H*s[3],Y=n[K+L];if(o==="max"&&Y>be?be=Y:o==="avg"&&(xe+=Y,Ce++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}const Ne=fe+L;x[Ne]=o==="avg"?xe/Math.max(Ce,1):be}}}}return v}function $3(n,e){const t=Ee(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,h=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*s-p;let v=b;for(;v<0;)v+=a;const x=Math.min(e.inDepth,l+b);for(let $=0;$<e.outHeight;++$){const C=$*r-f;let S=C;for(;S<0;)S+=i;const E=Math.min(e.inHeight,u+C);for(let R=0;R<e.outWidth;++R){const A=R*o-h;let D=A;for(;D<0;)D+=c;const L=Math.min(e.inWidth,d+A);let F=Number.NEGATIVE_INFINITY,B=-1;for(let W=v;W<x;W+=a){const V=W-b;for(let z=S;z<E;z+=i){const M=z-C;for(let j=D;j<L;j+=c){const J=j-A,Z=n.get(g,W,z,j,m);Z>=F&&(F=Z,B=V*u*d+M*u+J)}}}t.set(B,g,y,$,R,m)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ge(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;T(Et(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=En(r.shape,o,a,l,i,c);let d;if(u.filterWidth===1&&u.filterHeight===1&&Ue(u.inShape,u.outShape))d=is({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,f=we(r.shape),h=oy(p,r.shape,r.dtype,f,u,"avg");d=t.makeTensorInfo(u.outShape,r.dtype,h.values)}return d}const N3={kernelName:Cu,backendName:"cpu",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s;ge(r,"avgPool3d");const u=ks(r.shape,o,a,1,i,c,l),d=t.data.get(r.dataId).values,p=oN(d,r.shape,r.dtype,we(r.shape),u,"avg");return t.makeTensorInfo(p.shape,"float32",p.values)}const S3={kernelName:Nu,backendName:"cpu",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:l}=s;ge([r,o],"avgPool3DGrad");const u=ks(o.shape,a,i,1,c,l),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,h=u.filterDepth,g=u.filterHeight,m=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,v=u.dilationWidth,x=u.effectiveFilterDepth,$=u.effectiveFilterHeight,C=u.effectiveFilterWidth,S=x-1-u.padInfo.front,E=C-1-u.padInfo.left,R=$-1-u.padInfo.top,A=Ee(o.shape,"float32"),D=1/(h*g*m),L=t.bufferSync(r);for(let F=0;F<u.batchSize;++F)for(let B=0;B<u.inChannels;++B)for(let W=0;W<u.inDepth;++W)for(let V=0;V<u.inHeight;++V)for(let z=0;z<u.inWidth;++z){const M=W-S,j=V-R,J=z-E;let Z=0;for(let ee=0;ee<x;ee+=y){const ne=(M+ee)/d;if(!(ne<0||ne>=u.outDepth||Math.floor(ne)!==ne))for(let oe=0;oe<$;oe+=b){const se=(j+oe)/p;if(!(se<0||se>=u.outHeight||Math.floor(se)!==se))for(let ae=0;ae<C;ae+=v){const fe=(J+ae)/f;if(fe<0||fe>=u.outWidth||Math.floor(fe)!==fe)continue;const be=L.get(F,ne,se,fe,B);Z+=be}}}A.set(Z*D,F,W,V,z,B)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}const _3={kernelName:am,backendName:"cpu",kernelFunc:E3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;ge([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=En(a.shape,i,c,1,l),d=u.strideHeight,p=u.strideWidth,f=u.filterHeight,h=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,v=b-1-u.padInfo.left,x=y-1-u.padInfo.top,$=Ee(a.shape,"float32"),C=1/(f*h),S=t.data.get(r.dataId).values,E=Ee(r.shape,"float32",S);for(let R=0;R<u.batchSize;++R)for(let A=0;A<u.inChannels;++A)for(let D=0;D<u.inHeight;++D)for(let L=0;L<u.inWidth;++L){const F=D-x,B=L-v;let W=0;for(let V=0;V<y;V+=g){const z=(F+V)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let M=0;M<b;M+=m){const j=(B+M)/p;if(j<0||j>=u.outWidth||Math.floor(j)!==j)continue;const J=E.get(R,z,j,A);W+=J}}$.set(W*C,R,D,L,A)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const k3={kernelName:om,backendName:"cpu",kernelFunc:I3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:c}=e;T(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ge([r,i,c,o,a],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const u=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,p=t.data.get(c.dataId).values,f=o?t.data.get(o.dataId).values:new Float32Array([1]),h=a?t.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=h.length,y=f.length,b=p.length,v=d.length;let x=0,$=0,C=0,S=0;for(let E=0;E<u.length;++E)g[E]=h[x++]+(u[E]-d[$++])*f[C++]/Math.sqrt(p[S++]+l),x>=m&&(x=0),$>=v&&($=0),C>=y&&(C=0),S>=b&&(S=0);return t.makeTensorInfo(r.shape,r.dtype,g)}const R3={kernelName:Ju,backendName:"cpu",kernelFunc:A3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;ge([r],"batchToSpaceND");const i=o.reduce((y,b)=>y*b),c=kc(r.shape,o,i),l=Ac(c.length,o.length),u=Rc(r.shape,o,i),d=Fg(a,o.length),p=Pg(u,a,o.length),f=Ye({inputs:{x:r},backend:t,attrs:{shape:c}}),h=Ht({inputs:{x:f},backend:t,attrs:{perm:l}}),g=Ye({inputs:{x:h},backend:t,attrs:{shape:u}}),m=Qr({inputs:{x:g},backend:t,attrs:{begin:d,size:p}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),m}const D3={kernelName:Su,backendName:"cpu",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,l=ey(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}const P3={kernelName:Eu,backendName:"cpu",kernelFunc:F3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,i=Re(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const V3={kernelName:_u,backendName:"cpu",kernelFunc:L3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3=ze(Ti,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),B3={kernelName:Ti,backendName:"cpu",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(G(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){const u=i[l],d=c[l];s[l]=Math.hypot(u,d)}return t.makeOutput(s,e.shape,"float32")},z3={kernelName:ku,backendName:"cpu",kernelFunc:W3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const U3={kernelName:sd,backendName:"cpu",kernelFunc:Xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Pe(r,e[0].shape)[0],a=e.map(g=>g.shape);Rg(a,o);let i=Jn(e.map(g=>g.shape),o);if(G(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(g=>G(g.shape)>0);if(c.length===1)return is({inputs:{x:c[0]},backend:t});if(c[0].dtype==="complex64"){const g=c.map(x=>Yr({inputs:{input:x},backend:t})),m=c.map(x=>Xo({inputs:{input:x},backend:t})),y=Yo({inputs:g,backend:t,attrs:{axis:o}}),b=Yo({inputs:m,backend:t,attrs:{axis:o}}),v=Zt({inputs:{real:y,imag:b},backend:t});return g.forEach(x=>t.disposeIntermediateTensorInfo(x)),m.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),v}const l=c.map(g=>{const y=[-1,G(g.shape.slice(o))];return Ye({inputs:{x:g},backend:t,attrs:{shape:y}})}),u=l.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));i=Jn(l.map(g=>g.shape),1);const d=l[0].shape[0]===1,p=uC(u,i,e[0].dtype,d),f=Jn(c.map(g=>g.shape),o),h=t.makeTensorInfo(f,e[0].dtype,p);return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}const G3={kernelName:Au,backendName:"cpu",kernelFunc:Yo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s;ge([r,o],"conv2d");const d=As(c),p=mt(r.shape,o.shape,a,l,i,u,!1,d),f=p.filterHeight,h=p.filterWidth,g=p.dilationHeight,m=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,v=p.dataFormat==="channelsLast",x=new lt(p.outShape,r.dtype),$=we(r.shape),C=we(o.shape),S=$[0],E=v?$[1]:$[2],R=v?$[2]:1,A=v?1:$[1],D=x.strides[0],L=v?x.strides[1]:x.strides[2],F=v?x.strides[2]:1,B=v?1:x.strides[1],W=t.data.get(r.dataId).values,V=t.data.get(o.dataId).values,z=x.values;for(let M=0;M<p.batchSize;++M){const j=M*S,J=M*D;for(let Z=0;Z<p.outHeight;++Z){const ee=J+Z*L,ne=Z*p.strideHeight-b;for(let oe=0;oe<f;++oe){const se=ne+oe*g;if(se<0||se>=p.inHeight)continue;const ae=oe*C[0],fe=j+se*E;for(let be=0;be<p.outWidth;++be){const xe=ee+be*F,Ce=be*p.strideWidth-y;for(let Ne=0;Ne<h;++Ne){const De=Ce+Ne*m;if(De<0||De>=p.inWidth)continue;const _=ae+Ne*C[1],O=fe+De*R;let U=_;for(let H=0;H<p.inChannels;++H){const K=W[O+H*A];for(let Y=0;Y<p.outChannels;++Y)z[xe+Y*B]+=K*V[U+Y];U+=p.outChannels}}}}}}return t.makeTensorInfo(x.shape,x.dtype,z)}const H3={kernelName:Ru,backendName:"cpu",kernelFunc:aN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s;ge([r,o],"conv2dBackpropFilter");const d=As(c),p=mt(r.shape,u,a,1,i,l,!1,d),{strideHeight:f,strideWidth:h,filterHeight:g,filterWidth:m}=p,y=p.dataFormat==="channelsLast",b=new lt(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,$=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,S=new lt(r.shape,r.dtype,$),E=new lt(o.shape,o.dtype,C);for(let R=0;R<g;++R){const A=Math.max(0,Math.ceil((x-R)/f)),D=Math.min(p.outHeight,(p.inHeight+x-R)/f);for(let L=0;L<m;++L){const F=Math.max(0,Math.ceil((v-L)/h)),B=Math.min(p.outWidth,(p.inWidth+v-L)/h);for(let W=0;W<p.inChannels;++W)for(let V=0;V<p.outChannels;++V){let z=0;for(let M=0;M<p.batchSize;++M)for(let j=A;j<D;++j){const J=R+j*f-x;for(let Z=F;Z<B;++Z){const ee=L+Z*h-v;y?z+=S.get(M,J,ee,W)*E.get(M,j,Z,V):z+=S.get(M,W,J,ee)*E.get(M,V,j,Z)}}b.set(z,R,L,W,V)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const K3={kernelName:Ou,backendName:"cpu",kernelFunc:j3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s;ge([r,o],"conv2dBackpropInput");const d=we(o.shape),p=we(r.shape);let f=As(l);const h=mt(a,o.shape,i,1,c,u,!1,f),g=new lt(h.inShape,"float32"),m=g.values,y=t.data.get(r.dataId).values,b=t.data.get(o.dataId).values,[v,x,$]=d,{batchSize:C,filterHeight:S,filterWidth:E,inChannels:R,inHeight:A,inWidth:D,outChannels:L,outHeight:F,outWidth:B,strideHeight:W,strideWidth:V}=h;f=h.dataFormat;const z=S-1-h.padInfo.top,M=E-1-h.padInfo.left,j=f==="channelsLast",J=g.strides[0],Z=j?g.strides[1]:g.strides[2],ee=j?g.strides[2]:1,ne=j?1:g.strides[1],oe=p[0],se=j?p[1]:p[2],ae=j?p[2]:1,fe=j?1:p[1];for(let be=0;be<C;++be)for(let xe=0;xe<R;++xe)for(let Ce=0;Ce<A;++Ce){const Ne=Ce-z,De=Math.max(0,Math.ceil(Ne/W)),_=Math.min(F,(S+Ne)/W);for(let O=0;O<D;++O){const U=O-M,H=Math.max(0,Math.ceil(U/V)),K=Math.min(B,(E+U)/V);let Y=0;for(let X=De;X<_;++X){const re=X*W-Ne;for(let Q=H;Q<K;++Q){const ue=Q*V-U,he=oe*be+se*X+ae*Q,me=v*(S-1-re)+x*(E-1-ue)+$*xe;for(let ve=0;ve<L;++ve){const Se=y[he+fe*ve],Ie=b[me+ve];Y+=Se*Ie}}}const ie=J*be+Z*Ce+ee*O+ne*xe;m[ie]=Y}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const X3={kernelName:Du,backendName:"cpu",kernelFunc:q3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s;ge([r,o],"conv3d");const l=ur(r.shape,o.shape,a,c,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:h,dilationWidth:g,padInfo:m}=l,y=m.front,b=m.left,v=m.top,x=new lt(l.outShape,r.dtype),$=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,S=x.values,E=we(r.shape),R=we(o.shape);for(let A=0;A<l.batchSize;++A){const D=A*E[0],L=A*x.strides[0];for(let F=0;F<l.outDepth;++F){const B=L+F*x.strides[1],W=F*l.strideDepth-y;for(let V=0;V<u;++V){const z=W+V*f;if(z<0||z>=l.inDepth)continue;const M=V*R[0],j=D+z*E[1];for(let J=0;J<l.outHeight;++J){const Z=B+J*x.strides[2],ee=J*l.strideHeight-v;for(let ne=0;ne<d;++ne){const oe=ee+ne*h;if(oe<0||oe>=l.inHeight)continue;const se=M+ne*R[1],ae=j+oe*E[2];for(let fe=0;fe<l.outWidth;++fe){const be=Z+fe*l.outChannels,xe=fe*l.strideWidth-b;for(let Ce=0;Ce<p;++Ce){const Ne=xe+Ce*g;if(Ne<0||Ne>=l.inWidth)continue;const De=se+Ce*R[2],_=ae+Ne*l.inChannels;let O=De;for(let U=0;U<l.inChannels;++U){const H=$[_+U];for(let K=0;K<l.outChannels;++K)S[be+K]+=H*C[O+K];O+=l.outChannels}}}}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const Q3={kernelName:Fu,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s;ge([r,o],"conv3dBackpropFilterV2");const l=we(r.shape),u=we(o.shape),d=ur(r.shape,c,a,1,i),p=d.strideDepth,f=d.strideHeight,h=d.strideWidth,g=d.filterDepth,m=d.filterHeight,y=d.filterWidth,b=new lt(d.filterShape,"float32"),v=b.values,[x,$,C,S]=b.strides,E=t.data.get(o.dataId).values,[R,A,D,L]=u,F=t.data.get(r.dataId).values,[B,W,V,z]=l,M=d.padInfo.front,j=d.padInfo.left,J=d.padInfo.top;for(let Z=0;Z<g;++Z){const ee=Math.max(0,Math.ceil((M-Z)/p)),ne=Math.min(d.outDepth,(d.inDepth+M-Z)/p),oe=Z*x;for(let se=0;se<m;++se){const ae=Math.max(0,Math.ceil((J-se)/f)),fe=Math.min(d.outHeight,(d.inHeight+J-se)/f),be=se*$+oe;for(let xe=0;xe<y;++xe){const Ce=Math.max(0,Math.ceil((j-xe)/h)),Ne=Math.min(d.outWidth,(d.inWidth+j-xe)/h),De=xe*C+be;for(let _=0;_<d.inChannels;++_){const O=_*S+De;for(let U=0;U<d.outChannels;++U){let H=0;for(let K=0;K<d.batchSize;++K){const Y=K*B,ie=K*R;for(let X=ee;X<ne;++X){const Q=(Z+X*p-M)*W+Y,ue=X*A+ie;for(let he=ae;he<fe;++he){const ve=(se+he*f-J)*V+Q,Se=he*D+ue;for(let Ie=Ce;Ie<Ne;++Ie){const rt=(xe+Ie*h-j)*z+ve,Lt=Ie*L+Se;H+=F[rt+_]*E[Lt+U]}}}}v[O+U]=H}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const J3={kernelName:im,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s;ge([r],"conv3dBackpropInputV2");const l=we(r.shape),u=we(o.shape),d=ur(c,o.shape,i,1,a),p=new lt(d.inShape,"float32"),f=p.values,[h,g,m,y]=p.strides,b=t.data.get(r.dataId).values,[v,x,$,C]=l,S=t.data.get(o.dataId).values,[E,R,A,D]=u,{batchSize:L,filterDepth:F,filterHeight:B,filterWidth:W,inChannels:V,inDepth:z,inHeight:M,inWidth:j,outChannels:J,outDepth:Z,outHeight:ee,outWidth:ne,strideDepth:oe,strideHeight:se,strideWidth:ae}=d,fe=F-1-d.padInfo.front,be=B-1-d.padInfo.top,xe=W-1-d.padInfo.left;for(let Ce=0;Ce<L;++Ce)for(let Ne=0;Ne<V;++Ne)for(let De=0;De<z;++De){const _=De-fe,O=Math.max(0,Math.ceil(_/oe)),U=Math.min(Z,(F+_)/oe);for(let H=0;H<M;++H){const K=H-be,Y=Math.max(0,Math.ceil(K/se)),ie=Math.min(ee,(B+K)/se);for(let X=0;X<j;++X){const re=X-xe,Q=Math.max(0,Math.ceil(re/ae)),ue=Math.min(ne,(W+re)/ae);let he=0;for(let me=O;me<U;++me){const ve=me*oe-_;for(let Se=Y;Se<ie;++Se){const Ie=Se*se-K;for(let We=Q;We<ue;++We){const rt=We*ae-re,Lt=v*Ce+x*me+$*Se+C*We,Fs=E*(F-1-ve)+R*(B-1-Ie)+A*(W-1-rt)+D*Ne;for(let xr=0;xr<J;++xr){const wr=b[Lt+xr],Gc=S[Fs+xr];he+=wr*Gc}}}}f[h*Ce+g*De+m*H+y*X+Ne]=he}}}return t.makeTensorInfo(p.shape,p.dtype,p.values)}const tV={kernelName:Pu,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV=ze(Si,n=>Math.cos(n)),sV={kernelName:Si,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV=ze(Ei,n=>Math.cosh(n)),oV={kernelName:Ei,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:l}=s,[u,d,p,f]=r.shape,h=o.shape[0],[g,m]=i,y=Ee([h,g,m,f],"float32"),b=t.data.get(o.dataId).values,v=t.data.get(a.dataId).values,x=t.data.get(r.dataId).values,$=we(r.shape),C=we(y.shape);for(let S=0;S<h;S++){const E=S*4,R=b[E],A=b[E+1],D=b[E+2],L=b[E+3],F=v[S];if(F>=u)continue;const B=g>1?(D-R)*(d-1)/(g-1):0,W=m>1?(L-A)*(p-1)/(m-1):0;for(let V=0;V<g;V++){const z=g>1?R*(d-1)+V*B:.5*(R+D)*(d-1);if(z<0||z>d-1){for(let M=0;M<m;M++)for(let j=0;j<f;j++){const J=j+M*C[2]+V*C[1]+S*C[0];y.values[J]=l}continue}if(c==="bilinear"){const M=Math.floor(z),j=Math.ceil(z),J=z-M;for(let Z=0;Z<m;Z++){const ee=m>1?A*(p-1)+Z*W:.5*(A+L)*(p-1);if(ee<0||ee>p-1){for(let ae=0;ae<f;ae++){const fe=ae+Z*C[2]+V*C[1]+S*C[0];y.values[fe]=l}continue}const ne=Math.floor(ee),oe=Math.ceil(ee),se=ee-ne;for(let ae=0;ae<f;ae++){let fe=ae+ne*$[2]+M*$[1]+F*$[0];const be=x[fe];fe=ae+oe*$[2]+M*$[1]+F*$[0];const xe=x[fe];fe=ae+ne*$[2]+j*$[1]+F*$[0];const Ce=x[fe];fe=ae+oe*$[2]+j*$[1]+F*$[0];const Ne=x[fe],De=be+(xe-be)*se,_=Ce+(Ne-Ce)*se;fe=ae+Z*C[2]+V*C[1]+S*C[0],y.values[fe]=De+(_-De)*J}}}else for(let M=0;M<m;++M){const j=m>1?A*(p-1)+M*W:.5*(A+L)*(p-1);if(j<0||j>p-1){for(let ee=0;ee<f;ee++){const ne=ee+M*C[2]+V*C[1]+S*C[0];y.values[ne]=l}continue}const J=Math.round(j),Z=Math.round(z);for(let ee=0;ee<f;ee++){const ne=ee+J*$[2]+Z*$[1]+F*$[0],oe=ee+M*C[2]+V*C[1]+S*C[0];y.values[oe]=x[ne]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const iV={kernelName:Mu,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;ge(r,"cumprod");const c=at([o],r.shape.length);let l=r;c!=null&&(l=Ht({inputs:{x:r},backend:t,attrs:{perm:c}}));const u=it(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);const d=Ut(l.dtype,"int32"),p=gu(G(l.shape),d),f=t.data.get(l.dataId).values,h=l.shape[l.shape.length-1],g=i?(y,b)=>y+h-b-1:(y,b)=>y+b;for(let y=0;y<f.length;y+=h)for(let b=0;b<h;b++){const v=g(y,b);if(b===0)p[v]=a?1:f[v];else{const x=g(y,b-1);p[v]=a?f[x]*p[x]:f[v]*p[x]}}const m=t.makeTensorInfo(l.shape,d,p);if(c!=null){const y=Tc(c),b=Ht({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(l),b}return m}const lV={kernelName:Lu,backendName:"cpu",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;ge(r,"cumsum");const c=at([o],r.shape.length);let l=r;c!=null&&(l=Ht({inputs:{x:r},backend:t,attrs:{perm:c}}));const u=it(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);const d=Ut(l.dtype,"int32"),p=xt(G(l.shape),d),f=t.data.get(l.dataId).values,h=l.shape[l.shape.length-1],g=i?(y,b)=>y+h-b-1:(y,b)=>y+b;for(let y=0;y<f.length;y+=h)for(let b=0;b<h;b++){const v=g(y,b);if(b===0)p[v]=a?0:f[v];else{const x=g(y,b-1);p[v]=a?f[x]+p[x]:f[v]+p[x]}}const m=t.makeTensorInfo(l.shape,d,p);if(c!=null){const y=Tc(c),b=Ht({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(l),b}return m}const dV={kernelName:Vu,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=ey(c,l,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),u=iC(c,l,a,i);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const fV={kernelName:Bu,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s;T(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],d=c*o,p=l*o,f=u/(o*o),h=t.data.get(r.dataId).values,g=new Float32Array(i*d*p*f);let m=0;for(let y=0;y<i;++y)for(let b=0;b<d;++b){const v=Math.floor(b/o),x=b%o;for(let $=0;$<p;++$){const C=Math.floor($/o),S=$%o,E=(x*o+S)*f;for(let R=0;R<f;++R){const D=R+E+u*(C+l*(v+c*y));g[m++]=h[D]}}}return t.makeTensorInfo([i,d,p,f],r.dtype,g)}const mV={kernelName:Wu,backendName:"cpu",kernelFunc:hV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:l}=s;ge([r,o],"depthwiseConv2DNative");const u=we(r.shape),d=we(o.shape);let p=c;p==null&&(p=[1,1]),T(Et(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);const f=mt(r.shape,o.shape,a,p,i,l,!0),{filterHeight:h,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:b}=f,v=b.left,x=b.top,$=f.outChannels/f.inChannels,C=new lt(f.outShape,r.dtype),S=t.data.get(r.dataId).values,E=t.data.get(o.dataId).values,R=C.values;for(let A=0;A<f.batchSize;++A){const D=A*u[0],L=A*C.strides[0];for(let F=0;F<f.outHeight;++F){const B=L+F*C.strides[1],W=F*f.strideHeight-x;for(let V=0;V<h;++V){const z=W+V*m;if(z<0||z>=f.inHeight)continue;const M=V*d[0],j=D+z*u[1];for(let J=0;J<f.outWidth;++J){const Z=B+J*C.strides[2],ee=J*f.strideWidth-v;for(let ne=0;ne<g;++ne){const oe=ee+ne*y;if(oe<0||oe>=f.inWidth)continue;const se=M+ne*d[1],ae=j+oe*f.inChannels;let fe=Z,be=se;for(let xe=0;xe<f.inChannels;++xe){const Ce=S[ae+xe];for(let Ne=0;Ne<$;++Ne)R[fe+Ne]+=Ce*E[be+Ne];fe+=$,be+=$}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const gV={kernelName:zu,backendName:"cpu",kernelFunc:iN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s;ge([r,o],"depthwiseConv2dNativeBackpropFilter");const d=mt(r.shape,u,a,i,c,l,!0),{strideHeight:p,strideWidth:f,filterHeight:h,filterWidth:g}=d,m=new lt(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,v=d.outChannels/d.inChannels,x=t.data.get(r.dataId).values,$=new lt(r.shape,r.dtype,x),C=t.data.get(o.dataId).values,S=new lt(o.shape,o.dtype,C);for(let E=0;E<h;++E){const R=Math.max(0,Math.ceil((b-E)/p)),A=Math.min(d.outHeight,(d.inHeight+b-E)/p);for(let D=0;D<g;++D){const L=Math.max(0,Math.ceil((y-D)/f)),F=Math.min(d.outWidth,(d.inWidth+y-D)/f);for(let B=0;B<d.outChannels;++B){const W=Math.trunc(B/v),V=B%v;let z=0;for(let M=0;M<d.batchSize;++M)for(let j=R;j<A;++j){const J=E+j*p-b;for(let Z=L;Z<F;++Z){const ee=D+Z*f-y;z+=$.get(M,J,ee,W)*S.get(M,j,Z,B)}}m.set(z,E,D,W,V)}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const bV={kernelName:Uu,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s;ge([r,o],"depthwiseConv2DNativeBackpropInput");const d=we(r.shape),p=we(o.shape),f=mt(u,o.shape,a,i,c,l,!0),h=new lt(f.inShape,"float32"),g=h.values,[m,y,b]=h.strides,v=t.data.get(r.dataId).values,[x,$,C]=d,S=t.data.get(o.dataId).values,[E,R,A]=p,{batchSize:D,filterHeight:L,filterWidth:F,inChannels:B,inHeight:W,inWidth:V,outChannels:z,outHeight:M,outWidth:j,strideHeight:J,strideWidth:Z}=f,ee=L-1-f.padInfo.top,ne=F-1-f.padInfo.left,oe=z/B;for(let se=0;se<D;++se)for(let ae=0;ae<B;++ae)for(let fe=0;fe<W;++fe){const be=fe-ee,xe=Math.max(0,Math.ceil(be/J)),Ce=Math.min(M,(L+be)/J);for(let Ne=0;Ne<V;++Ne){const De=Ne-ne,_=Math.max(0,Math.ceil(De/Z)),O=Math.min(j,(F+De)/Z);let U=0;for(let H=xe;H<Ce;++H){const K=H*J-be;for(let Y=_;Y<O;++Y){const ie=Y*Z-De,X=x*se+$*H+C*Y,re=E*(L-1-K)+R*(F-1-ie)+A*ae;for(let Q=0;Q<oe;++Q){const ue=ae*oe+Q,he=v[X+ue],me=S[re+Q];U+=he*me}}}g[m*se+y*fe+b*Ne+ae]=U}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const wV={kernelName:Gu,backendName:"cpu",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const{inputs:e,backend:t}=n,{x:s}=e,r=G(s.shape),o=t.data.get(s.dataId).values,a=Ee([r,r],s.dtype),i=a.values;for(let l=0;l<o.length;l++)i[l*r+l]=o[l];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,a.dtype,a.values)}const $V={kernelName:Hu,backendName:"cpu",kernelFunc:vV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV={kernelName:ju,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=t,c=e,l=c.data.get(s.dataId).values,u=s.shape.length,d=c.data.get(r.dataId).values,p=r.shape.length,{batchSize:f,inHeight:h,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:$,filterHeight:C,filterWidth:S,dilationHeight:E,dilationWidth:R,outShape:A}=$c(s.shape,r.shape,o,a,"NHWC",i),D=G(A),L=A.length,F=st(s.dtype,D);for(let W=0;W<f;++W)for(let V=0;V<y;++V){const z=V*x-v.top;for(let M=0;M<b;++M){const j=M*$-v.left;for(let J=0;J<m;++J){let Z=Number.MIN_SAFE_INTEGER;for(let ne=0;ne<C;++ne){const oe=z+ne*E;if(oe>=0&&oe<h)for(let se=0;se<S;++se){const ae=j+se*R;if(ae>=0&&ae<g){const fe=Vn([W,oe,ae,J],u,we(s.shape)),be=Vn([ne,se,J],p,we(r.shape)),xe=l[fe]+d[be];xe>Z&&(Z=xe)}}}const ee=Vn([W,V,M,J],L,we(A));F[ee]=Z}}}return{dataId:c.write(cr(F,s.dtype),A,s.dtype),shape:A,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV={kernelName:Uf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,l=e,u=pn(s.shape,l.data.get(s.dataId).values),d=pn(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:h,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:$,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=$c(s.shape,r.shape,a,i,"NHWC",c);T(o.rank===R.length,()=>`Error in ${Uf}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const A=pn(R,l.data.get(o.dataId).values),D=nm(r.shape,r.dtype);for(let F=0;F<p;++F)for(let B=0;B<m;++B){const W=B*v-b.top;for(let V=0;V<y;++V){const z=V*x-b.left;for(let M=0;M<g;++M){let j=Number.MIN_SAFE_INTEGER,J=0,Z=0;for(let ee=0;ee<$;++ee){const ne=W+ee*S;if(ne>=0&&ne<f)for(let oe=0;oe<C;++oe){const se=z+oe*E;if(se>=0&&se<h){const ae=u[F][ne][se][M]+d[ee][oe][M];ae>j&&(j=ae,J=ee,Z=oe)}}}D[J][Z][M]+=A[F][B][V][M]}}}return{dataId:l.write(cr(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:zf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,l=e,u=pn(s.shape,l.data.get(s.dataId).values),d=pn(r.shape,l.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:h,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:$,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=$c(s.shape,r.shape,a,i,"NHWC",c);T(o.rank===R.length,()=>`Error in ${zf}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const A=pn(R,l.data.get(o.dataId).values),D=nm(s.shape,s.dtype);for(let F=0;F<p;++F)for(let B=0;B<m;++B){const W=B*v-b.top;for(let V=0;V<y;++V){const z=V*x-b.left;for(let M=0;M<g;++M){let j=Number.MIN_SAFE_INTEGER,J=W<0?0:W,Z=z<0?0:z;for(let ee=0;ee<$;++ee){const ne=W+ee*S;if(ne>=0&&ne<f)for(let oe=0;oe<C;++oe){const se=z+oe*E;if(se>=0&&se<h){const ae=u[F][ne][se][M]+d[ee][oe][M];ae>j&&(j=ae,J=ne,Z=se)}}}D[F][J][Z][M]+=A[F][B][V][M]}}}return{dataId:l.write(cr(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:a}=s,{contextOptions:i,imageOptions:c}=a||{},l=(c==null?void 0:c.alpha)||1,u=(i==null?void 0:i.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=o.getContext(u,(i==null?void 0:i.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${u} type.`);const[p,f]=r.shape.slice(0,2),h=r.shape.length===2?1:r.shape[2],g=t.data.get(r.dataId).values,m=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(f*p*4);for(let v=0;v<p*f;++v){const x=[0,0,0,255*l];for(let C=0;C<h;C++){const S=g[v*h+C];if(r.dtype==="float32"){if(S<0||S>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${S}.`)}else if(r.dtype==="int32"&&(S<0||S>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${S}.`);h===1?(x[0]=S*m,x[1]=S*m,x[2]=S*m):x[C]=S*m}const $=v*4;y[$+0]=Math.round(x[0]),y[$+1]=Math.round(x[1]),y[$+2]=Math.round(x[2]),y[$+3]=Math.round(x[3])}o.width=f,o.height=p;const b=new ImageData(y,f,p);return d.putImageData(b,0,0),r}const EV={kernelName:Ku,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ge(r,"sum");let i;r.dtype==="bool"?i=sr({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):i=is({inputs:{x:r},backend:t});const c=i.shape.length,l=Pe(o,i.shape),u=at(l,c);let d=l,p=i;u!=null&&(p=Ht({inputs:{x:i},backend:t,attrs:{perm:u}}),d=it(d.length,c)),$t("sum",d,p.shape.length);const[f,h]=vt(p.shape,d),g=Ut(p.dtype,"int32");let m=Ul(t,f,g);const y=G(h),b=t.data.get(m.dataId).values,v=t.data.get(p.dataId).values;for(let x=0;x<b.length;++x){const $=x*y;let C=0;for(let S=0;S<y;++S)C+=v[$+S];b[x]=C}if(a){const x=ut(m.shape,l),$=m;m=Ye({inputs:{x:m},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo($)}return t.disposeIntermediateTensorInfo(i),u!=null&&t.disposeIntermediateTensorInfo(p),m}const _V={kernelName:Md,backendName:"cpu",kernelFunc:Oc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:c}=jg(r,o.length);qg(a.length,c,o);const{path:l,steps:u}=Xg(i,c),d=u.length;let p=null,f=a.length;const h=[];for(let g=0;g<d;++g){for(const m of u[g]){const{permutationIndices:y,expandDims:b}=Kg(f,c[m]);let v;Yg(y)?v=o[m]:(v=Ht({inputs:{x:o[m]},backend:t,attrs:{perm:y}}),h.push(v));const x=v.shape.slice();for(let $=0;$<b.length;++$)x.splice(b[$],0,1);Ue(v.shape,x)||(v=Ye({inputs:{x:v},backend:t,attrs:{shape:x}}),h.push(v)),p===null?p=v:(p=kp({inputs:{a:v,b:p},backend:t}),h.push(p))}g<d-1&&(l[g]>=0&&(p=Oc({inputs:{x:p},backend:t,attrs:{axis:l[g]-(a.length-f),keepDims:!1}}),h.push(p)),f--)}for(const g of h)g!==p&&t.disposeIntermediateTensorInfo(g);return p}const kV={kernelName:qu,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;ge([s,r],"eluGrad");const o=new Float32Array(G(r.shape)),a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values;for(let c=0;c<a.length;++c){const l=a[c];l>=0?o[c]=i[c]:o[c]=i[c]*(l+1)}return t.makeTensorInfo(r.shape,"float32",o)}const RV={kernelName:cm,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV=Mg,DV=Bg,FV=Wg,PV=zg,LV=Ug,VV=Gg,MV=ze(ki,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+OV*t);return e*(1-((((VV*s+LV)*s+PV)*s+FV)*s+DV)*s*Math.exp(-t*t))}),BV={kernelName:ki,backendName:"cpu",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(T(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+o+1),i.splice(c,0,1),Ye({inputs:{x:r},backend:t,attrs:{shape:i}})}const WV={kernelName:Xu,backendName:"cpu",kernelFunc:jl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=ct((n,e)=>n/e),ay=dt(_i,zV),ch={kernelName:_i,backendName:"cpu",kernelFunc:ay};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n,e,t){const s=n.shape,r=s[0],o=s[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,c=a.complexTensorInfos.imag,l=[r,o],u=G(l),d=ht("float32",u),p=ht("float32",u);for(let m=0;m<r;m++){const y=Qr({inputs:{x:i},backend:t,attrs:{begin:[m,0],size:[1,o]}}),b=Qr({inputs:{x:c},backend:t,attrs:{begin:[m,0],size:[1,o]}}),v=Zt({inputs:{real:y,imag:b},backend:t}),{real:x,imag:$}=UV(v,e,t),C=Ns(x,$);for(let S=0;S<o;S++){const E=Hg(C,S);d[m*o+S]=E.real,p[m*o+S]=E.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v)}const f=t.makeTensorInfo(l,"float32",d),h=t.makeTensorInfo(l,"float32",p),g=Zt({inputs:{real:f,imag:h},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}function UV(n,e,t){const s=G(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(GV(s)){const i=lh(o,a,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(c,"float32",i.real),u=t.makeTensorInfo(c,"float32",i.imag),d=t.makeTensorInfo([],"float32",Is(s,"float32")),p=is({inputs:{x:d},backend:t}),f=ch.kernelFunc({inputs:{a:l,b:d},backend:t}),h=ch.kernelFunc({inputs:{a:u,b:p},backend:t}),g=t.data.get(f.dataId).values,m=t.data.get(h.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),{real:g,imag:m}}return i}else{const i=Ns(o,a),c=HV(i,s,e);return L$(c)}}function GV(n){return(n&n-1)===0}function lh(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=Ns(n,e),a=t/2,i=V$(o),c=i.real,l=i.imag,u=[c.length],d=r.makeTensorInfo(u,"float32",c),p=r.makeTensorInfo(u,"float32",l),f=Zt({inputs:{real:d,imag:p},backend:r}),h=M$(o),g=h.real,m=h.imag,y=[g.length],b=r.makeTensorInfo(y,"float32",g),v=r.makeTensorInfo(y,"float32",m),x=Zt({inputs:{real:b,imag:v},backend:r}),$=lh(c,l,a,s,r),C=$.real,S=$.imag,E=[C.length],R=r.makeTensorInfo(E,"float32",C),A=r.makeTensorInfo(E,"float32",S),D=Zt({inputs:{real:R,imag:A},backend:r}),L=lh(g,m,a,s,r),F=L.real,B=L.imag,W=[F.length],V=r.makeTensorInfo(W,"float32",F),z=r.makeTensorInfo(W,"float32",B),M=Zt({inputs:{real:V,imag:z},backend:r}),j=W$(t,s),J=[j.real.length],Z=r.makeTensorInfo(J,"float32",j.real),ee=r.makeTensorInfo(J,"float32",j.imag),ne=Zt({inputs:{real:Z,imag:ee},backend:r}),oe=kp({inputs:{a:ne,b:M},backend:r}),se=qo({inputs:{a:D,b:oe},backend:r}),ae=ry({inputs:{a:D,b:oe},backend:r}),fe=Yr({inputs:{input:se},backend:r}),be=Yr({inputs:{input:ae},backend:r}),xe=Xo({inputs:{input:se},backend:r}),Ce=Xo({inputs:{input:ae},backend:r}),Ne=Yo({inputs:[fe,be],backend:r,attrs:{axis:0}}),De=Yo({inputs:[xe,Ce],backend:r,attrs:{axis:0}}),_=r.data.get(Ne.dataId).values,O=r.data.get(De.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(De),{real:_,imag:O}}function HV(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,a=0;for(let i=0;i<e;i++){const c=z$(r*i,e,t),l=Hg(n,i);o+=l.real*c.real-l.imag*c.imag,a+=l.real*c.imag+l.imag*c.real}t&&(o/=e,a/=e),B$(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n){const{inputs:e,backend:t}=n,{input:s}=e,r=G(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=Ye({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=cN(i,!1,t),l=Ye({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}const KV={kernelName:Yu,backendName:"cpu",kernelFunc:jV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,a=o||oo(r),i=st(a,G(s));return XV(i,r,a),e.makeTensorInfo(s,a,i)}const qV={kernelName:Qu,backendName:"cpu",kernelFunc:iy};function XV(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YV={kernelName:Zu,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=ht(s.dtype,G(s.shape)),[a,i,c,l]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<a;p++){const f=p*c*i*l;for(let h=0;h<i;h++){const g=h*(c*l);for(let m=0;m<c;m++){const y=m*l;for(let b=0;b<l;b++){const v=Math.round(c-m-1),x=f+g+y+b;let $=u[x];if(v>=0&&v<c){const C=v*l,S=f+g+C+b;$=u[S]}o[x]=$}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=s;let g=aN({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(a){const m=g;if(u==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const y=Ye({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=qo({inputs:{a:g,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else g=qo({inputs:{a:g,b:a},backend:t});t.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const y=Ye({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});g=Hl(t,g,f,y,h),t.disposeIntermediateTensorInfo(y)}else g=Hl(t,g,f,i,h);t.disposeIntermediateTensorInfo(m)}return g}const ZV={kernelName:Xa,backendName:"cpu",kernelFunc:QV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=s;let g=iN({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(a){const m=g;g=qo({inputs:{a:g,b:a},backend:t}),t.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=Hl(t,g,f,i,h),t.disposeIntermediateTensorInfo(m)}return g}const eM={kernelName:Ya,backendName:"cpu",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=G(s.shape),a=r.shape,i=a[a.length-1],[c,l,u,d]=Ep(s,r);if(l===0)return t.makeTensorInfo(c,s.dtype,[]);const p=t.data.get(r.dataId).values,f=t.bufferSync(s),h=bC(p,f,s.dtype,l,i,u,d,s.shape,o);return t.makeTensorInfo(c,s.dtype,h.values)}const nM={kernelName:td,backendName:"cpu",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s;ge([r,o],"gatherV2");const c=Pe(a,r.shape)[0],l=t.data.get(o.dataId).values,u=r.shape[c];for(let x=0;x<l.length;++x){const $=l[x];T($<=u-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);const p=G(o.shape),f=Zg(r,o,c,d),h=Ye({inputs:{x:r},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Ye({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,p/f.batchSize]}}),m=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],y=t.bufferSync(g),b=t.bufferSync(h),v=xC(b,y,m);return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(f.outputShape,v.dtype,v.values)}const rM={kernelName:ed,backendName:"cpu",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n){const{inputs:e,backend:t}=n,{input:s}=e,r=G(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=Ye({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=cN(i,!0,t),l=Ye({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}const aM={kernelName:nd,backendName:"cpu",kernelFunc:oM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=ze(Mi,n=>Number.isFinite(n)?1:0,"bool"),cM={kernelName:Mi,backendName:"cpu",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lM=ze(Bi,n=>Math.abs(n)===1/0?1:0,"bool"),uM={kernelName:Bi,backendName:"cpu",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM=ze(Wi,n=>Number.isNaN(n)?1:0,"bool"),pM={kernelName:Wi,backendName:"cpu",kernelFunc:dM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=NC(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const hM={kernelName:od,backendName:"cpu",kernelFunc:fM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=ze(Hi,n=>Math.log1p(n)),gM={kernelName:Hi,backendName:"cpu",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yM=ct((n,e)=>n&&e),bM=dt(ji,yM,null,"bool"),xM={kernelName:ji,backendName:"cpu",kernelFunc:bM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=ze(Ki,n=>n?0:1,"bool"),vM={kernelName:Ki,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M=ct((n,e)=>n||e),CM=dt(qi,$M,null,"bool"),NM={kernelName:qi,backendName:"cpu",kernelFunc:CM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s;ge(r,"LRN");const l=r.shape[3],u=l-1,d=t.data.get(r.dataId).values,p=G(r.shape),f=new Float32Array(p);function h(g){const m=g%l;let y=g-m+Math.max(0,m-o);const b=g-m+Math.min(m+o,u);let v=0;for(;y<=b;y++){const x=d[y];v+=x*x}return v}for(let g=0;g<p;g++){const m=h(g),y=d[g]*Math.pow(a+i*m,-c);f[g]=y}return t.makeTensorInfo(r.shape,r.dtype,f)}const SM={kernelName:ad,backendName:"cpu",kernelFunc:TM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=s;ge(a,"LRNGrad");const d=G(a.shape),p=a.shape[3],f=t.data.get(a.dataId).values,h=t.data.get(r.dataId).values,g=t.data.get(o.dataId).values,m=new Float32Array(d),y=d;for(let b=0;b<y;b++){const v=b%p,x=b-v+Math.max(0,v-i),$=b-v+Math.min(p,v+i+1);let C=0;for(let S=x;S<$;S++)C+=Math.pow(h[S],2);C=l*C+c;for(let S=x;S<$;S++){let E=-2*l*u*h[S]*g[b]/C;b===S&&(E+=Math.pow(C,-u)),E*=f[b],m[S]+=E}}return t.makeTensorInfo(a.shape,r.dtype,m)}const _M={kernelName:lm,backendName:"cpu",kernelFunc:EM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=t;let c=r.shape;const l=c.length,u=Pe(o,c);let d=u;const p=at(d,l);let f=i.data.get(r.dataId).values;if(p!=null){const x=new Array(l);for(let $=0;$<x.length;$++)x[$]=c[p[$]];f=ny(f,c,r.dtype,p,x),d=it(d.length,l),c=x}ge(r,"max"),$t("max",d,l);const[h,g]=vt(c,d),m=G(g),y=SC(f,m,h,r.dtype),b=i.write(y,h,r.dtype);let v=h;return a&&(v=ut(h,u)),{dataId:b,shape:v,dtype:r.dtype}}const IM={kernelName:id,backendName:"cpu",kernelFunc:lN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ge(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;T(Et(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=En(r.shape,o,a,l,i,c);let d;if(u.filterWidth===1&&u.filterHeight===1&&Ue(u.inShape,u.outShape))d=is({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,f=we(r.shape),h=oy(p,r.shape,r.dtype,f,u,"max");d=t.makeTensorInfo(u.outShape,r.dtype,h.values)}return d}const AM={kernelName:cd,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s;ge(r,"maxPool3d");const u=ks(r.shape,o,a,1,i,c,l),d=t.data.get(r.dataId).values,p=oN(d,r.shape,r.dtype,we(r.shape),u,"max");return t.makeTensorInfo(p.shape,"float32",p.values)}const OM={kernelName:ld,backendName:"cpu",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:l}=s;ge([r,o],"maxPool3DGrad");const u=ks(o.shape,a,i,1,c,l),d=t.bufferSync(o),p=$3(d,u),f=u.strideDepth,h=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,v=u.effectiveFilterDepth,x=u.effectiveFilterHeight,$=u.effectiveFilterWidth,C=v-1-u.padInfo.front,S=$-1-u.padInfo.left,E=x-1-u.padInfo.top,R=Ee(o.shape,"float32"),A=t.bufferSync(r);for(let D=0;D<u.batchSize;++D)for(let L=0;L<u.inChannels;++L)for(let F=0;F<u.inDepth;++F)for(let B=0;B<u.inHeight;++B)for(let W=0;W<u.inWidth;++W){const V=F-C,z=B-E,M=W-S;let j=0;for(let J=0;J<v;J+=m){const Z=(V+J)/f;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let ee=0;ee<x;ee+=y){const ne=(z+ee)/h;if(!(ne<0||ne>=u.outHeight||Math.floor(ne)!==ne))for(let oe=0;oe<$;oe+=b){const se=(M+oe)/g;if(se<0||se>=u.outWidth||Math.floor(se)!==se)continue;const ae=v*x*$-1-p.get(D,Z,ne,se,L),fe=J*x*$+ee*$+oe,be=ae===fe?1:0;if(be===0)continue;const xe=A.get(D,Z,ne,se,L);j+=xe*be}}}R.set(j,D,F,B,W,L)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const FM={kernelName:dm,backendName:"cpu",kernelFunc:DM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;ge([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=s,p=En(i.shape,c,l,1,u,d),f=t.data.get(i.dataId).values,h=Ee(p.outShape,i.dtype,rN(f,i.shape,i.dtype,p).values),g=p.strideHeight,m=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,$=x-1-p.padInfo.left,C=v-1-p.padInfo.top,S=Ee(i.shape,"float32"),E=t.data.get(r.dataId).values,R=Ee(r.shape,"float32",E);for(let A=0;A<p.batchSize;++A)for(let D=0;D<p.inChannels;++D)for(let L=0;L<p.inHeight;++L)for(let F=0;F<p.inWidth;++F){const B=L-C,W=F-$;let V=0;for(let z=0;z<v;z+=y){const M=(B+z)/g;if(!(M<0||M>=p.outHeight||Math.floor(M)!==M))for(let j=0;j<x;j+=b){const J=(W+j)/m;if(J<0||J>=p.outWidth||Math.floor(J)!==J)continue;const Z=v*x-1-h.get(A,M,J,D),ee=z*x+j,ne=Z===ee?1:0;if(ne===0)continue;const oe=R.get(A,M,J,D);V+=oe*ne}}S.set(V,A,L,F,D)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const LM={kernelName:um,backendName:"cpu",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,e,t,s,r){const o=we(e),a=oy(n,e,t,o,r,"max"),i=rN(n,e,t,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM={kernelName:ud,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;ge(s,"MaxPoolWithArgmax");const l=c.data.get(s.dataId).values,u=En(s.shape,r,o,[1,1],a),[d,p]=VM(l,s.shape,s.dtype,i,u),f=c.write(d,u.outShape,s.dtype),h=c.write(p,u.outShape,s.dtype);return[{dataId:f,shape:u.outShape,dtype:s.dtype},{dataId:h,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=Pe(o,r.shape),l=vt(r.shape,i)[1],u=G(l),d=[],p=t.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);const f=sr({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(f);const h=ay({inputs:{a:f,b:p},backend:t});d.push(h);const g=Oc({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:a}});return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),g}const WM={kernelName:dd,backendName:"cpu",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ge(r,"min");const i=Pe(o,r.shape);let c=i;const l=at(c,r.shape.length);let u=r;l!=null&&(u=Ht({inputs:{x:r},backend:t,attrs:{perm:l}}),c=it(c.length,r.shape.length)),$t("min",c,u.shape.length);const[d,p]=vt(u.shape,c),f=G(p),h=xt(G(d),u.dtype),g=t.data.get(u.dataId).values;for(let y=0;y<h.length;++y){const b=y*f;let v=g[b];for(let x=0;x<f;++x){const $=g[b+x];(Number.isNaN($)||$<v)&&(v=$)}h[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(d,u.dtype,h);if(a){const y=ut(d,i),b=Ye({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),b}return m}const UM={kernelName:pd,backendName:"cpu",kernelFunc:zM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:a}=s;ge(r,"mirrorPad");const i=o.map((v,x)=>v[0]+r.shape[x]+v[1]),c=o.map(v=>v[0]),l=o.map((v,x)=>v[0]+r.shape[x]),u=a==="reflect"?0:1,d=t.data.get(r.dataId).values,p=r.shape.length,f=we(r.shape),h=G(i),g=i.length,m=we(i),y=ht(r.dtype,h);for(let v=0;v<h;v++){let x=ao(v,g,m);for(let C=0;C<g;C++)x[C]<c[C]?x[C]=c[C]*2-x[C]-u:x[C]>=l[C]&&(x[C]=(l[C]-1)*2-x[C]+u);x=x.map((C,S)=>C-c[S]);const $=Vn(x,p,f);y[v]=d[$]}return{dataId:t.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const HM={kernelName:fd,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM=ct((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),KM=dt(Qi,jM),qM={kernelName:Qi,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const c=Pe([i],r.shape),l=lN({inputs:{x:r},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),u=ut(l.shape,c),d=Ye({inputs:{x:l},backend:t,attrs:{shape:u}}),p=ry({inputs:{a:r,b:d},backend:t}),f=hC({inputs:{x:p},backend:t}),h=Oc({inputs:{x:f},backend:t,attrs:{axis:c,keepDims:!1}}),g=Ye({inputs:{x:h},backend:t,attrs:{shape:u}}),m=ay({inputs:{a:f,b:g},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),m}const XM={kernelName:zd,backendName:"cpu",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s;ge(r,"multinomial");const c=i?r:uN({inputs:{logits:r},backend:t,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],d=t.data.get(c.dataId).values,p=[l,o],f=xt(G(p),"int32");for(let h=0;h<l;++h){const g=h*u,m=new Float32Array(u-1);m[0]=d[g];for(let v=1;v<m.length;++v)m[v]=m[v-1]+d[g+v];const y=dp.alea(a.toString()),b=h*o;for(let v=0;v<o;++v){const x=y();f[b+v]=m.length;for(let $=0;$<m.length;$++)if(x<m[$]){f[b+v]=$;break}}}return i||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(p,"int32",f)}const QM={kernelName:hd,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=Cp;function JM(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s;ge(r,"NonMaxSuppression");const l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,{selectedIndices:d}=ZM(l,u,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const eB={kernelName:gd,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB=Np;function nB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s;ge(r,"NonMaxSuppressionPadded");const u=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:p,validOutputs:f}=tB(u,d,a,i,c,l);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const sB={kernelName:yd,backendName:"cpu",kernelFunc:nB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rB=Tp;function oB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s;ge(r,"NonMaxSuppressionWithScore");const u=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,p=a,f=i,h=c,g=l,{selectedIndices:m,selectedScores:y}=rB(u,d,p,f,h,g);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const aB={kernelName:bd,backendName:"cpu",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:c}=s;ge(r,"oneHot");const l=G(r.shape),u=new Float32Array(l*a);u.fill(c);const d=t.data.get(r.dataId).values;for(let p=0;p<l;++p)d[p]>=0&&d[p]<a&&(u[p*a+d[p]]=i);return t.makeTensorInfo([...r.shape,a],o,u)}const cB={kernelName:wd,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kl(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Yr({inputs:{input:s},backend:t}),o=Kl({inputs:{x:r},backend:t}),a=Xo({inputs:{input:s},backend:t}),i=Kl({inputs:{x:a},backend:t}),c=Zt({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return iy({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const lB={kernelName:sp,backendName:"cpu",kernelFunc:Kl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Yr({inputs:{input:s},backend:t}),o=dN({inputs:{x:r},backend:t}),a=Xo({inputs:{input:s},backend:t}),i=Kl({inputs:{x:a},backend:t}),c=Zt({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return iy({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const uB={kernelName:xd,backendName:"cpu",kernelFunc:dN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return jl({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(u=>{wt(o,u.shape,"All tensors passed to stack must have matching shapes"),T(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(u=>{const d=jl({inputs:{input:u},backend:t,attrs:{dim:r}});return i.push(d),d}),l=Yo({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const dB={kernelName:vd,backendName:"cpu",kernelFunc:pN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;ge(r,"pad");const i=o.map((b,v)=>b[0]+r.shape[v]+b[1]),c=o.map(b=>b[0]),l=t.data.get(r.dataId).values,u=G(r.shape),d=r.shape.length,p=we(r.shape),f=G(i),h=i.length,g=we(i),m=ht(r.dtype,f);a!==0&&m.fill(a);for(let b=0;b<u;b++){const x=ao(b,d,p).map((C,S)=>C+c[S]),$=Vn(x,h,g);m[$]=l[b]}return{dataId:t.write(m,i,r.dtype),shape:i,dtype:r.dtype}}const fN={kernelName:$d,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB=ct((n,e)=>Math.pow(n,e)),hB=dt(ec,fB),mB={kernelName:ec,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,i=r.map(m=>t.data.get(m.dataId).values),c=r.map(m=>m.shape),l=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values,[d,p,f]=RC(i,c,l,o.shape,o.dtype,u,a.shape),h=d.map(m=>t.makeTensorInfo([m.length],"int32",m)),g=t.makeTensorInfo(f,o.dtype,p);return h.concat([g])}const yB={kernelName:Td,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,u]=OC(a,s.shape,s.dtype,i,r.shape,c,o.shape),d=t.makeTensorInfo([l.length],"int32",l),p=t.makeTensorInfo([u.length],s.dtype,u);return[d,p]}const xB={kernelName:Sd,backendName:"cpu",kernelFunc:bB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,d=t.data.get(a.dataId).values,p=i.map(m=>t.data.get(m.dataId).values),f=i.map(m=>m.shape),[h,g]=DC(l,r.shape,u,o.shape,o.dtype,d,a.shape,p,f,c);return t.makeTensorInfo(h,o.dtype,g)}const vB={kernelName:Ed,backendName:"cpu",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:a}=t,i=FC(s,r,a,o);return e.makeTensorInfo([i.length],o,i)}const CB={kernelName:_d,backendName:"cpu",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NB=ze(tc,n=>1/n),TB={kernelName:tc,backendName:"cpu",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;ge(r,"resizeBilinear");const c=we(r.shape),[l,u]=i,[d,p,f,h]=r.shape,g=t.data.get(r.dataId).values,m=new Float32Array(G([d,l,u,h])),y=[o&&l>1?p-1:p,o&&u>1?f-1:f],b=[o&&l>1?l-1:l,o&&u>1?u-1:u];let v=0;const x=y[0]/b[0],$=y[1]/b[1];for(let C=0;C<d;C++)for(let S=0;S<l;S++){let E;a?E=x*(S+.5)-.5:E=x*S;const R=Math.max(0,Math.floor(E)),A=E-R,D=Math.min(p-1,Math.ceil(E)),L=C*c[0]+R*c[1],F=C*c[0]+D*c[1];for(let B=0;B<u;B++){let W;a?W=$*(B+.5)-.5:W=$*B;const V=Math.max(0,Math.floor(W)),z=W-V,M=Math.min(f-1,Math.ceil(W)),j=L+V*c[2],J=F+V*c[2],Z=L+M*c[2],ee=F+M*c[2];for(let ne=0;ne<h;ne++){const oe=g[j+ne],se=g[J+ne],ae=g[Z+ne],fe=g[ee+ne],be=oe+(ae-oe)*z,xe=se+(fe-se)*z,Ce=be+(xe-be)*A;m[v++]=Ce}}}return t.makeTensorInfo([d,l,u,h],"float32",m)}const EB={kernelName:Rd,backendName:"cpu",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;ge([o,r],"resizeBilinearGrad");const i=we(r.shape),[c,l,u,d]=r.shape,[,p,f]=o.shape,h=new Float32Array(c*l*u*d),g=[a&&p>1?l-1:l,a&&f>1?u-1:u],m=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=g[0]/m[0],b=g[1]/m[1],v=t.data.get(o.dataId).values;let x=0;for(let $=0;$<c;$++){const C=$*i[0];for(let S=0;S<p;S++){const E=S*y,R=Math.floor(E),A=Math.min(Math.ceil(E),l-1),D=C+R*i[1],L=C+A*i[1],F=E-R,B=1-F;for(let W=0;W<f;W++){const V=W*b,z=Math.floor(V),M=Math.min(Math.ceil(V),u-1),j=V-z,J=1-j,Z=D+z*i[2],ee=D+M*i[2],ne=L+z*i[2],oe=L+M*i[2],se=B*J,ae=B*j,fe=F*J,be=F*j;for(let xe=0;xe<d;xe++){const Ce=v[x++];h[Z+xe]+=Ce*se,h[ee+xe]+=Ce*ae,h[ne+xe]+=Ce*fe,h[oe+xe]+=Ce*be}}}}return t.makeTensorInfo([c,u,l,d],"float32",h)}const IB={kernelName:fm,backendName:"cpu",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;ge(r,"resizeNearestNeighbor");const c=we(r.shape),[l,u]=i,[d,p,f,h]=r.shape,g=t.data.get(r.dataId).values,m=new Float32Array(d*l*u*h),y=[o&&l>1?p-1:p,o&&u>1?f-1:f],b=[o&&l>1?l-1:l,o&&u>1?u-1:u],v=y[0]/b[0],x=y[1]/b[1];let $=0;for(let C=0;C<d;C++){const S=C*c[0];for(let E=0;E<l;E++){const R=a?v*(E+.5):v*E;let A=Math.min(p-1,o?Math.round(R):Math.floor(R));a&&(A=Math.max(0,A));const D=S+A*c[1];for(let L=0;L<u;L++){const F=a?x*(L+.5):x*L;let B=Math.min(f-1,o?Math.round(F):Math.floor(F));a&&(B=Math.max(0,B));const W=D+B*c[2];for(let V=0;V<h;V++){const z=g[W+V];m[$++]=z}}}}return t.makeTensorInfo([d,l,u,h],r.dtype,m)}const AB={kernelName:Ad,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;ge([o,r],"resizeNearestNeighborGrad");const i=we(r.shape),c=we(o.shape),[l,u,d,p]=r.shape,[,f,h]=o.shape,g=new Float32Array(l*u*d*p),m=t.data.get(o.dataId).values,y=[a&&f>1?u-1:u,a&&h>1?d-1:d],b=[a&&f>1?f-1:f,a&&h>1?h-1:h],v=y[0]/b[0],x=y[1]/b[1],$=1/v,C=1/x,S=Math.ceil($)*2+2,E=Math.ceil(C)*2+2;for(let R=0;R<l;R++){const A=R*i[0];for(let D=0;D<u;D++){const L=A+D*i[1],F=Math.floor(D*$),B=Math.floor(F-S/2);for(let W=0;W<d;W++){const V=L+W*i[2],z=Math.floor(W*C),M=Math.floor(z-E/2);for(let j=0;j<p;j++){let J=0;for(let Z=0;Z<S;Z++){const ee=Z+B;if(ee<0||ee>=f)continue;const ne=A+ee*c[1],oe=ee*v,se=Math.min(u-1,a?Math.round(oe):Math.floor(oe));if(D===se)for(let ae=0;ae<E;ae++){const fe=ae+M;if(fe<0||fe>=h)continue;const be=ne+fe*c[2],xe=fe*x,Ce=Math.min(d-1,a?Math.round(xe):Math.floor(xe));W===Ce&&(J+=m[be+j])}}g[V+j]=J}}}}return t.makeTensorInfo(r.shape,r.dtype,g)}const OB={kernelName:pm,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;ge(r,"reverse");const a=r.shape.length,i=Pe(o,r.shape);if(a===0)return is({inputs:{x:r},backend:t});const c=new lt(r.shape,r.dtype),l=t.bufferSync(r);for(let u=0;u<c.size;u++){const d=c.indexToLoc(u),p=d.slice();i.forEach(f=>p[f]=r.shape[f]-1-p[f]),c.set(l.get(...p),...d)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}const FB={kernelName:Od,backendName:"cpu",kernelFunc:DB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB={kernelName:rp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=ht(s.dtype,G(s.shape)),[l,u,d,p]=s.shape,[f,h]=Dg(a,u,d),g=255,m=Math.sin(r),y=Math.cos(r),b=i.data.get(s.dataId).values;for(let x=0;x<l;x++){const $=x*d*u*p;for(let C=0;C<u;C++){const S=C*(d*p);for(let E=0;E<d;E++){const R=E*p;for(let A=0;A<p;A++){const D=[l,C,E,A],L=D[2],F=D[1];let B=(L-f)*y-(F-h)*m,W=(L-f)*m+(F-h)*y;B=Math.round(B+f),W=Math.round(W+h);let V=o;if(typeof o!="number"&&(A===3?V=g:V=o[A]),B>=0&&B<d&&W>=0&&W<u){const M=W*(d*p),j=B*p,J=$+M+j+A;V=b[J]}const z=$+S+R+A;c[z]=V}}}}return{dataId:i.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB=ze(rc,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),VB={kernelName:rc,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=dr(o,r,a),p=!0,f=t.bufferSync(r),h=t.bufferSync(o),g=Or(f,h,a,d,l,c,i,u,0,p);return t.makeTensorInfo(a,g.dtype,g.values)}const BB={kernelName:Dd,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function zB(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function UB(n,e,t,s,r,o){const a=st("int32",t*r);for(let i=0;i<t;++i){const c=n.slice(i*s,(i+1)*s),l=i*r;for(let u=0;u<r;++u)a[l+u]=o==="left"?WB(c,e[u+l]):zB(c,e[u+l])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,l=UB(i,c,r.shape[0],r.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",l)}const HB={kernelName:Pd,backendName:"cpu",kernelFunc:GB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;ge([s,r,o],"select");const a=s.shape.length,i=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=Ut(r.dtype,o.dtype),d=xt(G(r.shape),u);let p=0;const f=a===0||a>1||r.shape.length===1?1:G(r.shape.slice(1));for(let h=0;h<i.length;h++)for(let g=0;g<f;g++)i[h]===1?d[p++]=c[h]:d[p++]=l[h];return t.makeTensorInfo(r.shape,u,d)}const KB={kernelName:Ld,backendName:"cpu",kernelFunc:jB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qB=Lg,XB=Vg,YB=ze(ac,n=>n>=0?XB*n:qB*(Math.exp(n)-1)),QB={kernelName:ac,backendName:"cpu",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB=ze(lc,n=>n<0?-1:n>0?1:0),JB={kernelName:lc,backendName:"cpu",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW=ze(ic,n=>Math.sin(n)),tW={kernelName:ic,backendName:"cpu",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=ze(cc,n=>Math.sinh(n)),sW={kernelName:cc,backendName:"cpu",kernelFunc:nW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW=11920928955078125e-23,Wb=Math.log(rW)+2,oW=ze(dc,n=>{const e=n>-Wb,t=n<Wb,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),aW={kernelName:dc,backendName:"cpu",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;ge([r],"spaceToBatchND");const i=G(o),c=[[0,0]];c.push(...a);for(let C=1+o.length;C<r.shape.length;++C)c.push([0,0]);const l=fN.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),u=kc(l.shape,o,i,!1),d=Ac(u.length,o.length,!1),p=Rc(l.shape,o,i,!1),g=Ye({inputs:{x:l},backend:t,attrs:{shape:u}}),b=Ht({inputs:{x:g},backend:t,attrs:{perm:d}}),$=Ye({inputs:{x:b},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),$}const cW={kernelName:Bd,backendName:"cpu",kernelFunc:iW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values[0],[d,p,f,h,g]=MC(i,s.shape,s.dtype,c,r.dtype,l,u);return[t.makeTensorInfo(p,s.dtype,d),t.makeTensorInfo([p[0]],r.dtype,f),t.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(m=>Number(m)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const uW={kernelName:Ud,backendName:"cpu",kernelFunc:lW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(r.dataId).values),i=t.data.get(s.dataId).values,c=Array.from(t.data.get(o.dataId).values),[l,u,d]=BC(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(u,s.dtype,l),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const pW={kernelName:Gd,backendName:"cpu",kernelFunc:dW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,u]=sy(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(u,s.dtype,l)}const hW={kernelName:Hd,backendName:"cpu",kernelFunc:fW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[l,u]=sy(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(u,s.dtype,l)}const gW={kernelName:jd,backendName:"cpu",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=dr(o,r,i),f=!1,h=t.bufferSync(r);let g;switch(o.dtype){case"bool":{const m=t.bufferSync(o),y=!!t.data.get(a.dataId).values[0];g=Or(h,m,i,p,u,l,c,d,y,f);break}case"float32":{const m=t.bufferSync(o),y=t.data.get(a.dataId).values[0];g=Or(h,m,i,p,u,l,c,d,y,f);break}case"int32":{const m=t.bufferSync(o),y=t.data.get(a.dataId).values[0];g=Or(h,m,i,p,u,l,c,d,y,f);break}case"string":{const m=t.bufferSync(o),y=$s(t.data.get(a.dataId).values[0]);g=Or(h,m,i,p,u,l,c,d,y,f);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(i,g.dtype,g.values)}const bW={kernelName:Kd,backendName:"cpu",kernelFunc:yW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Pe(a,r.shape)[0],c=Qg(r,o,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map(d=>{const p=[...u];p[i]=d;const f=Qr({inputs:{x:r},backend:t,attrs:{begin:l,size:p}});return l[i]+=d,f})}const wW={kernelName:Wd,backendName:"cpu",kernelFunc:xW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:hm,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ge(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const c=r[i];o[i]=c*c}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=ze(xc,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),CW={kernelName:xc,backendName:"cpu",kernelFunc:$W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;ge(r,"stridedSlice");const{finalShapeSparse:f,finalShape:h,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:v,strides:x}=Ag(r.shape,o,a,i,c,l,u,d,p);let $;if(g)$=Ye({inputs:{x:r},backend:t,attrs:{shape:h}});else if(m||y){T(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=Eg(b,v,x),S=Qr({inputs:{x:r},backend:t,attrs:{begin:b,size:C}});$=Ye({inputs:{x:S},backend:t,attrs:{shape:h}}),t.disposeIntermediateTensorInfo(S)}else{const C=t.bufferSync(r),S=UC(f,C,x,b);$=t.makeTensorInfo(h,S.dtype,S.values)}return $}const TW={kernelName:qd,backendName:"cpu",kernelFunc:NW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:d}=e,p=t.data.get(u.dataId).values,f=t.data.get(d.dataId).values,[h,g]=GC(p,f,r,o,a,i,c,l);return[t.makeTensorInfo([h.length],"string",h),t.makeTensorInfo(d.shape,"int32",g)]}const EW={kernelName:Xd,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values[0],[l,u,d]=HC(i,c,r),p=u.length;return[t.makeTensorInfo([p,2],"int32",l),t.makeTensorInfo([p],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const IW={kernelName:Yd,backendName:"cpu",kernelFunc:_W};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,i=jC(a,r);return t.makeTensorInfo(o.shape,"int32",i)}const AW={kernelName:Qd,backendName:"cpu",kernelFunc:kW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=ze(gc,n=>Math.tan(n)),OW={kernelName:gc,backendName:"cpu",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW=ze(yc,n=>Math.tanh(n)),FW={kernelName:yc,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:a,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=dr(o,r,s.shape),d=!1,p=t.bufferSync(r),f=t.bufferSync(o),h=t.bufferSync(s),g=Or(p,f,s.shape,u,c,i,a,l,h,d);return t.makeTensorInfo(s.shape,g.dtype,g.values)}const LW={kernelName:Fd,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;ge(r,"tile");const a=qC(t.bufferSync(r),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const MW={kernelName:bc,backendName:"cpu",kernelFunc:VW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s;ge(r,"topk");const i=t.data.get(r.dataId).values,[c,l]=YC(i,r.shape,r.dtype,o,a);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const WW={kernelName:Zd,backendName:"cpu",kernelFunc:BW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:l}=t,[u,d,p,f]=r.shape,[h,g]=l??[d,p],m=[u,h,g,f],y=we(r.shape),b=y[0],v=y[1],x=y[2],$=we(m),C=$[0],S=$[1],E=$[2],R=ht(r.dtype,G(m));R.fill(c);const A=s.data.get(r.dataId).values,D=s.data.get(o.dataId).values;for(let F=0;F<u;++F){const B=o.shape[0]===1?D:D.subarray(F*8,F*8+8);for(let W=0;W<h;++W)for(let V=0;V<g;++V)for(let z=0;z<f;++z){let M;const j=B[6]*V+B[7]*W+1;if(j===0)continue;const J=(B[0]*V+B[1]*W+B[2])/j,Z=(B[3]*V+B[4]*W+B[5])/j,ee=zb(J,p,i),ne=zb(Z,d,i);switch(a){case"nearest":M=qW(A,d,p,b,v,x,F,ne,ee,z,c);break;case"bilinear":M=XW(A,d,p,b,v,x,F,ne,ee,z,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const oe=F*C+W*S+V*E+z;R[oe]=M}return s.makeTensorInfo(m,r.dtype,R)}return{dataId:s.write(R,m,r.dtype),shape:r.shape,dtype:r.dtype}}const UW={kernelName:Jd,backendName:"cpu",kernelFunc:zW};function zb(n,e,t){switch(t){case"reflect":return GW(n,e);case"wrap":return HW(n,e);case"nearest":return KW(n,e);case"constant":default:return jW(n)}}function GW(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Ys(0,t,e-1)}function HW(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Ys(0,t,e-1)}function jW(n,e){return n}function KW(n,e){return Ys(0,n,e-1)}function Fa(n,e,t,s,r,o,a,i,c,l,u){const d=a*s+i*r+c*o+l;return 0<=i&&i<e&&0<=c&&c<t?n[d]:u}function qW(n,e,t,s,r,o,a,i,c,l,u){const d=Math.round(i),p=Math.round(c);return Fa(n,e,t,s,r,o,a,d,p,l,u)}function XW(n,e,t,s,r,o,a,i,c,l,u){const d=Math.floor(i),p=Math.floor(c),f=d+1,h=p+1,g=(h-c)*Fa(n,e,t,s,r,o,a,d,p,l,u)+(c-p)*Fa(n,e,t,s,r,o,a,d,h,l,u),m=(h-c)*Fa(n,e,t,s,r,o,a,f,p,l,u)+(c-p)*Fa(n,e,t,s,r,o,a,f,h,l,u);return(f-i)*g+(i-d)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ge(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:l}=QC(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}const QW={kernelName:ep,backendName:"cpu",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],c=new Array(a-1);let l=0;for(let f=0;f<a;f++)f!==o&&(c[l++]=r.shape[f]);const u=new Array(a).fill(0),d=r.shape.slice();d[o]=1;const p=new Array(i);for(let f=0;f<p.length;f++){u[o]=f;const h=Qr({inputs:{x:r},backend:t,attrs:{begin:u,size:d}});p[f]=Ye({inputs:{x:h},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(h)}return p}const JW={kernelName:tp,backendName:"cpu",kernelFunc:ZW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s;ge(r,"unsortedSegmentSum");const i=r.shape.length,c=o.shape.length,l=[],u=[],d=i-c;let p=o;for(let h=0;h<d;++h){const g=jl({inputs:{input:p},backend:t,attrs:{dim:h+1}});p=g,u.push(g)}for(let h=0;h<a;++h){const g=Is(h,"int32"),m=t.makeTensorInfo([],"int32",g),y=pC({inputs:{a:m,b:p},backend:t}),b=sr({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),v=kp({inputs:{a:b,b:r},backend:t}),x=Oc({inputs:{x:v},backend:t,attrs:{axis:0,keepDims:!1}});l.push(x),u.push(m),u.push(y),u.push(b),u.push(v),u.push(x)}const f=pN({inputs:l,backend:t,attrs:{axis:0}});return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}const t4={kernelName:np,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4=[YL,kP,ZL,e3,PP,n3,r3,a3,c3,u3,p3,h3,g3,x3,v3,N3,S3,_3,k3,qL,R3,D3,P3,VP,V3,DP,BP,B3,AP,z3,G3,H3,K3,X3,Q3,J3,tV,sV,oV,iV,lV,dV,fV,mV,gV,bV,wV,$V,CV,NV,TV,EV,kV,WL,RV,WP,BV,zP,WV,GP,KV,qV,YV,jP,qP,ZV,eM,nM,rM,YP,ZP,RP,aM,U3,cM,uM,pM,zL,eL,nL,hM,rL,gM,xM,vM,NM,SM,_M,IM,aL,AM,OM,FM,LM,MM,WM,UM,cL,HM,qM,QM,uL,pL,eB,sB,aB,hL,cB,uB,dB,fN,mB,GL,yL,yB,xB,vB,CB,OP,ch,TB,HL,jL,KL,EB,IB,AB,OB,FB,PB,VB,TL,BB,HB,KB,QB,EL,JB,tW,sW,_L,XM,aW,cW,uW,pW,hW,gW,bW,wW,AL,vW,OL,FL,CW,TW,EW,IW,AW,ML,_V,OW,FW,LW,MW,WW,UW,mL,QW,JW,t4,lB];for(const n of n4)op(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir={},el={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function s4(n,e){Ir[n]=e}function Wn(n,e){if(!(n in Ir)||e!=null){const s=o4(n,e);if(s!==null)Ir[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Ir[n];return t==null||t.isContextLost()?(delete Ir[n],Wn(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ir[n])}function r4(n){if(!P().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function o4(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??r4(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Ir[n]},!1),P().getBool("SOFTWARE_WEBGL_ENABLED")&&(el.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",el)||t.getContext("experimental-webgl",el):t.getContext("webgl2",el)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var li;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(li||(li={}));var dn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(dn||(dn={}));var gt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(gt||(gt={}));function Dc(n,e){return[e,n]}function a4(n,e){return n*e}function tl(n){const e=G(n),t=Math.ceil(e/4);return Rl(t)}function pa(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function i4(n,e){const[t,s]=pa(n,e);return t*s*4}function cy(n,e){const t=n;let s,r,o,a,i,c,l,u,d,p;return P().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,u=1,d=t.HALF_FLOAT,p=t.FLOAT,c=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,l=4,u=4,d=e!=null?e.HALF_FLOAT_OES:null,p=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(n,e){const t=e();return P().getBool("DEBUG")&&c4(n),t}function c4(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+p4(n,e))}const l4=596e-10,u4=65504;function d4(n){return!!(P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||l4<Math.abs(n)&&Math.abs(n)<u4)}function p4(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function nl(n,e){return Os(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function f4(n,e){const t=Os(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function h4(n,e){const t=Os(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),P().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw hN(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const m4=/ERROR: [0-9]+:([0-9]+):/g;function hN(n,e){const t=m4.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((d,p)=>Vr((p+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const c=a.slice(0,s-1),l=a.slice(s-1,s),u=a.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Vr(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function g4(n){return Os(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function y4(n,e){if(pe(n,()=>n.linkProgram(e)),!P().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function af(n,e){if(pe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function b4(n,e){const t=Os(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function x4(n,e){const t=Os(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function w4(n){return Os(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function v4(n,e){const t=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function $4(n){return Os(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Ub(n,e,t,s,r,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pe(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),pe(n,()=>n.enableVertexAttribArray(i)),!0)}function C4(n,e,t){_4(n,t),pe(n,()=>n.activeTexture(n.TEXTURE0+t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function N4(n,e,t){return Os(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function T4(n,e,t){return n.getUniformLocation(e,t)}function S4(n,e,t,s){pe(n,()=>C4(n,e,s)),pe(n,()=>n.uniform1i(t,s))}function cf(n,e,t){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Gb(n,e){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function sl(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+E4(n,e))}function E4(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Os(n,e,t){const s=pe(n,()=>e());if(s==null)throw new Error(t);return s}function _4(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Qo(n,e=2){return G(n.slice(0,n.length-e))}function Zo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function rl(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Qo(n),...Zo(n)]),e}function I4(n,e=!1){let t=P().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=P().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&P().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((i,c)=>c>=n.length-2?mu(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=_s(n).newShape);let r=G(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=Qo(n);let c=2,l=2;n.length&&([c,l]=Zo(n)),r=i*(c/2)*(l/2),o=Rl(r).map(u=>u*2)}else o=Rl(r);return o}function ol(n){return n%2===0}function ql(n,e){if(n=n.slice(-2),e=e.slice(-2),Ue(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||ol(t)&&ol(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&ol(n[0])&&ol(e[0])}let lf,uf;function k4(n){if(lf==null){const e=Wn(n);lf=e.getParameter(e.MAX_TEXTURE_SIZE)}return lf}function A4(n){if(uf==null){const e=Wn(n);uf=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,uf)}function R4(n){if(n===0)return 0;let e;const t=Wn(n);return $n(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:$n(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function $n(n,e){return n.getExtension(e)!=null}function Hb(n){try{if(Wn(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function O4(n){if(n===0)return!1;const e=Wn(n);if(n===1){if(!$n(e,"OES_texture_float"))return!1}else if(!$n(e,"EXT_color_buffer_float"))return!1;return uh(e)}function D4(n){if(n===0)return!1;const e=Wn(n);if(n===1){if(!$n(e,"OES_texture_float")||!$n(e,"WEBGL_color_buffer_float"))return!1}else{if($n(e,"EXT_color_buffer_float"))return uh(e);const s="EXT_color_buffer_half_float";if($n(e,s)){const r=e.getExtension(s);return F4(e,r)}return!1}return uh(e)}function uh(n){const e=cy(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function F4(n,e){const t=cy(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function P4(n){return n!==2?!1:Wn(n).fenceSync!=null}function Fc(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&T(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=P();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>Hb(2)?2:Hb(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>k4(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>A4(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ye.getNumber("WEBGL_VERSION");return n===0?0:R4(n)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!xm());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>O4(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>D4(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>P4(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>xm()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(){let n,e,t,s,r,o,a,i,c,l;return P().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=P().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(n,e,t="index"){const s=we(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function Ap(n,e,t="index"){const s=we(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function L4(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function V4(n,e,t="index"){const s=n.map((o,a)=>a),r=L4(s,e);return r.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${r[a]}`,c=a===r.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${i}; ${c};`}).join("")}function ly(n){const e=we(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function uy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const mN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:gN}=sC;function M4(n,e,t){const s=[];if(n.forEach(f=>{const h=G(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${h>1?`[${h}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:g}=dy(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(f=>B4(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Pt(),c=U4(i);let l,u,d=j4(i);return e.isPacked?(l=W4(e.logicalShape,a,t.enableShapeUniforms),u=H4(i)):(l=z4(e.logicalShape,a,t.enableShapeUniforms),u=G4(i)),t.packedInputs&&(d+=Y4),[d,c,u,r,l,o,t.userCode].join(`
`)}function fa(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return cz(n,e);case 1:return uz(n,e);case 2:return pz(n,e);case 3:return hz(n,e);case 4:return gz(n,e);case 5:return yz(n);case 6:return bz(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function yN(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return iz(n);case 1:return lz(n,e);case 2:return dz(n,e);case 3:return fz(n,e);default:return mz(n,e)}}function B4(n,e,t=!1,s){let r="";t?r+=yN(n,s):r+=fa(n,s);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?r+=xz(n,e):r+=wz(n,e)),r}function W4(n,e,t){switch(n.length){case 0:return bN();case 1:return Q4(n,e,t);case 2:return oz(n,e,t);case 3:return J4(n,e,t);default:return tz(n,e,t)}}function z4(n,e,t){switch(n.length){case 0:return bN();case 1:return Z4(n,e,t);case 2:return az(n,e,t);case 3:return ez(n,e,t);case 4:return nz(n,e,t);case 5:return sz(n,e);case 6:return rz(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function U4(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function G4(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function H4(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function j4(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${K4}
    ${q4}
    ${X4}
  `}const K4=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q4=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X4=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Y4=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function bN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Q4(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Z4(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function J4(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function ez(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ap(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=lo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function tz(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let a=o,i="",c="b, r, c";for(let l=2;l<n.length-1;l++)a*=n[n.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,c=`b${l}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${c});
    }
  `}function nz(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ap(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=lo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function sz(n,e){const t=lo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function rz(n,e){const t=lo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function oz(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ue(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function az(n,e,t){return Ue(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function uo(n){return`offset${n}`}function iz(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Pt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function cz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=uo(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${c}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function lz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=Pt();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function uz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ha(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=uo(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function dz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],c=Pt();if(o!=null&&Ue(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function pz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Ue(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const p=o[0],f=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=_s(t),c=a;if(c.length<t.length){const p=ma(n,c),f=["row","col"];return`
      ${fa(p,e)}
      float ${r}(int row, int col) {
        return ${r}(${ga(f,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ha(n)}
      }
    `;const l=o[0],u=o[1],d=uo(s);return u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function fz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const p=t.slice(1),f=[1,2],h=ma(n,p),g=["b","row","col"];return`
        ${yN(h,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${ga(g,f)});
        }
      `}const i=Pt();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const c=a[0],l=a[1],u=Math.ceil(t[2]/2),d=u*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function hz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:c}=_s(t),l=i;if(l.length<t.length){const g=ma(n,l),m=["row","col","depth"];return`
        ${fa(g,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${ga(m,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${ha(n)}
      }
    `;const u=n.shapeInfo.texShape,d=u[0],p=u[1],f=n.shapeInfo.flatOffset;if(p===o&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===a&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const h=uo(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${h};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${h};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function mz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Pt();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(o[a-1]/2);let p=d*Math.ceil(o[a-2]/2),f="int b, int row, int col",h=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let g=2;g<a-1;g++)f=`int b${g}, `+f,p*=o[a-g-1],h=`b${g} * ${p} + `+h;return`
    vec4 ${s}(${f}) {
      int index = ${h};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${l});
      return ${r.texture2D}(${t}, uv);
    }
  `}function gz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:c,keptDims:l}=_s(t);if(c.length<t.length){const b=ma(n,c),v=["row","col","depth","depth2"];return`
      ${fa(b,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${ga(v,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${ha(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1],h=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(f===i&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${h}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===o&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=uo(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${h}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${f}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function yz(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,a=e[2]*o,i=e[1]*a,{newShape:c,keptDims:l}=_s(e);if(c.length<e.length){const g=ma(n,c),m=["row","col","depth","depth2","depth3"];return`
      ${fa(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${ga(m,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${ha(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const h=uo(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${h};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function bz(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=_s(e);if(r.length<e.length){const m=ma(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${fa(m)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${ga(y,o)});
      }
    `}const a=e[5],i=e[4]*a,c=e[3]*i,l=e[2]*c,u=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ha(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,f=p[0],h=p[1];if(h===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(h===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=uo(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${c} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ha(n){const e=n.name,t=G(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function xz(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=gN(n.shapeInfo.logicalShape,e.logicalShape),c=Ge(a),l=a-o;let u;const d=["x","y","z","w","u","v"];o===0?u="":a<2&&i.length>=1?u="coords = 0;":u=i.map(b=>`coords.${d[b+l]} = 0;`).join(`
`);let p="";a<2&&o>0?p="coords":p=n.shapeInfo.logicalShape.map((b,v)=>`coords.${d[v+l]}`).join(", ");let f="return outputValue;";const g=G(n.shapeInfo.logicalShape)===1,y=G(e.logicalShape)===1;if(o===1&&!g&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){const b=o-2,v=o-1;i.indexOf(b)>-1&&i.indexOf(v)>-1?f="return vec4(outputValue.x);":i.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${c} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${f}
    }
  `}function wz(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===c&&n.shapeInfo.flatOffset==null&&Ue(a,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=Ge(c),u=gN(n.shapeInfo.logicalShape,e.logicalShape),d=c-i;let p;const f=["x","y","z","w","u","v"];i===0?p="":c<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords.${f[g+d]} = 0;`).join(`
`);let h="";return c<2&&i>0?h="coords":h=n.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+d]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${p}
      return get${s}(${h});
    }
  `}function Ge(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function dy(n,e,t){const{newShape:s,keptDims:r}=_s(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):s,c=!n&&o>1&&!Ue(e,t)&&s.length<o||a;return{useSqueezeShape:c,uniformShape:c?i:e,keptDims:r}}function ma(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ga(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n,e,t,s){const r=t.map((u,d)=>{const p={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(p.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:p}}),o=r.map(u=>u.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=M4(r,a,e),c=h4(n.gl,i),l=n.createProgram(c);return P().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(l),Object.assign({program:e,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a},xN(n,e,l)))}function xN(n,e,t){const s=[],r=[];let o,a,i,c=null,l=null;l=n.getUniformLocation(t,"NAN",!1),P().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const d of e.variableNames){const p={name:d,uniform:n.getUniformLocation(t,d,u),offset:n.getUniformLocation(t,`offset${d}`,u)};e.enableShapeUniforms&&(p.shape=n.getUniformLocation(t,`${d}Shape`,u),p.texShape=n.getUniformLocation(t,`${d}TexShape`,u)),s.push(p)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",u),i=n.getUniformLocation(t,"outShapeStrides",u),a=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const d of e.customUniforms)r.push(n.getUniformLocation(t,d.name,u));return{variablesLocations:s,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function jb(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],a=o.shape;if(!Ue(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!Ue(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function $z(n,e,t,s,r){e.program.enableShapeUniforms||(jb(e.inShapeInfos,t),jb([e.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),P().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<t.length;++c){const l=t[c],{uniform:u,offset:d,shape:p,texShape:f}=e.variablesLocations[c];if(p){const{uniformShape:h}=dy(e.program.packedInputs,l.shape,l.texData.texShape);switch(h.length){case 1:n.gl.uniform1iv(p,new Int32Array(h));break;case 2:n.gl.uniform2iv(p,new Int32Array(h));break;case 3:n.gl.uniform3iv(p,new Int32Array(h));break;case 4:n.gl.uniform4iv(p,new Int32Array(h));break}}if(f&&n.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),u!=null){if(l.isUniform){if(G(l.shape)<2)n.gl.uniform1f(u,l.uniformValues[0]);else{let h=l.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),n.gl.uniform1fv(u,h)}continue}l.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,u,c)}}const i=e.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=we(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let c=0;c<e.program.customUniforms.length;++c){const l=e.program.customUniforms[c],u=e.customUniformLocations[c],d=r[c];if(l.type==="float")n.gl.uniform1fv(u,d);else if(l.type==="vec2")n.gl.uniform2fv(u,d);else if(l.type==="vec3")n.gl.uniform3fv(u,d);else if(l.type==="vec4")n.gl.uniform4fv(u,d);else if(l.type==="int")n.gl.uniform1iv(u,d);else if(l.type==="ivec2")n.gl.uniform2iv(u,d);else if(l.type==="ivec3")n.gl.uniform3iv(u,d);else if(l.type==="ivec4")n.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}n.executeProgram()}function Cz(n,e,t){let s="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const c=a.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:d}=dy(n.packedInputs,a.shape,c);let p="",f="",h="";if(u.length===1&&n.packedInputs){const $=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${$[0]>1}_${$[1]>1}`}else if(u.length===2&&!n.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const $=we(u);h=`${$[0]===c[1]}_${$[$.length-1]===c[1]}`}const g=a.shape.length,m=u.length===2&&Ue(a.shape,c),y=G(a.shape)===1,b=qr(a.shape,t.shape),v=!n.packedInputs&&g===t.shape.length&&Ue(c,t.texData.texShape),x=n.packedInputs||u.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${g}_${v}_${l?d:""}_${u.length}_${y}_${b}_${m}_${p}_${f}_${h}_${x}_${i}`}else{const c=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${c}_${i}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${P().getNumber("WEBGL_VERSION")}`,o}function _t(n){return P().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nz{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=li.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Pt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ap(["r","c","d"],e):lo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=li.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Pt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ap(["r","c","d"],e):lo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sz{constructor(e){this.variableNames=["A"],this.outTexUsage=dn.DOWNLOAD;const t=Pt();this.outputShape=e,this.userCode=`
      ${mN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ez{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=dn.DOWNLOAD;const t=Pt();this.outputShape=e,this.userCode=`
      ${mN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _z={R:0,G:1,B:2,A:3};class Kb{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Pt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const c=s[i];a+=`
          if(offset == ${i}) {
            result = values[${_z[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?uy():ly(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iz{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Pt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const c=a*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?uy():ly(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const e=Pt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return f4(n,t)}function Az(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return b4(n,e)}function Rz(n){const e=new Uint16Array([0,1,2,2,1,3]);return x4(n,e)}function Pc(n,e,t,s,r,o){v4(e,t);const a=w4(n),i=n.TEXTURE_2D;return pe(n,()=>n.bindTexture(i,a)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),P().getNumber("WEBGL_VERSION")===1?pe(n,()=>n.texImage2D(i,0,s,e,t,0,r,o,null)):pe(n,()=>n.texStorage2D(i,1,s,e,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function wN(n){return n.internalFormatFloat}function Oz(n,e,t,s){const[r,o]=Dc(e,t);return Pc(n,r,o,wN(s),s.textureFormatFloat,n.FLOAT)}function vN(n){return n.internalFormatHalfFloat}function Dz(n,e,t,s){const[r,o]=Dc(e,t);return Pc(n,r,o,vN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function $N(n){return n.downloadTextureFormat}function Fz(n,e,t,s){const[r,o]=Dc(e,t);return Pc(n,r,o,$N(s),n.RGBA,n.UNSIGNED_BYTE)}function CN(n){return n.internalFormatPackedFloat}function Pz(n,e,t,s){const[r,o]=pa(e,t);return Pc(n,r,o,CN(s),n.RGBA,n.FLOAT)}function NN(n){return n.internalFormatPackedHalfFloat}function Lz(n,e,t,s){const[r,o]=pa(e,t);return Pc(n,r,o,NN(s),n.RGBA,s.textureTypeHalfFloat)}function Vz(n,e,t){return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Ub(n,e,"clipSpacePos",t,3,20,0)&&Ub(n,e,"uv",t,2,20,12)}function Mz(n,e,t,s,r,o){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,c;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),i=n.UNSIGNED_BYTE,c=n.RGBA):(a=new Float32Array(t*s*4),i=n.FLOAT,c=o.internalFormatPackedFloat),a.set(r),P().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,i,a)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,i,a)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Bz(n,e,t){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?P().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):P().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Wz(n,e,t,s){const r=n.createBuffer();pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*e*t;return pe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function zz(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Uz(n,e,t,s){const[r,o]=Dc(e,t),a=4,i=new Uint8Array(a4(e*t,a));return pe(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Gz(n,e,t,s,r,o,a,i){const c=n,l=new Float32Array(i4(o,a));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function Hz(n,e,t){const s=new Float32Array(e*t*4);return pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class df{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=P().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,s4(t,e)):this.gl=Wn(t),e=this.gl,P().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>pe(o,()=>o.createVertexArray()),this.bindVertexArray=a=>pe(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>pe(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>pe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>pe(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>pe(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>pe(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),P().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=nl(this.gl,o),$n(this.gl,a))this.textureHalfFloatExtension=nl(this.gl,a);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),$n(this.gl,r))this.colorBufferHalfFloatExtension=nl(this.gl,r);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",$n(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if($n(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Az(this.gl),this.indexBuffer=Rz(this.gl),this.framebuffer=$4(this.gl),this.textureConfig=cy(this.gl,this.textureHalfFloatExtension)}get debug(){return P().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Oz(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Dz(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Fz(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Bz(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),Mz(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Lz(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Pz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Gb(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Uz(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,a){return Gz(this.gl,e,t,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return zz(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=Wz(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(P().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=o}else P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Hz(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=kz(t));const s=g4(t);pe(t,()=>t.attachShader(s,this.vertexShader)),pe(t,()=>t.attachShader(s,e)),y4(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&af(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),Vz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&af(this.gl,this.program),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?N4(this.gl,e,t):T4(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),S4(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=pa(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&af(this.gl,this.program),sl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=nl(this.gl,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Wf(()=>this.disposed||this.isQueryAvailable(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=jz(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in P().platform&&(s=P().platform.setTimeoutCustom.bind(P().platform)),Wf(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),cf(this.gl,e,this.framebuffer),this.debug&&sl(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(cf(this.gl,this.outputTexture,this.framebuffer),this.debug&&sl(this.gl)):Gb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;cf(r,e,this.framebuffer),this.debug&&sl(r),this.outputTexture=e,pe(r,()=>r.viewport(0,0,t,s)),pe(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function jz(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Kz,bincountImpl:TN,bincountReduceImpl:qz,bitwiseAndImpl:Xz,castImpl:Yz,ceilImpl:Qz,concatImpl:Zz,equalImpl:Jz,expImpl:eU,expm1Impl:tU,floorImpl:nU,gatherNdImpl:sU,gatherV2Impl:rU,greaterImpl:oU,greaterEqualImpl:aU,lessImpl:iU,lessEqualImpl:cU,linSpaceImpl:lU,logImpl:uU,maxImpl:dU,maximumImpl:pU,minimumImpl:fU,multiplyImpl:hU,negImpl:mU,notEqualImpl:gU,prodImpl:yU,raggedGatherImpl:bU,raggedRangeImpl:xU,raggedTensorToTensorImpl:wU,rangeImpl:vU,rsqrtImpl:$U,scatterImpl:CU,sigmoidImpl:NU,simpleAbsImpl:SN,sliceImpl:TU,sparseFillEmptyRowsImpl:SU,sparseReshapeImpl:EU,sparseSegmentReductionImpl:EN,sqrtImpl:_U,staticRegexReplaceImpl:IU,stridedSliceImpl:kU,stringNGramsImpl:AU,stringSplitImpl:RU,stringToHashBucketFastImpl:OU,subImpl:DU,tileImpl:FU,topKImpl:PU,transposeImpl:py,uniqueImpl:LU}=BL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Ot(n,e){return e===1?[n]:_N(n,e)}function VU(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MU{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_t(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Ot("rc",this.rank),s=Ge(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${BU(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?uy():ly(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function BU(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?V4(["r","c","d"],"inputShape"):lo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WU{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=Xb(t,s),o=Yb(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=qb(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const c=this.freeTextures[o].pop();return this.usedTextures[o].push(c),c}let i;return r===gt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===gt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===gt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===gt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===gt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=Xb(s,r),a=Yb(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=qb(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=P().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function zU(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function qb(n,e,t,s,r){const o=UU(e,s);let a;if(r){const[c,l]=pa(n[0],n[1]);a=c*l}else{const[c,l]=Dc(n[0],n[1]);a=c*l}const i=zU(t,o);return a*i}function UU(n,e){switch(n){case gt.PACKED_2X2_FLOAT32:return CN(e);case gt.PACKED_2X2_FLOAT16:return NN(e);case gt.UNPACKED_FLOAT32:return wN(e);case gt.UNPACKED_FLOAT16:return vN(e);case gt.PACKED_4X1_UNSIGNED_BYTE:return $N(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function GU(n){return P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?gt.PACKED_2X2_FLOAT32:gt.UNPACKED_FLOAT32:n?gt.PACKED_2X2_FLOAT16:gt.UNPACKED_FLOAT16}function Xb(n,e){if(n===dn.UPLOAD)return gt.PACKED_2X2_FLOAT32;if(n===dn.RENDER||n==null)return GU(e);if(n===dn.DOWNLOAD||n===dn.PIXELS)return gt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Yb(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const In="if (isnan(x)) return x;",HU="return x;",Qb="return abs(x);",jU="return (x >= 0.0) ? x : (exp(x) - 1.0);",KU=In+`
  return (x < 0.0) ? 0.0 : x;
`,qU=In+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ws="return x;",XU="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU="return x;",QU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ZU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,JU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eG="return 1.0 / (1.0 + exp(-1.0 * x));";class Hs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);const t=e.length,s=Ot("rc",t),r=Ge(t),o=VU(t,s),a=s.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG=yp,sG=1e-7,rG=1e-4,al={};function oG(n){return n in al||(al[n]={}),al[n]}const aG=P().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),iG=600;function cG(){return P().global.screen==null?1024:P().global.screen.height*P().global.screen.width*window.devicePixelRatio*iG/1024/1024}class Rp extends hu{nextDataId(){return Rp.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!P().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof df)t=e;else{const s=Wn(P().getNumber("WEBGL_VERSION"),e);t=new df(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Wn(P().getNumber("WEBGL_VERSION"));t=new df(s),this.binaryCache=oG(P().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WU(this.gpgpu),this.numMBBeforeWarning=cG(),this.texData=new Jh(this,Rn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,a){const i=this.makeTensorInfo(t,s),c=this.texData.get(i.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[r,o]},c.texShape=[r,o];const l=rl(t),u=new Kb(l,!1,a),d=this.runWebGLProgram(u,[i],s,[[r,o]]);return d.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,s){if((P().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||P().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:dn.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(P().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:dn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:c}=t;if(a!=null){let p;c?p=new Hs(i,Ws):p=new Qn(i,Ws);const f=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:r}],r),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const l=this.activeTimers!=null;let u;l&&(u=Qt());let d;if(r==="complex64"){const p=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);d=Ns(p,f)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Qt()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:c}=t;if(o!=null){let h;c?h=new Hs(r,Ws):h=new Qn(r,Ws);const g=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:a}],a),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(s!=null)return this.convertAndCacheOnCPU(e);if(P().getBool("DEBUG")&&!P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&P().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&P().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...tl(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),g=h[0],m=h[1];d=Ns(g,m)}else if(l==null)d=this.getValuesFromTexture(e);else{const h=G(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){const h=this.gpgpu.gl;pe(h,()=>h.deleteBuffer(l))}const p=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Rn().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:a,dtype:i,isPacked:c,texture:l}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;c?f=new Hs(o,Ws):f=new Qn(o,Ws);const h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),g=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),g}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=Rn().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>$s(r));return Ee(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ee(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!d4(s))throw P().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=G(t);if(P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),f=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...tl(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(p),h}const a=P().getBool("WEBGL_PACK")&&r===!0,i=a?rl(t):t,c=a?new Ez(i):new Sz(i),l=this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=ns(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=ns(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(o);i.kernelMs=aw(c),i.getExtraProfileInfo=()=>c.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Qt(),endMs:null}}endTimer(e){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Qt(),e)}async getQueryTime(e){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(e),c=i&&i.origDataId||e,l=this.dataRefCount.get(c);l>1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=aG){return P().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&G(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ln("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return nG(e.shape,t)}packedUnaryOp(e,t,s){const r=new Hs(e.shape,t),o=this.compileAndRun(r,[e],s);return Rn().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=SN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Qb,e.dtype);const t=new Qn(e.shape,Qb),s=this.compileAndRun(t,[e]);return Rn().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Yn(s[0])){const o=s.map(a=>Zn(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new tG(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new MU(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Qo(e.shape),...Zo(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Qo(t),...Zo(t)],a=new IN(o,s),i=!0,c=[s],l=this.runWebGLProgram(a,[r],e.dtype,c,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:a}=s;if(t!=null){const p=G(o),f=t[0]*t[1]*4;T(p<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=rl(o);let c;r?c=new Tz(i):c=new Nz(i);const l=!0,u=[t??tl(i)],d=this.runWebGLProgram(c,[{shape:i,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,s,r,o=!1,a){const i=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===li.DENSE){const y=a??tl(e.outputShape);c.texShape=y.map(b=>b*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),G(i.shape)===0)return c.values=ht(i.dtype,0),i;const l=[],u=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!e.packedInputs&&G(y.shape)<=P().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!e.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),l.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!ql(b.shape,y.shape)){const v=y,x=y.shape;y.shape=b.shape,y=this.packedReshape(y,x),l.push(y),b=this.texData.get(y.dataId),v.shape=x}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},p=Cz(e,u,d),f=this.getAndSaveBinary(p,()=>vz(this.gpgpu,e,u,d)),h=this.activeTimers!=null;let g;h&&(g=this.startTimer()),P().get("ENGINE_COMPILE_ONLY")||$z(this.gpgpu,f,u,d,r),l.forEach(y=>this.disposeIntermediateTensorInfo(y)),h&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const m=P().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const y=Qt();y-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!P().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&o===!1){const y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(P().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ve(()=>{if(!P().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=P().getBool("DEBUG");P().set("DEBUG",!1);const t=this.abs(Oe(1e-8)).dataSync()[0];if(P().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?sG:rG}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:c}=t;if(a!=null)return;const l=this.activeTimers!=null;let u;l&&(u=Qt());let d=t.texShape;if(d==null&&(d=I4(s,c),t.texShape=d),o!=null){const p=rl(s);let f,h=d[1],g=d[0];const m=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(c||!m)&&([h,g]=pa(d[0],d[1])),c?f=new Iz(p,m):f=new Kb(p,m);const y=m?[g,h]:d,b=this.makeTensorInfo(y,r),v=this.texData.get(b.dataId);m?v.usage=dn.PIXELS:v.usage=dn.UPLOAD,v.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,g,o);const x=[[g,h]],C=this.runWebGLProgram(f,[b],r,x,!0),S=this.texData.get(C.dataId);t.texShape=S.texShape,t.isPacked=S.isPacked,t.usage=S.usage,P().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=S.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(b),l&&(this.uploadWaitMs+=Qt()-u)}else{const p=this.acquireTexture(d,i,r,c);t.texture=p}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=lG(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ka(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await R$(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(hN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:c}=xN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=c}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:a,channels:i}=e,c=Rn().backend;if(!c.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(r,t,s,o,a,i);return Rn().makeTensorFromDataId(l,t,s,c)}}Rp.nextDataId=0;function lG(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */wm()&&$m("webgl",()=>new Rp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fy=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Zr{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Re(t,s),this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class ya{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Re(t,s);const o=this.outputShape.length;this.enableShapeUniforms=_t(o);let a="";if(r)if(o===0||G(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ge(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=Ot("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const uG={kernelName:Vi,backendName:"webgl",kernelFunc:rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(o.dataId),i=rn({inputs:{x:s},backend:t}),c=rn({inputs:{x:r},backend:t});return a.complexTensorInfos={real:i,imag:c},o}const dG={kernelName:Iu,backendName:"webgl",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN="return (a < 0.) ? b * a : a;",AN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,a=t.makeTensorInfo([],"float32",Is(o,"float32")),i=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ya(AN,r.shape,a.shape):new Zr(kN,r.shape,a.shape),c=t.runWebGLProgram(i,[r,a],"float32");return t.disposeIntermediateTensorInfo(a),c}const fG={kernelName:rd,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN="return (a < 0.) ? b * a : a;",ON=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function hG(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ya(ON,s.shape,r.shape):new Zr(RN,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const mG={kernelName:Cd,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba="if (isnan(x)) return x;";function Fe({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,c=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),p=t(d.values,c);return i.makeTensorInfo(a.shape,c,p)}const l=P().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return l?u=new Hs(a.shape,e):u=new Qn(a.shape,n),i.runWebGLProgram(u,[a],c)}}function Ct({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:c,b:l}=a,u=i;if(s&&c.dtype==="complex64"){const h=u.texData.get(c.dataId),g=u.texData.get(l.dataId),[m,y]=[[h.complexTensorInfos.real,g.complexTensorInfos.real],[h.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[x,$]=v,C={dataId:x.dataId,dtype:x.dtype,shape:c.shape},S={dataId:$.dataId,dtype:$.dtype,shape:l.shape},E=new Zr(n,c.shape,l.shape);return u.runWebGLProgram(E,[C,S],Ut(x.dtype,$.dtype))}),b=mr({inputs:{real:m,imag:y},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(y),b}const d=o||Ut(c.dtype,l.dtype);if((c.dtype==="string"||l.dtype==="string"||u.shouldExecuteOnCPU([c,l]))&&r!=null){const h=u.texData.get(c.dataId).values,g=u.texData.get(l.dataId).values,m=c.dtype==="string"?Ts(h):h,y=c.dtype==="string"?Ts(g):g,[b,v]=r(c.shape,l.shape,m,y,d),x=u.makeTensorInfo(v,d),$=u.texData.get(x.dataId);return $.values=b,x}const p=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return p?f=new ya(e,c.shape,l.shape,t):f=new Zr(n,c.shape,l.shape),u.runWebGLProgram(f,[c,l],d)}}function ui(n,e=!1){if(n==="linear")return e?YU:HU;if(n==="relu")return e?ZU:KU;if(n==="elu")return e?QU:jU;if(n==="relu6")return e?JU:qU;if(n==="prelu")return e?ON:RN;if(n==="leakyrelu")return e?AN:kN;if(n==="sigmoid")return e?eG:XU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DN{constructor(e,t,s,r=!1,o=!1,a=!1,i=null,c=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=_t(this.outputShape.length);const u=r?e[1]:e[2],d=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";i&&(c?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let v="rc.x",x="rc.x";e[0]<t[0]?v=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${x};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${g[0]});
          result += (${h[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zb={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Jb{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Re(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ex="return a * b;";function hy(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=Ut(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),l=new Jb(Zb.REAL,s.shape,r.shape),u=new Jb(Zb.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape}],p=t.runWebGLProgram(l,d,"float32"),f=t.runWebGLProgram(u,d,"float32"),h=mr({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),h}if(t.shouldExecuteOnCPU([s,r])){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),[l,u]=hU(s.shape,r.shape,i.values,c.values,o),d=t.makeTensorInfo(u,o),p=t.texData.get(d.dataId);return p.values=l,d}let a;return P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new ya(ex,s.shape,r.shape):a=new Zr(ex,s.shape,r.shape),t.runWebGLProgram(a,[s,r],o)}const gG={kernelName:Zi,backendName:"webgl",kernelFunc:hy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(n,e,t){const s=[Qo(n.shape),...Zo(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Qo(e),...Zo(e)],a=new IN(o,s),i=!0,c=[s],l=t.runWebGLProgram(a,[r],n.dtype,c,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=t,i=G(r.shape),c=em(o,i),l=G(c);T(i===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(r.dataId);return u.isPacked&&!ql(r.shape,c)&&!(u.texture!==null&&ql(u.shape,c))?yG(r,c,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype})}const bG={kernelName:kd,backendName:"webgl",kernelFunc:ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tx{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];const i=Math.floor(s/4)*4,c=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const d=1/t;l=`sumValue += dot(values * ${Ur(d)?d.toPrecision(2):d}, ones);`}let u="";o%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xG{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];let i="0.0",c="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",c="min"):t==="max"&&(i="-1.0 / 1e-20",c="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const u=Math.floor(s/4)*4,d=s%4;let p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let h="";o%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=_p(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function fo(n,e,t,s){const r=wG(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:c,outSize:l}=r[a];let u,d;t==="mean"?u=a===0?new tx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l},i):new tx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l}):u=new xG({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l},t),d=o,o=s.runWebGLProgram(u,[o],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vG{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=Ge(this.rank),o=$G(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function $G(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ge(this.rank),o=_N("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=o[u];const i=`vec2(${a.slice(-2).join()})`,c=`++${o[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${c}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${c}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(n,e,t){const s=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CG(n.shape,e):new vG(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n,e,t,s){const r=e,o=n.shape.length,a=Pe(r,n.shape);let i=a;const c=at(i,o),l=c!=null;let u=n;l&&(u=Op(n,c,s),i=it(i.length,o)),$t("sum",i,o);const[d,p]=vt(u.shape,i);let f=d;t&&(f=ut(d,a));const h=G(p),m=G(n.shape)/h,y=ce({inputs:{x:u},attrs:{shape:[m,h]},backend:s}),b=ap(n.dtype),v=fo(y,b,"sum",s),x=ce({inputs:{x:v},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),l&&s.disposeIntermediateTensorInfo(u),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;return NG(r,o,a,t)}const TG={kernelName:Md,backendName:"webgl",kernelFunc:Dp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,a=t,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[o[u]];let l;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,p=py(d,r.shape,r.dtype,o,c);l=a.makeTensorInfo(c,r.dtype);const f=a.texData.get(l.dataId);f.values=p}else l=Op(r,o,a);return l}const SG={kernelName:Ao,backendName:"webgl",kernelFunc:Ft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN=1e3;function Xl({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const l=n.shape.length,u=e.shape.length,d=t?n.shape[l-2]:n.shape[l-1],p=s?e.shape[u-1]:e.shape[u-2],f=t?n.shape[l-1]:n.shape[l-2],h=s?e.shape[u-2]:e.shape[u-1],g=n.shape.slice(0,-2),m=e.shape.slice(0,-2),y=G(g),b=G(m),x=Re(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,h]);T(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const $=t?[y,d,f]:[y,f,d],C=s?[b,h,p]:[b,p,h],S=ce({inputs:{x:n},backend:r,attrs:{shape:$}}),E=ce({inputs:{x:e},backend:r,attrs:{shape:C}}),R=[S,E],A=Math.max(y,b),D=t?S.shape[1]:S.shape[2],L=o!=null,F=a!=null,B=c==="leakyrelu",W=c!=null?ui(c,!0):null,V=L||F||B||W!=null;let z;if((f===1||h===1)&&D>FN&&V===!1){let j=S,J=E;t&&(j=Ft({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),R.push(j)),s&&(J=Ft({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(J));const Z=h!==1,ee=h===1;let ne=j;Z&&(ne=ce({inputs:{x:j},backend:r,attrs:{shape:[A,D,1]}}),R.push(ne));const oe=h===1?2:1;let se=J;ee&&(se=ce({inputs:{x:J},backend:r,attrs:{shape:[A,1,D]}}),R.push(se));const ae=hy({inputs:{a:ne,b:se},backend:r});z=Dp({inputs:{x:ae},backend:r,attrs:{axis:oe,keepDims:!0}}),R.push(ae)}else{const j=Ut(n.dtype,e.dtype),J=new DN($,C,[A,f,h],t,s,L,W,F,B),Z=[S,E];if(o!=null&&Z.push(o),F&&Z.push(a),B){const ee=r.makeTensorInfo([],"float32",Is(i,"float32"));Z.push(ee),R.push(ee)}z=r.runWebGLProgram(J,Z,j)}const M=ce({inputs:{x:z},backend:r,attrs:{shape:x}});R.push(z);for(const j of R)r.disposeIntermediateTensorInfo(j);return M}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=s;return Xl({a:r,b:o,transposeA:c,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}const _G={kernelName:qa,backendName:"webgl",kernelFunc:EG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nx="return abs(x);";function IG(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),a=SN(o.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Hs(s.shape,nx):r=new Qn(s.shape,nx),t.runWebGLProgram(r,[s],s.dtype)}const kG={kernelName:yu,backendName:"webgl",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=In+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,RG=Fe({opSnippet:AG}),OG={kernelName:mi,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG=In+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,FG=Fe({opSnippet:DG}),PG={kernelName:gi,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sx="return a + b;",LG=Ct({opSnippet:sx,packedOpSnippet:sx,supportsComplex:!0,cpuKernelImpl:Kz}),VG={kernelName:ca,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MG{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BG{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $l(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return rn({inputs:{x:s[0]},backend:t});if(s.length>P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),l=$l({inputs:s.slice(0,c),backend:t}),u=$l({inputs:s.slice(c),backend:t});return $l({inputs:[l,u],backend:t})}const r=s.map(c=>c.dtype).reduce((c,l)=>Ut(c,l)),o=s.map(c=>c.shape),i=P().getBool("WEBGL_PACK")?new BG(s[0].shape,o):new MG(s[0].shape,o);return t.runWebGLProgram(i,s,r)}const WG={kernelName:bu,backendName:"webgl",kernelFunc:$l};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Pe(o,r.shape);let l=c;const u=at(l,i);let d=r;u!=null&&(d=Ft({inputs:{x:r},backend:t,attrs:{perm:u}}),l=it(l.length,i)),$t("all",l,i);const[p,f]=vt(d.shape,l),h=G(f),g=ce({inputs:{x:d},backend:t,attrs:{shape:[-1,h]}}),m=fo(g,g.dtype,"all",t);let y;if(a){const b=ut(p,c);y=ce({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=ce({inputs:{x:m},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(d),y}const UG={kernelName:xu,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Pe(o,r.shape);let l=c;const u=at(l,i);let d=r;u!=null&&(d=Ft({inputs:{x:r},backend:t,attrs:{perm:u}}),l=it(l.length,i)),$t("any",l,i);const[p,f]=vt(d.shape,l),h=G(f),g=ce({inputs:{x:d},backend:t,attrs:{shape:[-1,h]}}),m=fo(g,g.dtype,"any",t);let y;if(a){const b=ut(p,c);y=ce({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=ce({inputs:{x:m},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(d),y}const HG={kernelName:wu,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jG{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KG{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,T(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=Ge(c),u=Ot("coords",c);let d,p;if(a===1){p=c+1;const E=Ge(p);d=`
        ${E} sourceLocR = ${E}(${u.join()}, 0);
        ++${u[c-1]};
        ${E} sourceLocG = ${E}(${u.join()}, 0);
        ++${u[c-2]};
        ${E} sourceLocA = ${E}(${u.join()}, 0);
        --${u[c-1]};
        ${E} sourceLocB = ${E}(${u.join()}, 0);
        --${u[c-2]};`}else p=c,d=`
        ${l} sourceLocR = coords;
        ++${u[c-1]};
        ${l} sourceLocG = coords;
        ++${u[c-2]};
        ${l} sourceLocA = coords;
        --${u[c-1]};
        ${l} sourceLocB = coords;
        --${u[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,p),h="."+f[p-1],g=f.map(E=>"int "+E),m=Ot("sourceLocR",p-1).concat("inIdx.r"),y=Ot("sourceLocG",p-1).concat("inIdx.g"),b=Ot("sourceLocB",p-1).concat("inIdx.b"),v=Ot("sourceLocA",p-1).concat("inIdx.a"),x=s==="max"?"greaterThan":"lessThan",$=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()})));`,C=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,S=r?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[c-1]} < ${i[c-1]-1};
        bool hasNextRow = ${u[c-2]} < ${i[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${$}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=_p(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},c=new jG(i,t,s==null),l=[e];s!=null&&l.push(s);const u=n.runWebGLProgram(c,l,"int32");if(u.shape[1]===1)return u;const d=PN(n,e,t,u);return n.disposeIntermediateTensorInfo(u),d}function LN(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],a=_p(o),i=new KG(r,a,t,s==null),c=s==null?[e]:[e,s],l=n.runWebGLProgram(i,c,"int32");if(l.shape.length===e.shape.length){const u=LN(n,e,t,l);return n.disposeIntermediateTensorInfo(l),u}return l}function VN(n,e,t,s){const r=[t];if($t("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!P().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let c=e;i&&(c=n.unpackTensor(e),o.push(c));const[l,u]=vt(c.shape,r),d=G(u),p=ce({inputs:{x:c},backend:n,attrs:{shape:[-1,d]}});o.push(p);const f=PN(n,p,s);o.push(f);const h=ce({inputs:{x:f},backend:n,attrs:{shape:l}});return o.forEach(g=>n.disposeIntermediateTensorInfo(g)),h}return LN(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Pe(o,r.shape);const i=at(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Ft({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=it(a.length,c.shape.length)),$t("argMax",[a[0]],c.shape.length);const u=VN(t,c,a[0],"max");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const XG={kernelName:vu,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Pe(o,r.shape);const i=at(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Ft({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=it(a.length,c.shape.length)),$t("argMin",[a[0]],c.shape.length);const u=VN(t,c,a[0],"min");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const QG={kernelName:$u,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=In+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,JG=Fe({opSnippet:ZG}),eH={kernelName:yi,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH=In+"return log(x + sqrt(x * x + 1.0));",nH=Fe({opSnippet:tH}),sH={kernelName:bi,backendName:"webgl",kernelFunc:nH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=In+`
  return atan(x);
`,oH=Fe({opSnippet:rH}),aH={kernelName:xi,backendName:"webgl",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=fy+`
  return atan(a, b);
`,cH=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+po+`
  return result;
`,lH=Ct({opSnippet:iH,packedOpSnippet:cH}),uH={kernelName:vi,backendName:"webgl",kernelFunc:lH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH=In+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,pH=Fe({opSnippet:dH}),fH={kernelName:wi,backendName:"webgl",kernelFunc:pH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class di{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(g||(b="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${c});
        const ivec2 pads = ivec2(${f}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${E} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?m:y:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");const $=Math.floor(a/4)*4,C=a%4,S=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${f}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${$}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${$};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${x});
      }
    `}}class my{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,c=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,f=e.effectiveFilterDepth,h=e.effectiveFilterHeight,g=e.effectiveFilterWidth,m=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let x="0.0";if(v||(x="-1.0 / 1e-20"),s){const A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${c}, ${l});
        const ivec3 pads = ivec3(${m}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const S=Math.floor(a/4)*4,E=a%4,R=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${c}, ${l});
      const ivec3 pads = ivec3(${m}, ${y}, ${b});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${S};
            if (${E===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${E===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${E===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Fc(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;T(Et(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=En(r.shape,o,a,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&Ue(u.inShape,u.outShape))return rn({inputs:{x:r},backend:t});const d=new di(u,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const mH={kernelName:Cu,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s,u=[1,1,1],d=ks(r.shape,o,a,u,i,c,l),p=new my(d,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}const yH={kernelName:Nu,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class xH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,h=d-1-e.padInfo.front,g=p-1-e.padInfo.top,m=f-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${g}, ${m});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,d=[1,1,1],p=ks(a.shape,i,c,d,l,u),f=new xH(p);return t.runWebGLProgram(f,[r],a.dtype)}const vH={kernelName:am,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;Fc([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=En(a.shape,i,c,1,l),d=new bH(u);return t.runWebGLProgram(d,[r],a.dtype)}const CH={kernelName:om,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;return Xl({a:r,b:o,transposeA:a,transposeB:i,backend:t})}const TH={kernelName:Tu,backendName:"webgl",kernelFunc:NH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e,t,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Re(e,t),Re(e,s);let i="0.0";r!=null&&(Re(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";o!=null&&(Re(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EH{constructor(e,t,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Re(e,t),Re(e,s);let i="vec4(0.0)";r!=null&&(Re(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";o!=null&&(Re(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;T(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const l=[s,r,o];let u=null;a!=null&&(u=a.shape,l.push(a));let d=null;i!=null&&(d=i.shape,l.push(i));const p=P().getBool("WEBGL_PACK_NORMALIZATION")?new EH(s.shape,r.shape,o.shape,u,d,c):new SH(s.shape,r.shape,o.shape,u,d,c);return e.runWebGLProgram(p,l,l[0].dtype)},IH={kernelName:Ju,backendName:"webgl",kernelFunc:_H};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=AH(this.rank);let r;const o=e.map((a,i)=>`sourceLoc.${dh[i]} = start[${i}] + coords.${dh[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const dh=["x","y","z","w","u","v"];function AH(n){if(n===1)return"sourceLoc";if(n<=6)return dh.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ge(this.rank),s=Ot("coords",this.rank),r=Ot("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=Ig(e,we(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const c=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,c+1),o}function xa(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s,[i,c]=kg(r,o,a);if(Sg(r,i,c),G(c)===0)return t.makeTensorInfo(c,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),p=TU(d.values,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,p)}const{isPacked:l}=t.texData.get(r.dataId),u=_g(r.shape,i,c);if(l||!u){const d=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RH(c):new kH(c),p=[i];return t.runWebGLProgram(d,[r],r.dtype,p)}return t.uploadToGPU(r.dataId),OH(r,i,c,t)}const DH={kernelName:Vd,backendName:"webgl",kernelFunc:xa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;T(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,v)=>b*v),c=kc(r.shape,o,i),l=Ac(c.length,o.length),u=Rc(r.shape,o,i),d=Fg(a,o.length),p=Pg(u,a,o.length),f=[],h=ce({inputs:{x:r},backend:t,attrs:{shape:c}}),g=Ft({inputs:{x:h},backend:t,attrs:{perm:l}}),m=ce({inputs:{x:g},backend:t,attrs:{shape:u}}),y=xa({inputs:{x:m},backend:t,attrs:{begin:d,size:p}});return f.push(h),f.push(g),f.push(m),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},PH={kernelName:Su,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.readSync(r.dataId),c=t.readSync(o.dataId),l=TN(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}const VH={kernelName:Eu,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,BH=`
  return float(int(a.r) & int(b.r));
`;function WH(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=P().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||a===1){const c=t.texData.get(s.dataId).values,l=t.texData.get(r.dataId).values,[u,d]=Xz(s.shape,r.shape,c,l,s.dtype),p=t.makeTensorInfo(d,s.dtype),f=t.texData.get(p.dataId);return f.values=u,p}let i;return o?i=new ya(MH,s.shape,r.shape,!1):i=new Zr(BH,s.shape,r.shape),t.runWebGLProgram(i,[s,r],s.dtype)}const zH={kernelName:$i,backendName:"webgl",kernelFunc:WH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),a=t.readSync(r.dataId),i=Re(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const GH={kernelName:_u,backendName:"webgl",kernelFunc:UH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH="return float(a != b);",MN=Ct({opSnippet:HH,cpuKernelImpl:gU,dtype:"bool"}),jH={kernelName:Ji,backendName:"webgl",kernelFunc:MN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return rn({inputs:{x:r.complexTensorInfos.real},backend:t})}const KH={kernelName:Id,backendName:"webgl",kernelFunc:Lc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH="return float(int(x));";function XH(n,e){const t=new Qn(n.shape,qH),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ph(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return rn({inputs:{x:r},backend:t});const a=tr(r.shape),i=ph({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=mr({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),c}if(r.dtype==="complex64"){const a=Lc({inputs:{input:r},backend:t}),i=ph({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!tm(r.dtype,o)){const a=rn({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const a=t.texData.get(r.dataId).values,[i,c,l]=Yz(a,r.shape,r.dtype,o);return t.makeTensorInfo(i,c,l)}if(o==="int32")return XH(r,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",ht("bool",1)),c=MN({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const YH={kernelName:Ci,backendName:"webgl",kernelFunc:ph};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx="return ceil(x);",QH=Fe({opSnippet:rx,packedOpSnippet:rx,cpuKernelImpl:Qz}),ZH={kernelName:Ni,backendName:"webgl",kernelFunc:QH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JH{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ej{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s;let i;P().getBool("WEBGL_PACK_CLIP")?i=new ej(r.shape):i=new JH(r.shape);const c=[[o],[a]];return t.runWebGLProgram(i,[r],r.dtype,c)}const nj={kernelName:Ti,backendName:"webgl",kernelFunc:tj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sj{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function rj(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new sj(s.shape),a=[ox(s,r.complexTensorInfos.real),ox(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const oj={kernelName:ku,backendName:"webgl",kernelFunc:rj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aj{constructor(e){this.outputShape=[],this.outputShape=Jn(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ij{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Jn(e,t);const s=this.outputShape,r=s.length,o=Ge(r),a=Ot("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((g,m)=>`T${m}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let g=1;g<c.length;g++)c[g]=c[g-1]+e[g][t];const l=i[t],u=i.slice(-2),d=i.join();let p=`if (${l} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let g=1;g<c.length;g++){const m=c[g-1];p+=`
        if (${l} < ${c[g]}  && ${l} >= ${c[g-1]}) {
          return getChannel(
            getT${g}(${il(i,l,m)}),
            vec2(${il(u,l,m)}));
        }`}const f=c.length,h=c[c.length-1];p+=`
        return getChannel(
          getT${f}(${il(i,l,h)}),
          vec2(${il(u,l,h)}));`,this.userCode=`
      float getValue(${i.map(g=>"int "+g)}) {
        ${p}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function il(n,e,t){const s=n.indexOf(e);return n.map((o,a)=>a===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return rn({inputs:{x:r.complexTensorInfos.imag},backend:t})}const cj={kernelName:sd,backendName:"webgl",kernelFunc:Fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(b=>Lc({inputs:{input:b},backend:t})),h=n.map(b=>Fp({inputs:{input:b},backend:t})),g=Pa(f,e,t),m=Pa(h,e,t),y=mr({inputs:{real:g,imag:m},backend:t});return f.forEach(b=>t.disposeIntermediateTensorInfo(b)),h.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(x=>{const C=[-1,G(x.shape.slice(e))];return ce({inputs:{x},backend:t,attrs:{shape:C}})}),h=f.map(x=>({vals:t.readSync(x.dataId),shape:x.shape})),g=Jn(f.map(x=>x.shape),1),m=f[0].shape[0]===1,y=Zz(h,g,s,m),b=Jn(n.map(x=>x.shape),e),v=t.makeTensorInfo(b,s,y);return f.forEach(x=>t.disposeIntermediateTensorInfo(x)),v}const o=n.filter(f=>G(f.shape)>0),a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=a?new Qn(n[0].shape,Ws):new Hs(n[0].shape,Ws);return t.runWebGLProgram(f,n,s)}const i=P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const f=[];for(let g=0;g<o.length;g+=i){const m=o.slice(g,g+i);f.push(Pa(m,e,t))}const h=Pa(f,e,t);for(const g of f)t.disposeIntermediateTensorInfo(g);return h}if(a){const f=new ij(o.map(h=>h.shape),e);return t.runWebGLProgram(f,o,s)}const{tensors2D:c,outShape:l}=lj(o,e,t),u=new aj(c.map(f=>f.shape)),d=t.runWebGLProgram(u,c,s);c.forEach(f=>t.disposeIntermediateTensorInfo(f));const p=ce({inputs:{x:d},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(d),p}function lj(n,e,t){const s=Jn(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ce({inputs:{x:o},attrs:{shape:[-1,G(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Pe(r,e[0].shape)[0],a=e.map(l=>l.shape);Rg(a,o);const i=Jn(e.map(l=>l.shape),o);if(G(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(l=>G(l.shape)>0);return c.length===1?rn({inputs:{x:c[0]},backend:t}):Pa(c,o,t)}const uj={kernelName:Au,backendName:"webgl",kernelFunc:BN};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WN{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,m=e.dataFormat==="channelsLast",y=m?1:2,b=m?2:3,v=m?3:1;let x="",$="";s&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`
          float activation(float x) {
            ${s}
          }
        `,$="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${c}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${$}
        setOutput(result);
      }
    `}}class dj{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,f=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zN{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)p+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;p+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)p+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(d+1)/2;m++){const y=m*2;if(p+=`
           xC = xCCorner + ${y*c};
           `,i===1){if(y<u&&(a%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,c===1&&y>0?p+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<u)){const b=a%2===0?mu(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,c>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:p+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?p+=`
                     xC${y+1} = xTexelC${y};
                     `:p+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<u&&(a%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<u&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<u&&(p+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<u&&(p+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<u&&(p+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let f="",h="";s&&(r?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,h="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${h}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pj{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);const{dataFormat:s}=t,r=Pt(),o=s==="channelsLast",a=o?1:2,i=o?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function UN({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const c=n.shape,l=s.texData.get(n.dataId),u=t.inChannels,d=c[0]*c[1]*c[2],p=t.outChannels,f=t.dataFormat==="channelsLast",h=!1,g=!1;let m;const y=[];if(o!=null){const x=Yl(o.shape,f);x!=null&&(o=ce({inputs:{x:o},backend:s,attrs:{shape:x}}),y.push(o))}if(r!=null){const x=Yl(r.shape,f);x!=null&&(r=ce({inputs:{x:r},backend:s,attrs:{shape:x}}),y.push(r))}if(!((d===1||p===1)&&u>FN)&&l.isPacked&&f&&l.texture!=null&&c[2]%2!==0&&Ue(l.shape.slice(-3),c.slice(-3))){const x=c[0]*c[1]*(c[2]+1),$={dataId:n.dataId,shape:[1,x,t.inChannels],dtype:n.dtype},C=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,T(ql(l.shape,$.shape),()=>`packed reshape ${l.shape} to ${$.shape} isn't free`);const S=ce({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(S);const E=Xl({a:$,b:S,backend:s,transposeA:h,transposeB:g,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),R=s.texData.get(E.dataId);T(R.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=C,R.shape=t.outShape,m=rn({inputs:{x:E},backend:s}),m.shape=t.outShape,y.push(E)}else{const x=t.outHeight*t.outWidth,$=ce({inputs:{x:n},backend:s,attrs:{shape:f?[t.batchSize,x,t.inChannels]:[t.batchSize,t.inChannels,x]}}),C=ce({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),S=Xl({a:f?$:C,b:f?C:$,transposeA:!f,transposeB:g,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});m=ce({inputs:{x:S},backend:s,attrs:{shape:t.outShape}}),y.push($),y.push(C),y.push(S)}for(const x of y)s.disposeIntermediateTensorInfo(x);return m}function GN({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:c,filterHeight:l,inChannels:u,outWidth:d,outHeight:p,dataFormat:f}=t,h=f==="channelsLast",g=c*l*u,m=p*d,y=[t.batchSize,g,m],b=!0,v=!1,x=[];if(o!=null){const M=Yl(o.shape,h);M!=null&&(o=ce({inputs:{x:o},backend:s,attrs:{shape:M}}),x.push(o))}if(r!=null){const M=Yl(r.shape,h);M!=null&&(r=ce({inputs:{x:r},backend:s,attrs:{shape:M}}),x.push(r))}const $=ce({inputs:{x:e},backend:s,attrs:{shape:[1,g,G(e.shape)/g]}});x.push($);const C=new pj(y,t),S=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=s.runWebGLProgram(C,[n],"float32",S),R=ce({inputs:{x:E},backend:s,attrs:{shape:y}});x.push(E),x.push(R);const A=r!=null,D=o!=null,L=i==="leakyrelu",F=i?ui(i,!0):null,B=new DN(h?R.shape:$.shape,h?$.shape:R.shape,h?[t.batchSize,m,t.outChannels]:[t.batchSize,t.outChannels,m],b,v,A,F,D,L),W=h?[R,$]:[$,R];if(r&&W.push(r),D&&W.push(o),L){const M=s.makeTensorInfo([],"float32",Is(a,"float32"));W.push(M),x.push(M)}const V=s.runWebGLProgram(B,W,"float32"),z=ce({inputs:{x:V},backend:s,attrs:{shape:t.outShape}});x.push(V);for(const M of x)s.disposeIntermediateTensorInfo(M);return z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s,d=As(c),p=mt(r.shape,o.shape,a,l,i,u,!1,d);let f;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))f=UN({x:r,filter:o,convInfo:p,backend:t});else if(p.strideWidth<=2&&d==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){const g=new zN(p),m=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=t.runWebGLProgram(g,[r,o],"float32",m)}else if(P().getBool("WEBGL_CONV_IM2COL"))f=GN({x:r,filter:o,convInfo:p,backend:t});else{const g=new WN(p);f=t.runWebGLProgram(g,[r,o],"float32")}const h=ce({inputs:{x:f},backend:t,attrs:{shape:p.outShape}});return t.disposeIntermediateTensorInfo(f),h}const hj={kernelName:Ru,backendName:"webgl",kernelFunc:fj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class gj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,c=s-1-e.padInfo.left,l=a?1:2,u=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class bj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=t-1-e.padInfo.front,l=s-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s,d=As(c),p=mt(r.shape,u,a,1,i,l,!1,d),f=new mj(p);return t.runWebGLProgram(f,[r,o],"float32")}const wj={kernelName:Ou,backendName:"webgl",kernelFunc:xj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vj{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=_t(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s,d=As(l),p=mt(a,o.shape,i,1,c,u,!1,d);if(P().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const f=[[p.strideHeight,p.strideWidth]],h=new vj(p);return t.runWebGLProgram(h,[r,o],"float32",f)}else{const f=new gj(p);return t.runWebGLProgram(f,[r,o],"float32")}}const Cj={kernelName:Du,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,l=ur(r.shape,o.shape,a,c,i),u=new dj(l);return t.runWebGLProgram(u,[r,o],"float32")}const Tj={kernelName:Fu,backendName:"webgl",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s,l=ur(r.shape,c,a,1,i),u=new yj(l);return t.runWebGLProgram(u,[r,o],"float32")}const Ej={kernelName:im,backendName:"webgl",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s,l=ur(c,o.shape,i,1,a),u=new bj(l);return t.runWebGLProgram(u,[r,o],"float32")}const Ij={kernelName:Pu,backendName:"webgl",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=ba+`
  return cos(x);
`,Aj=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${po}
  return result;
`,Rj=Fe({opSnippet:kj,packedOpSnippet:Aj}),Oj={kernelName:Si,backendName:"webgl",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Fj=Fe({opSnippet:Dj}),Pj={kernelName:Ei,backendName:"webgl",kernelFunc:Fj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lj{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,c,l]=e,[u]=t,[d,p]=s;this.outputShape=[u,d,p,l];const f=r==="bilinear"?1:0,[h,g]=[`${i-1}.0`,`${c-1}.0`],[m,y,b]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[v,x,$]=p>1?[`${(c-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${x};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${$};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:l}=s,u=new Lj(r.shape,o.shape,i,c,l);return t.runWebGLProgram(u,[r,o,a],"float32")},Mj={kernelName:Mu,backendName:"webgl",kernelFunc:Vj};var pi;(function(n){n.Prod="*",n.Sum="+"})(pi||(pi={}));class ax{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===pi.Prod?"1.0":"0.0",i=s?a:`getX(${ix(o,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let l="",u="";s?(l=r?`end != ${c-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${c}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ge(o)} coords = getOutputCoords();
        int end = ${cx(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${cx(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${ix(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ix(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function cx(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,e,t,s,r,o){const a=e.shape.length,i=at([s],a);let c=e;i!=null&&(c=Ft({inputs:{x:e},backend:t,attrs:{perm:i}}));const l=it(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=c.shape[l];let d=rn({inputs:{x:c},backend:t});for(let p=0;p<=Math.ceil(Math.log2(u))-1;p++){const f=new ax(n,c.shape,!1,o),h=[[p]],g=d;d=t.runWebGLProgram(f,[d],d.dtype,h),t.disposeIntermediateTensorInfo(g)}if(r){const p=new ax(n,c.shape,r,o),f=d;d=t.runWebGLProgram(p,[d],d.dtype),t.disposeIntermediateTensorInfo(f)}if(i!=null){const p=Tc(i),f=Ft({inputs:{x:d},backend:t,attrs:{perm:p}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(c),f}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return HN(pi.Prod,r,t,o,a,i)}const Wj={kernelName:Lu,backendName:"webgl",kernelFunc:Bj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return HN(pi.Sum,r,t,o,a,i)}const Uj={kernelName:Vu,backendName:"webgl",kernelFunc:zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.readSync(r.dataId),l=t.readSync(o.dataId),u=TN(c,l,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),u=qz(c,l,a,i);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Hj={kernelName:Bu,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jj{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s,i=r.shape[0],c=a==="NHWC"?r.shape[1]:r.shape[2],l=a==="NHWC"?r.shape[2]:r.shape[3],u=a==="NHWC"?r.shape[3]:r.shape[1],d=c*o,p=l*o,f=u/(o*o),h=a==="NHWC"?[i,d,p,f]:[i,f,d,p],g=new jj(h,o,a);return t.runWebGLProgram(g,[r],r.dtype)}const qj={kernelName:Wu,backendName:"webgl",kernelFunc:Kj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jN{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,c=e.outChannels/e.inChannels;let l="",u="";s&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:l=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KN{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)f+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let y=0;y<d;y++)f+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(p+1)/2;y++){const b=y*2;if(f+=`
          xC = xCCorner + ${b*l};
          `,c===1){if(b<d&&(i%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,l===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<d)){const v=i%2===0?mu(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,l>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):v===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<d&&(i%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<d&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<d&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<d&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<d&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let h="",g="";s&&(r?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:h=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:l}=s;let u=c;u==null&&(u=[1,1]),T(Et(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=mt(r.shape,o.shape,a,u,i,l,!0);let p;P().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new KN(d):p=new jN(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(p,[r,o],"float32",f)}const Yj={kernelName:zu,backendName:"webgl",kernelFunc:Xj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Zj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s,d=mt(r.shape,u,a,i,c,l,!0),p=new Qj(d);return t.runWebGLProgram(p,[r,o],"float32")}const eK={kernelName:Uu,backendName:"webgl",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s,d=mt(u,o.shape,a,i,c,l,!0),p=new Zj(d);return t.runWebGLProgram(p,[r,o],"float32")}const nK={kernelName:Gu,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=G(s.shape),a=ce({inputs:{x:s},backend:t,attrs:{shape:[o]}}),i=new sK(o),c=t.runWebGLProgram(i,[a],a.dtype),l=ce({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}const oK={kernelName:Hu,backendName:"webgl",kernelFunc:rK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:c,dilationHeight:l,dilationWidth:u}=e,{top:d,left:p}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,l=$c(r.shape,o.shape,a,i,"NHWC",c);let u;const d=new aK(l);u=t.runWebGLProgram(d,[r,o],"float32");const p=ce({inputs:{x:u},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(u),p}const cK={kernelName:ju,backendName:"webgl",kernelFunc:iK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:c}=jg(r,o.length);qg(a.length,c,o);const{path:l,steps:u}=Xg(i,c),d=u.length;let p=null,f=a.length;const h=[];for(let g=0;g<d;++g){for(const m of u[g]){const{permutationIndices:y,expandDims:b}=Kg(f,c[m]);let v;Yg(y)?v=o[m]:(v=Ft({inputs:{x:o[m]},backend:t,attrs:{perm:y}}),h.push(v));const x=v.shape.slice();for(let $=0;$<b.length;++$)x.splice(b[$],0,1);Ue(v.shape,x)||(v=ce({inputs:{x:v},backend:t,attrs:{shape:x}}),h.push(v)),p===null?p=v:(p=hy({inputs:{a:v,b:p},backend:t}),h.push(p))}g<d-1&&(l[g]>=0&&(p=Dp({inputs:{x:p},backend:t,attrs:{axis:l[g]-(a.length-f),keepDims:!1}}),h.push(p)),f--)}for(const g of h)g!==p&&t.disposeIntermediateTensorInfo(g);return p}const uK={kernelName:qu,backendName:"webgl",kernelFunc:lK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK="return (x >= 0.0) ? x : (exp(x) - 1.0);",pK=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fK=Fe({opSnippet:dK,packedOpSnippet:pK}),hK={kernelName:Ii,backendName:"webgl",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK="return (b >= 0.0) ? a : a * (b + 1.0);",gK=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yK=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ya(gK,s.shape,r.shape):new Zr(mK,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},bK={kernelName:cm,backendName:"webgl",kernelFunc:yK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK=`
  return vec4(equal(a, b));
`,wK="return float(a == b);",vK=Ct({opSnippet:wK,packedOpSnippet:xK,dtype:"bool",cpuKernelImpl:Jz}),$K={kernelName:Ai,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Mg};
  float a1 = ${Bg};
  float a2 = ${Wg};
  float a3 = ${zg};
  float a4 = ${Ug};
  float a5 = ${Gg};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,NK=Fe({opSnippet:CK}),TK={kernelName:ki,backendName:"webgl",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=ba+`
  return exp(x);
`,EK=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qN=Fe({opSnippet:SK,packedOpSnippet:EK,cpuKernelImpl:eU,dtype:"float32"}),_K={kernelName:Ri,backendName:"webgl",kernelFunc:qN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fh(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(T(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+r+1),i.splice(c,0,1),ce({inputs:{x:o},backend:s,attrs:{shape:i}})}const IK={kernelName:Xu,backendName:"webgl",kernelFunc:fh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lx="return exp(x) - 1.0;",kK=Fe({opSnippet:lx,packedOpSnippet:lx,cpuKernelImpl:tU}),AK={kernelName:Oi,backendName:"webgl",kernelFunc:kK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ux{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,e,t){const s=t.texData.get(n.dataId),r=G(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=ce({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),c=i.shape,l=new ux("real",c,e),u=new ux("imag",c,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],p=t.runWebGLProgram(l,d,"float32"),f=t.runWebGLProgram(u,d,"float32"),h=mr({inputs:{real:p,imag:f},backend:t});t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f);const g=ce({inputs:{x:h},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(h),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n){const{inputs:e,backend:t}=n,{input:s}=e;return XN(s,!1,t)}const OK={kernelName:Yu,backendName:"webgl",kernelFunc:RK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DK{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||oo(r),o==="string"){const a=st(o,G(s));return a.fill(r),e.makeTensorInfo(s,o,a)}else{const a=new DK(s,r),i=[[r]];return e.runWebGLProgram(a,[],o,i)}}const FK={kernelName:Qu,backendName:"webgl",kernelFunc:Vc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PK{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK={kernelName:Zu,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new PK(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dx="return floor(x);",VK=Fe({opSnippet:dx,packedOpSnippet:dx,cpuKernelImpl:nU}),MK={kernelName:Di,backendName:"webgl",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BK=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,WK=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,zK=Ct({opSnippet:BK,packedOpSnippet:WK,dtype:"int32"}),UK={kernelName:Fi,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GK{constructor(e){this.variableNames=["A"];const t=Pt(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HK{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Pt(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:Dl,backendName:"webgl",kernelFunc:KK};let go,pf=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function KK(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[c,l]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],d=[l,c,o];if(i||a){const g=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(go==null||g!==pf)&&(pf=g,go=document.createElement("canvas").getContext("2d",{willReadFrequently:pf})),go.canvas.width=c,go.canvas.height=l,go.drawImage(r,0,0,c,l),r=go.canvas}const p=t.makeTensorInfo(u,"int32");t.texData.get(p.dataId).usage=dn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(p.dataId),r);const f=P().getBool("WEBGL_PACK")?new HK(d):new GK(d),h=t.runWebGLProgram(f,[p],"int32");return t.disposeData(p.dataId),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=s,g=As(u),m=mt(r.shape,o.shape,c,d,l,p,!1,g);let y;const b=[],v=a!=null,x=i!=null,$=f==="leakyrelu",C=()=>{const E=[r,o],R=(A,D)=>{if(D==="NCHW"&&A.shape.length===1&&A.shape[0]!==1){const L=ce({inputs:{x:A},backend:t,attrs:{shape:[A.shape[0],1,1]}});return b.push(L),L}return A};if(v&&E.push(R(a,u)),x&&E.push(R(i,u)),$){const A=t.makeTensorInfo([],"float32",Is(h,"float32"));E.push(A),b.push(A)}return E};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=UN({x:r,filter:o,convInfo:m,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:h});else if(m.strideWidth<=2&&g==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){const E=f?ui(f,!0):null,R=new zN(m,v,E,x,$),A=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],D=C();y=t.runWebGLProgram(R,D,"float32",A)}else if(P().getBool("WEBGL_CONV_IM2COL"))y=GN({x:r,filter:o,convInfo:m,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:h});else{const E=f?ui(f,!1):null,R=new WN(m,v,E,x,$),A=C();y=t.runWebGLProgram(R,A,"float32")}const S=ce({inputs:{x:y},backend:t,attrs:{shape:m.outShape}});return b.push(y),b.forEach(E=>t.disposeIntermediateTensorInfo(E)),S}const XK={kernelName:Xa,backendName:"webgl",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,h=[];let g=u;g==null&&(g=[1,1]),T(Et(c,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`);const m=mt(r.shape,o.shape,c,g,l,d,!0),y=P().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,b=p?ui(p,y):null,v=[r,o],x=a!=null,$=i!=null,C=p==="leakyrelu";if(x&&v.push(a),$&&v.push(i),C){const A=t.makeTensorInfo([],"float32",Is(f,"float32"));v.push(A),h.push(A)}let S;y?S=new KN(m,x,b,$,C):S=new jN(m,x,b,$,C);const E=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],R=t.runWebGLProgram(S,v,"float32",E);return h.forEach(A=>t.disposeIntermediateTensorInfo(A)),R}const QK={kernelName:Ya,backendName:"webgl",kernelFunc:YK};class ZK{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Ge(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,a=o[o.length-1],i=G(s.shape),[c,l,u,d]=Ep(s,r),p=ce({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=ce({inputs:{x:s},backend:t,attrs:{shape:[G(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),b=t.bufferSync(s),v=sU(y,b,s.dtype,l,a,u,d,s.shape,i);return t.makeTensorInfo(c,s.dtype,v.values)}const h=new ZK(a,d,[l,u],s.shape),g=t.runWebGLProgram(h,[f,p],f.dtype),m=ce({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),m}const eq={kernelName:td,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tq{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Ge(this.rank),r=nq(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function nq(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,c=Pe(a,r.shape)[0];if(P().get("DEBUG")){const b=t.readSync(o.dataId),v=r.shape[c];for(let x=0;x<b.length;++x){const $=b[x];T($<=v-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${v-1}]`)}}const l=Zg(r,o,c,i),u=G(o.shape),d=[],p=ce({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ce({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,u/l.batchSize]}});d.push(p),d.push(f);const h=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=t.bufferSync(f),v=t.bufferSync(p),x=rU(v,b,h);return d.forEach($=>t.disposeIntermediateTensorInfo($)),t.makeTensorInfo(l.outputShape,x.dtype,x.values)}const g=new tq(p.shape,h),m=t.runWebGLProgram(g,[p,f],p.dtype);d.push(m);const y=ce({inputs:{x:m},backend:t,attrs:{shape:l.outputShape}});return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const sq={kernelName:ed,backendName:"webgl",kernelFunc:YN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq="return float(a > b);",oq=`
  return vec4(greaterThan(a, b));
`,aq=Ct({opSnippet:rq,packedOpSnippet:oq,cpuKernelImpl:oU,dtype:"bool"}),iq={kernelName:Pi,backendName:"webgl",kernelFunc:aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq="return float(a >= b);",lq=`
  return vec4(greaterThanEqual(a, b));
`,uq=Ct({opSnippet:cq,packedOpSnippet:lq,dtype:"bool",cpuKernelImpl:aU}),dq={kernelName:Li,backendName:"webgl",kernelFunc:uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(n){const{inputs:e,backend:t}=n,{input:s}=e;return XN(s,!0,t)}const fq={kernelName:nd,backendName:"webgl",kernelFunc:pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq="return float(!isnan(x) && !isinf(x));",mq=Fe({opSnippet:hq,dtype:"bool"}),gq={kernelName:Mi,backendName:"webgl",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq="return float(isinf(x));",bq=Fe({opSnippet:yq,dtype:"bool"}),xq={kernelName:Bi,backendName:"webgl",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq="return float(isnan(x));",vq=Fe({opSnippet:wq,dtype:"bool"}),$q={kernelName:Wi,backendName:"webgl",kernelFunc:vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq="return float(a < b);",Nq=`
  return vec4(lessThan(a, b));
`,Tq=Ct({opSnippet:Cq,packedOpSnippet:Nq,cpuKernelImpl:iU,dtype:"bool"}),Sq={kernelName:zi,backendName:"webgl",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq="return float(a <= b);",_q=`
  return vec4(lessThanEqual(a, b));
`,Iq=Ct({opSnippet:Eq,packedOpSnippet:_q,cpuKernelImpl:cU,dtype:"bool"}),kq={kernelName:Ui,backendName:"webgl",kernelFunc:Iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=lU(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const Rq={kernelName:od,backendName:"webgl",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq=ba+`
  return x < 0.0 ? 0./0. : log(x);
`,Dq=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Fq=Fe({opSnippet:Oq,packedOpSnippet:Dq,cpuKernelImpl:uU}),Pq={kernelName:Gi,backendName:"webgl",kernelFunc:Fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=ba+`
  return log(1.0 + x);
`,Vq=Fe({opSnippet:Lq}),Mq={kernelName:Hi,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq="return float(a >= 1.0 && b >= 1.0);",Wq=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,zq=Ct({opSnippet:Bq,packedOpSnippet:Wq,dtype:"bool"}),Uq={kernelName:ji,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq="return float(!(x >= 1.0));",Hq=Fe({opSnippet:Gq}),jq={kernelName:Ki,backendName:"webgl",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq="return float(a >= 1.0 || b >= 1.0);",qq=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Xq=Ct({opSnippet:Kq,packedOpSnippet:qq,dtype:"bool"}),Yq={kernelName:qi,backendName:"webgl",kernelFunc:Xq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qq{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s,l=P().getBool("WEBGL_PACK_NORMALIZATION")?new Zq(r.shape,o,a,i,c):new Qq(r.shape,o,a,i,c);return t.runWebGLProgram(l,[r],r.dtype)},e6={kernelName:ad,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t6{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=s,d=new t6(r.shape,i,c,l,u);return t.runWebGLProgram(d,[r,o,a],r.dtype)},s6={kernelName:lm,backendName:"webgl",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(n,e,t,s){const r=G(e),a=G(n.shape)/r,i=ce({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=fo(i,n.dtype,"max",s),l=ce({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,c=Pe(o,r.shape);let l=c;const u=at(l,i),d=u!=null,p=t.shouldExecuteOnCPU([r]);let f=r;if(d){if(p){const v=t.texData.get(f.dataId).values,x=new Array(i);for(let S=0;S<x.length;S++)x[S]=r.shape[u[S]];const $=py(v,r.shape,r.dtype,u,x);f=t.makeTensorInfo(x,r.dtype);const C=t.texData.get(f.dataId);C.values=$}else f=Op(r,u,t);l=it(l.length,i)}$t("max",l,i);const[h,g]=vt(f.shape,l);let m=h;a&&(m=ut(h,c));let y;if(p){const v=t.texData.get(f.dataId).values,x=dU(v,G(g),m,r.dtype);y=t.makeTensorInfo(m,r.dtype);const $=t.texData.get(y.dataId);$.values=x}else y=r6(f,g,m,t);return d&&t.disposeIntermediateTensorInfo(f),y}const o6={kernelName:id,backendName:"webgl",kernelFunc:QN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6=fy+`
  return max(a, b);
`,i6=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+po+`
  return result;
`,c6=Ct({opSnippet:a6,packedOpSnippet:i6,cpuKernelImpl:pU}),l6={kernelName:Xi,backendName:"webgl",kernelFunc:c6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Fc(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;T(Et(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=En(r.shape,o,a,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&Ue(u.inShape,u.outShape))return rn({inputs:{x:r},backend:t});const d=new di(u,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const d6={kernelName:cd,backendName:"webgl",kernelFunc:u6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dataFormat:c,dimRoundingMode:l}=s,u=[1,1,1],d=ks(r.shape,o,a,u,i,l,c),p=new my(d,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}const f6={kernelName:ld,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h6{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,c=a-1-e.padInfo.left,l=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class m6{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=c-1-e.padInfo.front,p=l-1-e.padInfo.top,f=u-1-e.padInfo.left,h=c*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,d=[1,1,1],p=ks(a.shape,i,c,d,l,u),f=new my(p,"max",!0),h=t.runWebGLProgram(f,[a],a.dtype),g=new m6(p),m=t.runWebGLProgram(g,[r,h],a.dtype);return t.disposeIntermediateTensorInfo(h),m}const y6={kernelName:dm,backendName:"webgl",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;Fc([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=s,p=En(i.shape,c,l,1,u,d),f=!0,h=new di(p,"max",f),g=t.runWebGLProgram(h,[i],i.dtype),m=new h6(p),y=t.runWebGLProgram(m,[r,g],i.dtype);return t.disposeIntermediateTensorInfo(g),y}const x6={kernelName:um,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(n,e,t,s){let r=new di(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new di(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:ud,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;T(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];T(Et(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const u=En(s.shape,r,o,l,a),[d,p]=w6(s,i,u,c);return[d,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(n,e,t,s){const r=G(e),a=G(n.shape)/r,i=ce({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=fo(i,"float32","mean",s),l=ce({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:dd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,a=t,i=s.shape.length,c=Pe(o,s.shape);let l=c;const u=at(l,i),d=u!=null,p=a.shouldExecuteOnCPU([s]),f=[];let h=s;if(d){if(p){const x=a.texData.get(h.dataId).values,$=new Array(i);for(let E=0;E<$.length;E++)$[E]=s.shape[u[E]];const C=py(x,s.shape,s.dtype,u,$);h=a.makeTensorInfo($,s.dtype);const S=a.texData.get(h.dataId);S.values=C}else h=Op(s,u,a);f.push(h),l=it(l.length,i)}$t("sum",l,i);const[g,m]=vt(h.shape,l);let y=g;r&&(y=ut(g,c));const b=$6(h,m,y,a);for(const v of f)a.disposeIntermediateTensorInfo(v);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Pe(o,r.shape);let l=c;const u=at(l,i);let d=r;u!=null&&(d=Ft({inputs:{x:r},backend:t,attrs:{perm:u}}),l=it(l.length,r.shape.length)),$t("min",l,i);const[p,f]=vt(d.shape,l),h=G(f),g=ce({inputs:{x:d},backend:t,attrs:{shape:[-1,h]}}),m=fo(g,g.dtype,"min",t);let y;if(a){const b=ut(p,c);y=ce({inputs:{x:m},backend:t,attrs:{shape:b}})}else y=ce({inputs:{x:m},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(d),y}const T6={kernelName:pd,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=fy+`
  return min(a, b);
`,E6=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+po+`
  return result;
`,_6=Ct({opSnippet:S6,packedOpSnippet:E6,cpuKernelImpl:fU}),I6={kernelName:Yi,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k6{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);const r=e.length,o=Ge(r),a=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A6{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);const r=e.length,o=Ge(r),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),c=Ot("rc",r),l=Ot("source",r),u=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,p=s==="reflect"?0:1;let f="";if(r===1){const h=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${c[r-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{const h=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${c[r-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${c[r-2]} += 1;
        if(${c[r-2]} < ${this.outputShape[r-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${c[r-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new A6(s.shape,r,o):new k6(s.shape,r,o);return e.runWebGLProgram(a,[s],s.dtype)},O6={kernelName:fd,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=`if (b == 0.0) return NAN;
  return mod(a, b);`,F6=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+po+`
  return result;
`,P6=Ct({opSnippet:D6,packedOpSnippet:F6}),L6={kernelName:Qi,backendName:"webgl",kernelFunc:P6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V6{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6=`
if (a == b) {
  return 1.0;
};
return a / b;`,B6=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,ZN=Ct({opSnippet:M6,packedOpSnippet:B6,checkOutOfBounds:!0}),W6={kernelName:_i,backendName:"webgl",kernelFunc:ZN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const px="return a - b;",JN=Ct({opSnippet:px,packedOpSnippet:px,supportsComplex:!0,cpuKernelImpl:DU}),z6={kernelName:mc,backendName:"webgl",kernelFunc:JN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=Pe([o],r.shape),i=QN({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),c=ut(i.shape,a),l=ce({inputs:{x:i},backend:t,attrs:{shape:c}}),u=JN({inputs:{a:r,b:l},backend:t}),d=qN({inputs:{x:u},backend:t}),p=Dp({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),f=ce({inputs:{x:p},backend:t,attrs:{shape:c}}),h=ZN({inputs:{a:d,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),h}const U6={kernelName:zd,backendName:"webgl",kernelFunc:eT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s,c=i?r:eT({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new V6(l,u,o),p=[[a]],f=t.runWebGLProgram(d,[c],"int32",p);return i||t.disposeIntermediateTensorInfo(c),f}const H6={kernelName:hd,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6=In+`
  return -x;
`,K6=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function q6(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[a,i]=mU(o.values,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,a)}let r;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Hs(s.shape,K6):r=new Qn(s.shape,j6),t.runWebGLProgram(r,[s],s.dtype)}const X6={kernelName:md,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6=Cp;function Q6(n){ln("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s,l=t.readSync(r.dataId),u=t.readSync(o.dataId),{selectedIndices:d}=Y6(l,u,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Z6={kernelName:gd,backendName:"webgl",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6=Np;function eX(n){ln("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s,u=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=J6(u,d,a,i,c,l);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const tX={kernelName:yd,backendName:"webgl",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX=Tp;function sX(n){ln("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s,u=t.readSync(r.dataId),d=t.readSync(o.dataId),p=a,f=i,h=c,g=l,{selectedIndices:m,selectedScores:y}=nX(u,d,p,f,h,g);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const rX={kernelName:bd,backendName:"webgl",kernelFunc:sX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oX{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aX=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:c}=s,l=G(r.shape),u=new oX(l,a,i,c),d=ce({inputs:{x:r},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(u,[d],o);t.disposeIntermediateTensorInfo(d);const f=[...r.shape,a],h=ce({inputs:{x:p},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(p),h},iX={kernelName:wd,backendName:"webgl",kernelFunc:aX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Lc({inputs:{input:s},backend:t}),o=Ql({inputs:{x:r},backend:t}),a=Fp({inputs:{input:s},backend:t}),i=Ql({inputs:{x:a},backend:t}),c=mr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Vc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const cX={kernelName:sp,backendName:"webgl",kernelFunc:Ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Lc({inputs:{input:s},backend:t}),o=tT({inputs:{x:r},backend:t}),a=Fp({inputs:{input:s},backend:t}),i=Ql({inputs:{x:a},backend:t}),c=mr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Vc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const lX={kernelName:xd,backendName:"webgl",kernelFunc:tT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return fh({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(u=>{wt(o,u.shape,"All tensors passed to stack must have matching shapes"),T(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(u=>{const d=fh({inputs:{input:u},backend:t,attrs:{dim:r}});return i.push(d),d}),l=BN({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const dX={kernelName:vd,backendName:"webgl",kernelFunc:uX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pX{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);const r=e.length,o=Ge(r),a=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fX{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,m)=>g[0]+e[m]+g[1]);const r=e.length,o=Ge(r),a=t.map(g=>g[0]).join(","),i=t.map((g,m)=>g[0]+e[m]).join(","),c=Ot("rc",r),l=Ot("source",r),u=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${o} rc = outputLoc;`,`${c[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${c[r-2]} += 1;
       if(${c[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${c[r-1]} += 1;
         if(${u}) {`],f=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let g=0,m=r===1?2:4;g<m;g++)h+=`
        ${p[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${g}] = getChannel(getX(${l.join()}), ${d});
        }
      `;h+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;if(G(r.shape)===0){const l=o.map((u,d)=>u[0]+r.shape[d]+u[1]);return Vc({backend:t,attrs:{shape:l,value:a,dtype:r.dtype}})}const i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fX(r.shape,o,a):new pX(r.shape,o,a),c=[[a]];return t.runWebGLProgram(i,[r],r.dtype,c)},hX={kernelName:$d,backendName:"webgl",kernelFunc:nT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,gX=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+po+`
  return result;
`,yX=Ct({opSnippet:mX,packedOpSnippet:gX}),bX={kernelName:ec,backendName:"webgl",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=[],l=Pe(o,r.shape);let u=l;const d=at(u,i);let p=r;d!=null&&(p=Ft({inputs:{x:r},backend:t,attrs:{perm:d}}),u=it(u.length,i),c.push(p)),$t("prod",u,i);let f;if(t.shouldExecuteOnCPU([p])){const h=t.texData.get(p.dataId).values,{outVals:g,outShape:m,outDtype:y}=yU(p.shape,p.dtype,h,u);f=t.makeTensorInfo(m,y,g)}else{const[h,g]=vt(p.shape,u),m=G(g),y=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,m]}}),b=ap(r.dtype),v=fo(y,b,"prod",t);f=ce({inputs:{x:v},backend:t,attrs:{shape:h}}),c.push(y),c.push(v)}if(a){c.push(f);const h=ut(f.shape,l);f=ce({inputs:{x:f},backend:t,attrs:{shape:h}})}return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}const wX={kernelName:Nd,backendName:"webgl",kernelFunc:xX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=s,c=r.map(y=>t.readSync(y.dataId)),l=r.map(y=>y.shape),u=t.readSync(o.dataId),d=t.readSync(a.dataId),[p,f,h]=bU(c,l,u,o.shape,o.dtype,d,a.shape,i),g=p.map(y=>t.makeTensorInfo([y.length],"int32",y)),m=t.makeTensorInfo(h,o.dtype,f);return g.concat([m])}const $X={kernelName:Td,backendName:"webgl",kernelFunc:vX};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,u]=xU(a,s.shape,s.dtype,i,r.shape,c,o.shape),d=t.makeTensorInfo([l.length],"int32",l),p=t.makeTensorInfo([u.length],s.dtype,u);return[d,p]}const NX={kernelName:Sd,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,l=t.readSync(r.dataId),u=t.readSync(o.dataId),d=t.readSync(a.dataId),p=i.map(m=>t.readSync(m.dataId)),f=i.map(m=>m.shape),[h,g]=wU(l,r.shape,u,o.shape,o.dtype,d,a.shape,p,f,c);return t.makeTensorInfo(h,o.dtype,g)}const SX={kernelName:Ed,backendName:"webgl",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:a}=t,i=vU(s,r,o,a);return e.makeTensorInfo([i.length],a,i)},EX={kernelName:_d,backendName:"webgl",kernelFunc:sT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X="return 1.0 / x;",IX=Fe({opSnippet:_X}),kX={kernelName:tc,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX=In+`
  return (x < 0.0) ? 0.0 : x;
`,RX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OX=Fe({opSnippet:AX,packedOpSnippet:RX}),DX={kernelName:nc,backendName:"webgl",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX=In+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,PX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LX=Fe({opSnippet:FX,packedOpSnippet:PX}),VX={kernelName:sc,backendName:"webgl",kernelFunc:LX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;o?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BX{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;o?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,l]=i,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BX(r.shape,c,l,o,a):new MX(r.shape,c,l,o,a);return t.runWebGLProgram(u,[r],"float32")}const zX={kernelName:Rd,backendName:"webgl",kernelFunc:WX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],l=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=c[0]/l[0],d=c[1]/l[1],p=1/u,f=1/d,h=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new UX(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const HX={kernelName:fm,backendName:"webgl",kernelFunc:GX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jX{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KX{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,l]=i,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KX(r.shape,c,l,o,a):new jX(r.shape,c,l,o,a);return t.runWebGLProgram(u,[r],r.dtype)}const XX={kernelName:Ad,backendName:"webgl",kernelFunc:qX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],l=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=c[0]/l[0],d=c[1]/l[1],p=1/u,f=1/d,h=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new YX(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const ZX={kernelName:pm,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JX{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,c)=>r(c)).join(","),a=Ge(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e5{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Ot("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=Ge(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(r.slice())};
          if(${o}){
            result.g = ${l(r.slice())};
          }
          if(${a}) {
            result.b = ${u(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(h){return p(h)}function l(h){return h[s-1]="("+h[s-1]+" + 1)",p(h)}function u(h){return h[s-2]="("+h[s-2]+" + 1)",p(h)}function d(h){return h[s-1]="("+h[s-1]+" + 1)",h[s-2]="("+h[s-2]+" + 1)",p(h)}function p(h){const g=e.map((b,v)=>f(v,h)),m=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${y}))`}function f(h,g){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${g[h]} - 1`:`${g[h]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,a=r.shape.length,i=Pe(o,r.shape);if(a===0)return rn({inputs:{x:r},backend:t});const c=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new e5(r.shape,i):new JX(r.shape,i);return t.runWebGLProgram(c,[r],r.dtype)}const n5={kernelName:Od,backendName:"webgl",kernelFunc:t5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s5{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:rp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=new s5(s.shape,o),[l,u]=Dg(a,s.shape[1],s.shape[2]),d=[[l,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(c,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,a5=Fe({opSnippet:o5}),i5={kernelName:rc,backendName:"webgl",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5="return inversesqrt(x);",l5=Fe({opSnippet:c5,cpuKernelImpl:$U}),u5={kernelName:oc,backendName:"webgl",kernelFunc:l5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gy{constructor(e,t,s,r,o,a,i=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=Ge(o.length),u=Ge(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const p=`getIndices(${d})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const h=`getUpdates(${f})`;let g="";c&&(g="coords[0], coords[1]");const m=`getDefaultValue(${g})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d5{constructor(e,t,s,r,o,a,i=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=Ge(o.length),u=Ge(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const p=`getIndices(${d})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const h=`getUpdates(${f})`;let g="";c&&(g="coords[0], coords[1]");const m=`getDefaultValue(${g})`,y=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=dr(o,r,a),p=[d/l,l];if(d===0)return t.makeTensorInfo(a,r.dtype);const f=ce({inputs:{x:r},backend:t,attrs:{shape:[c,i]}}),h=ce({inputs:{x:o},backend:t,attrs:{shape:[c,l]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let m;P().getBool("WEBGL_PACK")?m=new d5(c,i,f.shape.length,h.shape.length,u,p):m=new gy(c,i,f.shape.length,h.shape.length,u,p);const y=t.runWebGLProgram(m,[h,f,g],h.dtype),b=ce({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),b}const f5={kernelName:Dd,backendName:"webgl",kernelFunc:p5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h5{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=P().getNumber("WEBGL_VERSION")===2?o:a,c=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,i=new h5(r.shape[0],r.shape[1],o.shape[1],a),c=[[r.shape[1]]];return t.runWebGLProgram(i,[r,o],"int32",c)}const g5={kernelName:Pd,backendName:"webgl",kernelFunc:m5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y5{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&c.push(`${i[u]}`);r=c.join(),o=l.join()}const a=Ge(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,a=new y5(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,o],Ut(r.dtype,o.dtype))}const x5={kernelName:Ld,backendName:"webgl",kernelFunc:b5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Lg};
  float scale = ${Vg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,v5=Fe({opSnippet:w5}),$5={kernelName:ac,backendName:"webgl",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5=ba+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,N5=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,T5=Fe({opSnippet:C5,packedOpSnippet:N5,cpuKernelImpl:NU}),S5={kernelName:uc,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,_5=Fe({opSnippet:E5}),I5={kernelName:lc,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=ba+`
  return sin(x);
`,A5=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${po}
  return result;
`,R5=Fe({opSnippet:k5,packedOpSnippet:A5}),O5={kernelName:ic,backendName:"webgl",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,F5=Fe({opSnippet:D5}),P5={kernelName:cc,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,V5=Fe({opSnippet:L5}),M5={kernelName:dc,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;T(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),c=[[0,0]];c.push(...a);for(let y=1+o.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=nT({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),d=kc(u.shape,o,i,!1),p=Ac(d.length,o.length,!1),f=Rc(u.shape,o,i,!1),h=ce({inputs:{x:u},backend:t,attrs:{shape:d}}),g=Ft({inputs:{x:h},backend:t,attrs:{perm:p}}),m=ce({inputs:{x:g},backend:t,attrs:{shape:f}});return l.push(u),l.push(h),l.push(g),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),m},W5={kernelName:Bd,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(s.dataId),c=t.readSync(r.dataId),l=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[d,p,f,h,g]=SU(i,s.shape,s.dtype,c,r.dtype,l,u);return[t.makeTensorInfo(p,s.dtype,d),t.makeTensorInfo([p[0]],r.dtype,f),t.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(m=>Number(m)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const U5={kernelName:Ud,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(r.dataId)),i=t.readSync(s.dataId),c=Array.from(t.readSync(o.dataId)),[l,u,d]=EU(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(u,s.dtype,l),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const H5={kernelName:Gd,backendName:"webgl",kernelFunc:G5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,u]=EN(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(u,s.dtype,l)}const K5={kernelName:Hd,backendName:"webgl",kernelFunc:j5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[l,u]=EN(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(u,s.dtype,l)}const X5={kernelName:jd,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=dr(o,r,i),f=!1;if(o.dtype==="string"){const y=t.bufferSync(r),b=t.bufferSync(o),v=$s(t.readSync(a.dataId)[0]),x=CU(y,b,i,p,u,l,c,d,v,f);return t.makeTensorInfo(i,x.dtype,x.values)}const h=new gy(l,c,r.shape.length,o.shape.length,d,[p,1],f),g=t.runWebGLProgram(h,[o,r,a],o.dtype),m=ce({inputs:{x:g},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(g),m}const Q5={kernelName:Kd,backendName:"webgl",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Pe(a,r.shape)[0],c=Qg(r,o,i),l=r.shape.length,u=new Array(l).fill(0),d=r.shape.slice();return c.map(p=>{const f=[...d];f[i]=p;const h=xa({inputs:{x:r},backend:t,attrs:{begin:u,size:f}});return u[i]+=p,h})}const J5={kernelName:Wd,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fx="return sqrt(x);",e8=Fe({opSnippet:fx,packedOpSnippet:fx,cpuKernelImpl:_U}),t8={kernelName:pc,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8="return x * x;",s8=Fe({opSnippet:n8}),r8={kernelName:hm,backendName:"webgl",kernelFunc:s8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hx="return (a - b) * (a - b);",o8=Ct({opSnippet:hx,packedOpSnippet:hx}),a8={kernelName:fc,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),a=Ts(o),i=IU(a,"string",s);return t.makeTensorInfo(r.shape,"string",i)}const c8={kernelName:hc,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=In+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Qn(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const u8={kernelName:xc,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d8{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Ge(s.length),a=Ge(s.length);let i="";if(r===1)i="coords * strides + begin";else{let c=0;i=s.map((l,u)=>(c++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${c-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:h,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:v,strides:x}=Ag(r.shape,o,a,i,c,l,u,d,p);let $;if(g)$=ce({inputs:{x:r},backend:t,attrs:{shape:h}});else if(m||y){T(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=Eg(b,v,x),E=xa({inputs:{x:r},backend:t,attrs:{begin:b,size:S}});$=ce({inputs:{x:E},backend:t,attrs:{shape:h}}),t.disposeIntermediateTensorInfo(E)}else if(t.shouldExecuteOnCPU([r])){const E=t.readSync(r.dataId),R=Ee(r.shape,r.dtype,E),A=kU(f,R,x,b);$=t.makeTensorInfo(h,r.dtype,A.values)}else{const E=new d8(b,x,f);$=t.runWebGLProgram(E,[r],r.dtype)}const C=ce({inputs:{x:$},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo($),C}const f8={kernelName:qd,backendName:"webgl",kernelFunc:p8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:d}=e,p=t.readSync(u.dataId),f=t.readSync(d.dataId),[h,g]=AU(p,f,r,o,a,i,c,l);return[t.makeTensorInfo([h.length],"string",h),t.makeTensorInfo(d.shape,"int32",g)]}const m8={kernelName:Xd,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),c=t.readSync(a.dataId)[0],[l,u,d]=RU(i,c,r),p=u.length;return[t.makeTensorInfo([p,2],"int32",l),t.makeTensorInfo([p],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const y8={kernelName:Yd,backendName:"webgl",kernelFunc:g8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=OU(a,r);return t.makeTensorInfo(o.shape,"int32",i)}const x8={kernelName:Qd,backendName:"webgl",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8="return tan(x);",v8=Fe({opSnippet:w8}),$8={kernelName:gc,backendName:"webgl",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,N8=Fe({opSnippet:C8}),T8={kernelName:yc,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:a}=e,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=dr(a,o,r.shape),p=[d/l,l];if(d===0)return t.makeTensorInfo(r.shape,o.dtype);const f=ce({inputs:{x:o},backend:t,attrs:{shape:[c,i]}}),h=ce({inputs:{x:a},backend:t,attrs:{shape:[c,l]}}),g=ce({inputs:{x:r},backend:t,attrs:{shape:p}}),m=new gy(c,i,f.shape.length,h.shape.length,u,p,!1,!0),y=t.runWebGLProgram(m,[h,f,g],g.dtype),b=ce({inputs:{x:y},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),b}const E8={kernelName:Fd,backendName:"webgl",kernelFunc:S8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _8{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=Ge(this.rank),o=I8(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function I8(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const c=t.readSync(r.dataId),l=r.dtype==="string"?c.map(p=>$s(p)):c,u=Ee(r.shape,r.dtype,l),d=FU(u,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new _8(r.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const k8={kernelName:bc,backendName:"webgl",kernelFunc:rT};class A8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class R8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function mx(n){let e=1;for(;e<n;)e*=2;return e}function O8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s,i=P().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=P().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(t.shouldExecuteOnCPU([r])||u<i||o>c){const A=t.readSync(r.dataId),[D,L]=PU(A,l,r.dtype,o,a);return[t.makeTensorInfo(D.shape,D.dtype,D.values),t.makeTensorInfo(L.shape,L.dtype,L.values)]}if(o===0)return l[l.length-1]=0,[t.makeTensorInfo(l,r.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(u===1)return[r,Vc({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const d=t.texData.get(r.dataId),p=d!==null&&d.isPacked,f=p?t.unpackTensor(r):r,g=G(l)/u,m=ce({inputs:{x:f},attrs:{shape:[g,u]},backend:t});p&&Nr(t,f);const y=mx(o),b=mx(u);let v=null;const x=()=>v===null?[m,m]:[m,v],$=(A,D,L)=>{const F=x(),B=new A8(L),V=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[A],[D]],z=v;v=t.runWebGLProgram(B,F,"int32",V),Nr(t,z)};for(let A=1;A<y;A*=2){const D=A*2;for(let L=A;L>=1;L/=2)$(D,L,[g,b])}for(let A=b;A>y;A/=2){const D=x(),L=new R8([g,A/2]),B=[[u],[v===null?1:0],[y]],W=v;v=t.runWebGLProgram(L,D,"int32",B),Nr(t,W);const V=y/2,z=V*2;for(let M=V;M>=1;M/=2)$(z,M,v.shape)}let C=v;v=xa({inputs:{x:v},backend:t,attrs:{begin:0,size:[g,o]}}),Nr(t,C);let S=YN({inputs:{x:m,indices:v},backend:t,attrs:{axis:1,batchDims:1}});Nr(t,m);const E=l.slice(0,-1);E.push(o),C=v,v=ce({inputs:{x:v},attrs:{shape:E},backend:t}),Nr(t,C);const R=S;return S=ce({inputs:{x:S},attrs:{shape:E},backend:t}),Nr(t,R),[S,v]}const D8={kernelName:Zd,backendName:"webgl",kernelFunc:O8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F8{constructor(e,t,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let c;switch(r){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:l}=s,[u,d,p,f]=r.shape,[h,g]=l??[d,p],m=[u,h,g,f],y=new F8(d,p,a,i,c,m);return t.runWebGLProgram(y,[r,o],"float32")}const L8={kernelName:Jd,backendName:"webgl",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Fc(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:c,indices:l}=LU(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}const M8={kernelName:ep,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let g=0;g<i;g++)g!==o&&(l[u++]=a.shape[g]);const d=[],p=new Array(i).fill(0),f=a.shape.slice();f[o]=1;const h=new Array(c);for(let g=0;g<h.length;g++){p[o]=g;const m=xa({inputs:{x:a},backend:t,attrs:{begin:p,size:f}}),y=ce({inputs:{x:m},backend:t,attrs:{shape:l}});h[g]=y,d.push(m)}return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}const W8={kernelName:tp,backendName:"webgl",kernelFunc:B8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z8{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const c="0.0",l="sumValue",u=Math.floor(s/4)*4,d=s%4,p=`
        sumValue += dot(values, segFilter);
    `;let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let h="";o%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s,i=r.shape.length,c=[];let l=0;const u=at([l],i);let d=r;u!=null&&(d=Ft({inputs:{x:r},backend:t,attrs:{perm:u}}),c.push(d),l=it(1,i)[0]);const p=tC(d.shape,l,a),f=G([d.shape[l]]),h=ce({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}});c.push(h);const g=ap(r.dtype),m=(x,$,C,S,E)=>{const R=x.shape[0],A=x.shape[1],D=eC(A,E),L={windowSize:D,inSize:A,batchSize:R,numSegments:E},F=new z8(L,$),B=t.compileAndRun(F,[x,C],S);if(c.push(B),B.shape[1]===E)return B;const W=sT({backend:t,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),V=rT({inputs:{x:W},backend:t,attrs:{reps:[A/D]}});return c.push(W),c.push(V),m(B,$,V,S,E)},y=m(h,"unsortedSegmentSum",o,g,a),b=ce({inputs:{x:y},backend:t,attrs:{shape:p}});let v=b;if(u!=null){c.push(b);const x=Tc(u);v=Ft({inputs:{x:v},backend:t,attrs:{perm:x}})}return c.forEach(x=>t.disposeIntermediateTensorInfo(x)),v}const G8={kernelName:np,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8=[_G,kG,OG,PG,VG,WG,UG,HG,XG,QG,eH,sH,aH,uH,fH,mH,yH,vH,CH,TH,IH,PH,VH,zH,GH,YH,ZH,nj,dG,oj,uj,hj,wj,Cj,Tj,Ej,Ij,Oj,Pj,Mj,Wj,Uj,Hj,qj,Yj,eK,nK,oK,cK,uK,hK,bK,$K,TK,_K,IK,AK,OK,FK,LK,MK,UK,jK,XK,QK,eq,sq,iq,dq,uG,fq,cj,gq,xq,$q,fG,Sq,kq,Rq,Pq,Mq,Uq,jq,Yq,e6,s6,o6,l6,d6,f6,y6,x6,v6,C6,T6,I6,O6,L6,H6,gG,X6,Z6,tX,rX,jH,iX,lX,dX,hX,bX,mG,wX,$X,NX,SX,EX,KH,W6,kX,DX,VX,bG,zX,HX,XX,ZX,n5,r5,i5,u5,f5,g5,x5,$5,S5,I5,O5,P5,DH,U6,M5,W5,U5,H5,K5,X5,Q5,J5,t8,r8,a8,c8,u8,f8,m8,y8,x8,z6,TG,$8,T8,E8,k8,D8,L8,SG,M8,W8,G8,cX];for(const n of H8)op(n);var hh={exports:{}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8=P();j8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Kt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Kt||(Kt={}));var gx;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(gx||(gx={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yy={};function K8(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};yy[n]=t}function oT(n){return yy[n]}function q8(n){delete yy[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,c=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,l=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return yt(e.inputNames[l],t,s,r);if(o.type==="tensors"){const p=e.inputs.slice(i,c);return e.inputNames.slice(i,c).filter((h,g)=>{var m;return((m=p[g])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(h=>yt(h,t,s,r))}const u=yt(e.inputNames[l],t,s,r),d=u.dataSync();return o.type==="number"?d[0]:pn(u.shape,d)}const a=e.attrParams[n];return a&&a.value}function yt(n,e,t,s){const[r,o]=Xt(n,t);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[Zl(r,i)]);return a!==void 0?e[Zl(r,a)][o]:void 0}function yx(n,e,t){return e[Zl(n,t.currentContextId)]}function ps(n,e){const[t,s,r]=Xt(n,e);return[Zl(t,e&&e.currentContextId),s,r]}function Zl(n,e){return e?`${n}-${e}`:n}function Xt(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],a=s.length===3?s[1]:void 0,i=Number(s[s.length-1]);r=[o,i,a]}return t&&e.parseNodeNameCache.set(n,r),r}function Cl(n,e,t){let s=w("pad",n,e,t);if(s==="explicit"){s=w("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function fs(n){return n.kept?n:bs(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Y8=Object.freeze(Object.defineProperty({__proto__:null,json:X8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Z8=Object.freeze(Object.defineProperty({__proto__:null,json:Q8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],eY=Object.freeze(Object.defineProperty({__proto__:null,json:J8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],nY=Object.freeze(Object.defineProperty({__proto__:null,json:tY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],rY=Object.freeze(Object.defineProperty({__proto__:null,json:sY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],aY=Object.freeze(Object.defineProperty({__proto__:null,json:oY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iY=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],cY=Object.freeze(Object.defineProperty({__proto__:null,json:iY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],uY=Object.freeze(Object.defineProperty({__proto__:null,json:lY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dY=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],pY=Object.freeze(Object.defineProperty({__proto__:null,json:dY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],hY=Object.freeze(Object.defineProperty({__proto__:null,json:fY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],gY=Object.freeze(Object.defineProperty({__proto__:null,json:mY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],bY=Object.freeze(Object.defineProperty({__proto__:null,json:yY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],wY=Object.freeze(Object.defineProperty({__proto__:null,json:xY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],$Y=Object.freeze(Object.defineProperty({__proto__:null,json:vY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CY=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],NY=Object.freeze(Object.defineProperty({__proto__:null,json:CY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TY=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],SY=Object.freeze(Object.defineProperty({__proto__:null,json:TY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],_Y=Object.freeze(Object.defineProperty({__proto__:null,json:EY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],kY=Object.freeze(Object.defineProperty({__proto__:null,json:IY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AY=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],RY=Object.freeze(Object.defineProperty({__proto__:null,json:AY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bx{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[Y8,Z8,eY,nY,rY,aY,cY,uY,pY,hY,gY,bY,wY,$Y,NY,SY,_Y,kY,RY],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],a=[],i=s.reduce((g,m)=>(g[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(g[m.name]):m.op==="Const"?o.push(g[m.name]):(m.input==null||m.input.length===0)&&a.push(g[m.name]),g),{});let c=[];const l=[];let u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach(g=>{const m=i[g];m.inputNames.forEach((y,b)=>{const[v,,x]=ps(y),$=i[v];if($.outputs!=null){const C=$.outputs.indexOf(x);if(C!==-1){const S=`${v}:${C}`;m.inputNames[b]=S}}m.inputs.push($),$.children.push(m)})}),Object.keys(d).length===0?p.forEach(g=>{const m=i[g];m.children.length===0&&l.push(m)}):Object.keys(d).forEach(g=>{const[m]=ps(g),y=i[m];y!=null&&(y.signatureKey=d[g],l.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(g=>{const[m]=ps(g),y=i[m];y&&(y.signatureKey=u[g],c.push(y))}):c=r;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((g,m)=>(g[m.signature.name]=this.mapFunction(m),g),{}));const h={nodes:i,inputs:c,outputs:l,weights:o,placeholders:r,signature:t,functions:f};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=oT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const a=o.type;let i;switch(o.type){case"string":i=mh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=mh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=$h(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=$h(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=yh(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=yh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=vh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=vh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=gh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=gh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=Nh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Nh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=wh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=wh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=Ch(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ch(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=bh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=bh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=xh(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=xh(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=xx(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=xx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:i,type:a},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((d,p)=>(d[p.name]=this.mapNode(p),p.op==="Const"&&r.push(d[p.name]),d),{}));const a=[],i=[];e.signature.inputArg.forEach(d=>{const[p]=ps(d.name),f={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:by(d.type),type:"dtype"}},children:[]};f.signatureKey=d.name,a.push(f),o[p]=f}),Object.keys(o).forEach(d=>{const p=o[d];p.inputNames.forEach((f,h)=>{const[g,,m]=ps(f),y=o[g];if(y.outputs!=null){const b=y.outputs.indexOf(m);if(b!==-1){const v=`${g}:${b}`;p.inputNames[h]=v}}p.inputs.push(y),y.children.push(p)})});const l=e.ret;e.signature.outputArg.forEach(d=>{const[p,f]=ps(l[d.name]),h=o[p];h!=null&&(h.defaultOutput=f,i.push(h))});const u=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:r,placeholders:s,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function OY(n){const e=P().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function aT(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):OY(n);return e?t:t.toLowerCase()}function mh(n,e,t,s=!1){const r=n[e];return r!=null?aT(r.s,s):t}function gh(n,e,t){const s=n[e];return s?s.b:t}function yh(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function by(n){switch(typeof n=="string"&&(n=Kt[n]),n){case Kt.DT_FLOAT:case Kt.DT_HALF:return"float32";case Kt.DT_INT32:case Kt.DT_INT64:case Kt.DT_INT8:case Kt.DT_UINT8:return"int32";case Kt.DT_BOOL:return"bool";case Kt.DT_DOUBLE:return"float32";case Kt.DT_STRING:return"string";case Kt.DT_COMPLEX64:case Kt.DT_COMPLEX128:return"complex64";default:return null}}function xx(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function bh(n,e,t){const s=n[e];return s&&s.type?by(s.type):t}function xh(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>by(r)):t}function iT(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function wh(n,e,t){const s=n[e];return s&&s.shape?iT(s.shape):t}function vh(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function $h(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>aT(o,s)):t}function Ch(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>iT(r)):t}function Nh(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DY{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return yt(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return yt(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return yh(this.node.rawAttrs,e,t);if(s.s!=null)return mh(this.node.rawAttrs,e,t);if(s.b!=null)return gh(this.node.rawAttrs,e,t);if(s.shape!=null)return wh(this.node.rawAttrs,e,t);if(s.type!=null)return bh(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return vh(this.node.rawAttrs,e,t);if(s.list.s!=null)return $h(this.node.rawAttrs,e,t);if(s.list.shape!=null)return Ch(this.node.rawAttrs,e,t);if(s.list.b!=null)return Nh(this.node.rawAttrs,e,t);if(s.list.type!=null)return xh(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:vm,abs:Yt,acos:qw,acosh:Xw,add:Te,addN:Yw,all:Qw,any:Zw,argMax:Jw,argMin:e1,asin:t1,asinh:n1,atan:s1,atan2:r1,atanh:o1,avgPool:Im,avgPool3d:a1,basicLSTMCell:i1,batchNorm:Cc,batchNorm2d:c1,batchNorm3d:l1,batchNorm4d:u1,batchToSpaceND:km,bincount:Am,bitwiseAnd:d1,booleanMaskAsync:Qv,broadcastArgs:p1,broadcastTo:Do,buffer:Ee,cast:Xe,ceil:f1,clipByValue:h1,clone:bs,complex:Cs,concat:Tt,concat1d:m1,concat2d:g1,concat3d:y1,concat4d:b1,conv1d:x1,conv2d:Nc,conv2dTranspose:v1,conv3d:$1,conv3dTranspose:C1,cos:N1,cosh:T1,cosineWindow:bp,cumprod:S1,cumsum:E1,denseBincount:_1,depthToSpace:I1,depthwiseConv2d:ip,diag:k1,dilation2d:A1,div:qe,divNoNan:R1,dot:O1,dropout:n$,einsum:_r,elu:Dm,enclosingPowerOfTwo:mg,ensureShape:D1,equal:Om,erf:F1,euclideanNorm:V1,exp:er,expandDims:ds,expm1:M1,eye:Pm,fft:fp,fill:la,floor:Lm,floorDiv:Em,fused:r$,gather:Vm,gatherND:t$,greater:Ec,greaterEqual:Mm,ifft:ii,imag:_c,image:l$,inTopKAsync:s$,irfft:lg,isFinite:B1,isInf:W1,isNaN:z1,leakyRelu:Bm,less:Bl,lessEqual:cp,linalg:u$,linspace:U1,localResponseNormalization:G1,log:Go,log1p:Wm,logSigmoid:j1,logSoftmax:K1,logSumExp:Um,logicalAnd:ri,logicalNot:Gm,logicalOr:Hm,logicalXor:q1,losses:d$,lowerBound:X1,matMul:Me,max:Br,maxPool:jm,maxPool3d:Y1,maxPoolWithArgmax:Q1,maximum:Km,mean:oi,meshgrid:Z1,min:Ml,minimum:ai,mirrorPad:J1,mod:ev,moments:tv,movingAverage:Zv,mul:de,multiRNNCell:nv,multinomial:sv,neg:Bn,norm:Sc,notEqual:qm,oneHot:Wl,ones:Gs,onesLike:rv,op:I,outerProduct:ov,pad:ua,pad1d:av,pad2d:iv,pad3d:cv,pad4d:lv,pool:uv,pow:Uo,prelu:Ym,print:Sm,prod:dv,raggedGather:pv,raggedRange:fv,raggedTensorToTensor:hv,rand:mv,randomGamma:xv,randomNormal:ag,randomStandardNormal:wv,randomUniform:pp,randomUniformInt:vv,range:Ho,real:jo,reciprocal:$v,relu:Ic,relu6:ig,reshape:q,reverse:nr,reverse1d:Cv,reverse2d:Nv,reverse3d:Tv,reverse4d:Sv,rfft:hp,round:cg,rsqrt:Ev,scalar:Oe,scatterND:Jv,searchSorted:up,selu:_v,separableConv2d:Iv,setdiff1dAsync:kv,sigmoid:Mr,sign:Av,signal:c$,sin:Rv,sinh:Ov,slice:He,slice1d:Dv,slice2d:Fv,slice3d:Pv,slice4d:Lv,softmax:Vv,softplus:zm,spaceToBatchND:Xm,sparse:p$,sparseToDense:e$,spectral:i$,split:Ko,sqrt:rs,square:Cn,squaredDifference:ug,squeeze:mp,stack:as,step:dg,stridedSlice:Mv,string:f$,sub:Ae,sum:Ke,tan:Bv,tanh:Vl,tensor:Mn,tensor1d:un,tensor2d:Po,tensor3d:pg,tensor4d:Wv,tensor5d:zv,tensor6d:Uv,tensorScatterUpdate:Gv,tile:Fo,topk:Hv,transpose:ci,truncatedNormal:jv,unique:Kv,unsortedSegmentSum:qv,unstack:pr,upperBound:Xv,variable:Yv,where:xs,whereAsync:hg,zeros:tr,zerosLike:tn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY=(n,e,t,s=Nt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[s.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[s.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[s.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[s.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[s.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[s.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[s.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[s.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[s.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=(n,e,t,s=Nt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(w("x",n,e,t))];case"Acos":return[s.acos(w("x",n,e,t))];case"Acosh":return[s.acosh(w("x",n,e,t))];case"Asin":return[s.asin(w("x",n,e,t))];case"Asinh":return[s.asinh(w("x",n,e,t))];case"Atan":return[s.atan(w("x",n,e,t))];case"Atan2":return[s.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[s.atanh(w("x",n,e,t))];case"Ceil":return[s.ceil(w("x",n,e,t))];case"Complex":return[s.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[s.cos(w("x",n,e,t))];case"Cosh":return[s.cosh(w("x",n,e,t))];case"Elu":return[s.elu(w("x",n,e,t))];case"Erf":return[s.erf(w("x",n,e,t))];case"Exp":return[s.exp(w("x",n,e,t))];case"Expm1":return[s.expm1(w("x",n,e,t))];case"Floor":return[s.floor(w("x",n,e,t))];case"Log":return[s.log(w("x",n,e,t))];case"Log1p":return[s.log1p(w("x",n,e,t))];case"Imag":return[s.imag(w("x",n,e,t))];case"Neg":return[s.neg(w("x",n,e,t))];case"Reciprocal":return[s.reciprocal(w("x",n,e,t))];case"Real":return[s.real(w("x",n,e,t))];case"Relu":return[s.relu(w("x",n,e,t))];case"Round":return[s.round(w("x",n,e,t))];case"Selu":return[s.selu(w("x",n,e,t))];case"Sigmoid":return[s.sigmoid(w("x",n,e,t))];case"Sin":return[s.sin(w("x",n,e,t))];case"Sign":return[s.sign(w("x",n,e,t))];case"Sinh":return[s.sinh(w("x",n,e,t))];case"Softplus":return[s.softplus(w("x",n,e,t))];case"Sqrt":return[s.sqrt(w("x",n,e,t))];case"Square":return[s.square(w("x",n,e,t))];case"Tanh":return[s.tanh(w("x",n,e,t))];case"Tan":return[s.tan(w("x",n,e,t))];case"ClipByValue":return[s.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(w("x",n,e,t))];case"Rsqrt":return[s.rsqrt(yt(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[s.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[s.isNaN(yt(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(yt(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(yt(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yn(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){T(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];T(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function wx(n){return!(typeof n=="number"||n.some(e=>e<0))}function Ea(n,e,t){let s=Th(n,t);const r=!wx(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=Th(o.shape,s)}),!wx(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Th(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LY{constructor(e,t,s,r,o,a,i){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Oe(0),Pn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),yn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Pn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Mn([],[0].concat(this.elementShape));const s=this.readMany(e);return yn(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),as(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Mn([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return yn(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Tt(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,pr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,a=[];Ve(()=>{t=q(t,[1,s,o]);for(let c=0;c<e.length;++c){const u=[0,c===0?0:r[c-1],0],d=[1,e[c],o];a[c]=q(He(t,u,d),this.elementShape)}return a});const i=[];for(let c=0;c<e.length;c++)i[c]=c;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jr{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);yn(t,o.shape,"TensorList shape mismatch: "),Pn(o)}),this.idTensor=Oe(0),this.maxNumElements=r,Pn(this.idTensor)}copy(){return new Jr([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);yn(e,this.elementShape,"TensorList shape mismatch: ");const r=Ea(this.elementShape,this.tensors,e);return Ve(()=>{const o=this.tensors.map(a=>q(a,r));return as(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Ea(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,yn(r.shape,e,"TensorList shape mismatch: "),q(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(yn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Pn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Jr([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);yn(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Ea(this.elementShape,this.tensors,t);return q(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);yn(this.elementShape,t.shape,"TensorList shape mismatch: "),Pn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);yn(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Ea(this.elementShape,this.tensors,s);return e.length===0?Mn([],[0].concat(r)):Ve(()=>{const o=e.map(a=>q(this.tensors[a],r));return as(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);yn(this.elementShape,t,"TensorList shape mismatch: ");const s=Ea(this.elementShape,this.tensors,t);return this.size()===0?Mn([],[0].concat(s)):Ve(()=>{const r=this.tensors.map(o=>q(o,s));return Tt(r,0)})}}function VY(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);yn(r,e,"TensorList shape mismatch: ");const o=pr(n);return new Jr(o,e,s)}function MY(n,e,t,s){return new Jr([],n,e,s)}function BY(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Jr([],t,n.dtype,s),a=pr(n,0);return e.forEach((i,c)=>{o.setItem(i,a[c])}),o}function WY(n,e,t){let s=0;const r=e.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Th(o,t),i=s===0?0:n.size/s,c=Ve(()=>{const u=[];n=q(n,[1,s,i]);for(let d=0;d<e.length;++d){const f=[0,d===0?0:r[d-1],0],h=[1,e[d],i];u[d]=q(He(n,f,h),a)}return n.dispose(),u}),l=new Jr([],t,n.dtype,e.length);for(let u=0;u<c.length;u++)l.setItem(u,c[u]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=w("thenBranch",n,e,t),r=w("elseBranch",n,e,t),o=w("cond",n,e,t),a=w("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=w("body",n,e,t),r=w("cond",n,e,t),o=w("args",n,e,t),a=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),i=o.map(u=>u.id);let c=await a[0].data();a.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let l=o;for(;c[0];){const u=l;l=await t.functionMap[s].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const d=l.map(f=>f.id);u.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()});const p=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);c=await p[0].data(),p.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{const s=w("pred",n,e,t);return[fs(s)]}case"Switch":{const s=w("pred",n,e,t);let r=w("data",n,e,t);return r.kept||(r=fs(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>yt(r,e,t)!==void 0);if(s){const r=yt(s,e,t);return[fs(r)]}return}case"Enter":{const s=w("frameName",n,e,t),r=w("tensor",n,e,t);return t.enterFrame(s),[fs(r)]}case"Exit":{const s=w("tensor",n,e,t);return t.exitFrame(),[fs(s)]}case"NextIteration":{const s=w("tensor",n,e,t);return t.nextIteration(),[fs(s)]}case"TensorArrayV3":{const s=w("size",n,e,t),r=w("dtype",n,e,t),o=w("elementShape",n,e,t),a=w("dynamicSize",n,e,t),i=w("clearAfterRead",n,e,t),c=w("identicalElementShapes",n,e,t),l=w("name",n,e,t),u=new LY(l,r,s,o,c,a,i);return t.addTensorArray(u),[u.idTensor,Oe(1)]}case"TensorArrayWriteV3":{const s=w("tensorArrayId",n,e,t),r=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=w("tensorArrayId",n,e,t),r=w("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=w("tensorArrayId",n,e,t),r=w("indices",n,e,t),o=w("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=w("tensorArrayId",n,e,t),r=w("indices",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=w("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=w("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=w("tensorArrayId",n,e,t),r=w("tensor",n,e,t),o=w("lengths",n,e,t),a=t.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=w("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Oe(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=w("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=w("tensorListId",n,e,t),r=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=w("tensorListId",n,e,t),r=w("index",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=w("indices",n,e,t),r=w("tensor",n,e,t),o=w("elementShape",n,e,t),a=w("numElements",n,e,t),i=BY(r,s,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=w("elementShape",n,e,t),r=w("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=w(o,n,e,t),i=n.op==="TensorListReserve"?-1:a,c=MY(s,r,a,i);return t.addTensorList(c),[c.idTensor]}case"TensorListGather":{const s=w("tensorListId",n,e,t),r=w("indices",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=w("tensorListId",n,e,t),r=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=w("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=w("tensor",n,e,t),r=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=VY(s,r,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=w("tensorListId",n,e,t),r=t.getTensorList(s.id),o=w("dtype",n,e,t),a=w("elementShape",n,e,t);return[r.concat(o,a)]}case"TensorListPushBack":{const s=w("tensorListId",n,e,t),r=w("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=w("tensorListId",n,e,t),r=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=w("tensor",n,e,t),r=w("elementShape",n,e,t),o=w("lengths",n,e,t),a=WY(s,o,r);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=w("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Oe(r.size(),"int32")]}case"TensorListResize":{const s=w("tensorListId",n,e,t),r=w("size",n,e,t),a=t.getTensorList(s.id).resize(r);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vx(n,e,t){const[s,r]=w("fusedOps",n,e,t),o=s==="biasadd",a=!o,i=r==="prelu",c=s==="fusedbatchnorm",l=w("numArgs",n,e,t);if(o){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=w("strides",n,e,t),d=Cl(n,e,t),p=w("dataFormat",n,e,t).toUpperCase(),f=w("dilations",n,e,t);let[h,g]=w("args",n,e,t);a&&(g=h,h=void 0);const m=w("leakyreluAlpha",n,e,t);return{stride:u,pad:d,dataFormat:p,dilations:f,biasArg:h,preluArg:g,activationFunc:r,leakyreluAlpha:m}}const UY=(n,e,t,s=Nt)=>{switch(n.op){case"Conv1D":{const r=w("stride",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilation",n,e,t);return[s.conv1d(w("x",n,e,t),w("filter",n,e,t),r,o,a,i)]}case"Conv2D":{const r=w("strides",n,e,t),o=Cl(n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[s.conv2d(w("x",n,e,t),w("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=vx(n,e,t);return[s.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=vx(n,e,t);return[s.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=w("outputShape",n,e,t),o=w("strides",n,e,t),a=Cl(n,e,t);return[s.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=w("strides",n,e,t),o=Cl(n,e,t),a=w("dilations",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[s.conv3d(w("x",n,e,t),w("filter",n,e,t),[r[1],r[2],r[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[s.avgPool(w("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[s.maxPool(w("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t),i=w("includeBatchInIndex",n,e,t),{result:c,indexes:l}=s.maxPoolWithArgmax(w("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o,i);return[c,l]}case"AvgPool3D":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[s.avgPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[s.maxPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dilations",n,e,t),i=r[1],c=r[2],l=a[1],u=a[2];return[s.dilation2d(w("x",n,e,t),w("filter",n,e,t),[i,c],o,[l,u],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY=(n,e,t,s=Nt)=>{switch(n.op){case"Fill":{const r=w("shape",n,e,t),o=w("dtype",n,e,t),a=w("value",n,e,t);return[s.fill(r,a,o)]}case"LinSpace":{const r=w("start",n,e,t),o=w("stop",n,e,t),a=w("num",n,e,t);return[s.linspace(r,o,a)]}case"Multinomial":{const r=w("logits",n,e,t),o=w("numSamples",n,e,t),a=w("seed",n,e,t);return[s.multinomial(r,o,a)]}case"OneHot":{const r=w("indices",n,e,t),o=w("depth",n,e,t),a=w("onValue",n,e,t),i=w("offValue",n,e,t),c=w("dtype",n,e,t);return[s.oneHot(r,o,a,i,c)]}case"Ones":return[s.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[s.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("seed",n,e,t))];case"Range":{const r=w("start",n,e,t),o=w("stop",n,e,t),a=w("step",n,e,t);return[s.range(r,o,a,w("dtype",n,e,t))]}case"TruncatedNormal":{const r=w("shape",n,e,t),o=w("mean",n,e,t),a=w("stdDev",n,e,t),i=w("seed",n,e,t);return[s.truncatedNormal(r,o,a,w("dtype",n,e,t),i)]}case"Zeros":return[s.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(n,e,t){const s=w("boxes",n,e,t),r=w("scores",n,e,t),o=w("maxOutputSize",n,e,t),a=w("iouThreshold",n,e,t),i=w("scoreThreshold",n,e,t),c=w("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:c}}const HY=async(n,e,t,s,r=Nt)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=ff(n,e,t),d=await r.image.nonMaxSuppressionWithScoreAsync(o,a,i,c,l,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=ff(n,e,t),u=w("padToMaxOutputSize",n,e,t),d=await r.image.nonMaxSuppressionPaddedAsync(o,a,i,c,l,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=ff(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,a,i,c,l)]}case"Where":{const o=r.cast(w("condition",n,e,t),"bool"),a=[await r.whereAsync(o)];return o.dispose(),a}case"ListDiff":return r.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=(n,e,t,s=Nt)=>{switch(n.op){case"LowerBound":{const r=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=w("x",n,e,t),o=w("k",n,e,t),a=w("sorted",n,e,t),i=s.topk(r,o,a);return[i.values,i.indices]}case"UpperBound":{const r=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=w("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=w("x",n,e,t),o=w("axis",n,e,t),a=s.unique(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=(n,e,t,s=Nt)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=w("default",n,e,t);return[yt(n.name,e,t)||r];case"Placeholder":return[yt(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=w("x",n,e,t);return[fs(u)]}case"IdentityN":return w("x",n,e,t).map(u=>fs(u));case"Snapshot":const o=w("x",n,e,t);return[fs(o)];case"Shape":return[s.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(u=>s.tensor1d(u.shape));case"Size":return[s.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=w("x",n,e,t),i=w("data",n,e,t),c=w("message",n,e,t),l=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qY{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Oe(0),this.tensorMap=new Map,Pn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Oe(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Ve(()=>{const r=pr(t),o=s.length,a=r.length;T(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const c=s[i],l=r[i];Pn(l),this.tensorMap.set(c,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Ve(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],i=this.findWithDefault(a,t);r.push(i)}return as(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=w("keyDType",n,e,t),a=w("valueDType",n,e,t),i=new qY(o,a);return s.addHashTable(n.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=w("tableHandle",n,e,t,s),o=w("keys",n,e,t),a=w("values",n,e,t);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=w("tableHandle",n,e,t,s),o=w("keys",n,e,t),a=w("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=w("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=(n,e,t,s=Nt)=>{switch(n.op){case"ResizeBilinear":{const r=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const r=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],a,i)]}case"CropAndResize":{const r=w("image",n,e,t),o=w("boxes",n,e,t),a=w("boxInd",n,e,t),i=w("cropSize",n,e,t),c=w("method",n,e,t),l=w("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,a,i,c,l)]}case"ImageProjectiveTransformV3":{const r=w("images",n,e,t),o=w("transforms",n,e,t),a=w("outputShape",n,e,t),i=w("fillValue",n,e,t),c=w("interpolation",n,e,t),l=w("fillMode",n,e,t);return[s.image.transform(r,o,c.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY=(n,e,t,s=Nt)=>{switch(n.op){case"Equal":return[s.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[s.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[s.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[s.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[s.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[s.logicalNot(w("a",n,e,t))];case"LogicalOr":return[s.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[s.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY=(n,e,t,s=Nt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[s.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[s.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[r,o]=w("fusedOps",n,e,t),a=r==="biasadd",i=o==="prelu",c=w("numArgs",n,e,t),l=w("leakyreluAlpha",n,e,t);if(a){if(i&&c!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&c!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=w("args",n,e,t);return[s.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:u,activation:o,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[s.linalg.bandPart(w("a",n,e,t),w("numLower",n,e,t),w("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=(n,e,t,s=Nt)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[s.softmax(w("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=(n,e,t,s=Nt)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(w("paramsNestedSplits",n,e,t),w("paramsDenseValues",n,e,t),w("indices",n,e,t),w("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(w("starts",n,e,t),w("limits",n,e,t),w("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(w("shape",n,e,t),w("values",n,e,t),w("defaultValue",n,e,t),w("rowPartitionTensors",n,e,t),w("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=(n,e,t,s=Nt)=>{switch(n.op){case"Max":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.max(w("x",n,e,t),i,c)]}case"Mean":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.mean(w("x",n,e,t),i,c)]}case"Min":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.min(w("x",n,e,t),i,c)]}case"Sum":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.sum(w("x",n,e,t),i,c)]}case"All":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.all(w("x",n,e,t),i,c)]}case"Any":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.any(w("x",n,e,t),i,c)]}case"ArgMax":{const i=w("axis",n,e,t);return[s.argMax(w("x",n,e,t),i)]}case"ArgMin":{const i=w("axis",n,e,t);return[s.argMin(w("x",n,e,t),i)]}case"Prod":{const i=w("axis",n,e,t),c=w("keepDims",n,e,t);return[s.prod(w("x",n,e,t),i,c)]}case"Cumprod":{const i=w("axis",n,e,t),c=w("exclusive",n,e,t),l=w("reverse",n,e,t);return[s.cumprod(w("x",n,e,t),i,c,l)]}case"Cumsum":{const i=w("axis",n,e,t),c=w("exclusive",n,e,t),l=w("reverse",n,e,t);return[s.cumsum(w("x",n,e,t),i,c,l)]}case"Bincount":const r=w("x",n,e,t),o=w("weights",n,e,t),a=w("size",n,e,t);return[s.bincount(r,o,a)];case"DenseBincount":{const i=w("x",n,e,t),c=w("weights",n,e,t),l=w("size",n,e,t),u=w("binaryOutput",n,e,t);return[s.denseBincount(i,c,l,u)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=(n,e,t,s=Nt)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=w("n",n,e,t),o=w("axis",n,e,t);let a=w("tensors",n,e,t);return a=a.slice(0,r),[s.concat(a,o)]}case"Gather":{const r=w("x",n,e,t),o=w("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=w("axis",n,e,t),o=w("batchDims",n,e,t),a=w("x",n,e,t),i=w("indices",n,e,t);return[s.gather(a,s.cast(i,"int32"),r,o)]}case"Reverse":{const r=w("dims",n,e,t),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const a=w("x",n,e,t);return[s.reverse(a,o)]}case"ReverseV2":{const r=w("axis",n,e,t),o=w("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=w("begin",n,e,t),o=w("size",n,e,t);return[s.slice(w("x",n,e,t),r,o)]}case"StridedSlice":{const r=w("begin",n,e,t),o=w("end",n,e,t),a=w("strides",n,e,t),i=w("beginMask",n,e,t),c=w("endMask",n,e,t),l=w("ellipsisMask",n,e,t),u=w("newAxisMask",n,e,t),d=w("shrinkAxisMask",n,e,t),p=w("x",n,e,t);return[s.stridedSlice(p,r,o,a,i,c,l,u,d)]}case"Pack":return Ve(()=>{const r=w("axis",n,e,t),o=w("tensors",n,e,t),a=o[0].shape,i=s.squeeze(o[0]).shape,c=o.map(l=>{const u=Ue(l.shape,a);if(!u&&!Ue(s.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return u?l:s.reshape(l,a)});return[s.stack(c,r)]});case"Unpack":{const r=w("axis",n,e,t),o=w("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=w("reps",n,e,t);return[s.tile(w("x",n,e,t),r)]}case"Split":case"SplitV":{const r=w("axis",n,e,t),o=w("numOrSizeSplits",n,e,t),a=w("x",n,e,t);return s.split(a,o,r)}case"ScatterNd":{const r=w("indices",n,e,t),o=w("values",n,e,t),a=w("shape",n,e,t);return[s.scatterND(r,o,a)]}case"GatherNd":{const r=w("x",n,e,t),o=w("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=w("sparseIndices",n,e,t),o=w("outputShape",n,e,t),a=w("sparseValues",n,e,t),i=w("defaultValue",n,e,t);return[s.sparseToDense(r,a,o,a.dtype===i.dtype?i:s.cast(i,a.dtype))]}case"TensorScatterUpdate":{const r=w("indices",n,e,t),o=w("values",n,e,t),a=w("tensor",n,e,t);return[s.tensorScatterUpdate(a,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=(n,e,t,s=Nt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[r,o,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7=(n,e,t,s=Nt)=>{switch(n.op){case"FFT":return[s.fft(w("x",n,e,t))];case"IFFT":return[s.ifft(w("x",n,e,t))];case"RFFT":return[s.rfft(w("x",n,e,t))];case"IRFFT":return[s.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=(n,e,t,s=Nt)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(w("input",n,e,t),w("pattern",n,e,t),w("rewrite",n,e,t),w("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=s.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[r,o,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7=(n,e,t,s=Nt)=>{switch(n.op){case"Cast":return[s.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const r=w("axis",n,e,t);return[s.expandDims(w("x",n,e,t),r)]}case"Squeeze":{const r=w("axis",n,e,t);return[s.squeeze(w("x",n,e,t),r)]}case"Reshape":return[s.reshape(w("x",n,e,t),w("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const r=w("blockShape",n,e,t),o=w("paddings",n,e,t);return[s.spaceToBatchND(w("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=w("blockShape",n,e,t),o=w("crops",n,e,t);return[s.batchToSpaceND(w("x",n,e,t),r,o)]}case"DepthToSpace":{const r=w("blockSize",n,e,t),o=w("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(w("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(n,e,t,s,r=Ve){const o=((a,i,c)=>{switch(a.category){case"arithmetic":return r(()=>FY(a,i,c));case"basic_math":return r(()=>PY(a,i,c));case"control":return zY(a,i,c);case"convolution":return r(()=>UY(a,i,c));case"creation":return r(()=>GY(a,i,c));case"dynamic":return HY(a,i,c);case"evaluation":return r(()=>jY(a,i,c));case"image":return r(()=>YY(a,i,c));case"graph":return r(()=>KY(a,i,c));case"logical":return r(()=>QY(a,i,c));case"matrices":return r(()=>ZY(a,i,c));case"normalization":return r(()=>JY(a,i,c));case"ragged":return r(()=>e7(a,i,c));case"reduction":return r(()=>t7(a,i,c));case"slice_join":return r(()=>n7(a,i,c));case"sparse":return r(()=>s7(a,i,c));case"spectral":return r(()=>r7(a,i,c));case"string":return r(()=>o7(a,i,c));case"transformation":return r(()=>a7(a,i,c));case"hash_table":return XY(a,i,c,s);case"custom":const l=oT(a.op);if(l&&l.customExecutor)return l.customExecutor(new DY(a,i,c));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Zs(o)?o.then(a=>[].concat(a)):[].concat(o)}class Cx{constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nx(n,e,t,s){const r=new Set,o=[];let a=null,i=null;const c=new Set,l=new Set(Object.keys(n).map(p=>Xt(p)[0]));s=s||[];const u=new Set(s.map(p=>Xt(p.name)[0])),d=[...e];for(;d.length>0;){const p=d.pop();if((kr(p)||h7(p)||m7(p))&&a==null&&(a=p,i=a.children.map(f=>f.name).filter(f=>r.has(f))),r.add(p.name),t[p.name]==null&&!l.has(p.name)&&!u.has(p.name)){if(p.inputs.length===0){o.push(p.name);continue}p.inputs.forEach(f=>{c.has(f.name)||(c.add(f.name),d.push(f))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}function i7(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(m=>Xt(m)[0]).map(m=>n.nodes[m]),o=n.initNodes||[],a=m=>t.has(typeof m=="string"?m:m.name);function i(m){return[...new Map(m.map(y=>[y.name,y])).values()]}const c=i([...r,...n.weights,...o]).filter(a),l=i([...c,...Object.values(n.nodes)]).filter(a),u=new Map(l.map(m=>[m.name,m])),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const y of m.children)a(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}const p=Object.entries(d).filter(([,m])=>m===0).map(([m])=>m),f=[...p];for(;p.length>0;){const m=p.pop(),y=u.get(m);for(const b of y.children.filter(a))--d[b.name]===0&&(f.push(b.name),p.push(b.name))}const h=f.map(m=>u.get(m)),g=c7(h,c);return l7(g,c),g}function c7(n,e){const t=new Map(n.map(a=>[a.name,a])),s=e.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),i=t.get(a);for(const c of i.children)!t.has(c.name)||r.has(c.name)||(r.add(c.name),s.push(c.name))}return n.filter(a=>r.has(a.name))}class cl extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function l7(n,e){const t=new Map(n.map((i,c)=>[i.name,c])),s=new Set(e.map(i=>i.name)),r=i=>s.has(typeof i=="string"?i:i.name),o=new Set(n.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of n){for(const c of i.children.filter(a)){if(!t.has(c.name))throw new cl(`Child ${c.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(c.name))throw new cl(`Node ${i.name} is scheduled to run after its child ${c.name}.`)}if(!r(i))for(const c of i.inputs){if(!t.has(c.name))throw new cl(`Input ${c.name} of node ${i.name} is unreachable.`);if(t.get(c.name)>t.get(i.name))throw new cl(`Node ${i.name} is scheduled to run before its input ${c.name}.`)}}}function u7(n){const e=new Map(n.map((i,c)=>[i.name,c])),t=Number.MAX_SAFE_INTEGER,s=n.map((i,c)=>kr(i)?t:c),r=i=>{const c=s[e.get(i.name)];return c??-1},o=n.map((i,c)=>i.children.map(r).reduce((l,u)=>Math.max(l,u),s[c])),a=new Map;for(let i=0;i<n.length;++i){const c=o[i];if(c===t)continue;const l=n[i],u=n[c];a.has(u.name)||a.set(u.name,[]),a.get(u.name).push(l)}return a}const d7=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),p7=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),f7=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function kr(n){return d7.has(n.op)}function h7(n){return p7.has(n.op)}function m7(n){return f7.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jl{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Jl(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=Nx(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const l=t.map(d=>d.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${u}]. Missing the following inputs: [${r}]`)}const i=i7(this.graph,s),c=u7(i);return{orderedNodes:i,nodeLiveUntilMap:c}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Pn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(p=>this.graph.nodes[Xt(p)[0]]),o=t.map(p=>Xt(p)[0]),a=new Set(o);let i=o.map(p=>this.graph.nodes[p]);i.length===0&&(i=this._outputs);const c=this.getCompilationKey(r,i);let l=this.compiledMap.get(c);l==null&&(l=this.compile(e,i),this.compiledMap.set(c,l));try{this.keepIntermediateTensors=P().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const u={},d={};return Ve(()=>{const p=new Cx(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[b,v]=Xt(y,p),x=[];x[v]=e[y],f[b]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(x))});const h=this.getFrozenTensorIds(f),{orderedNodes:g,nodeLiveUntilMap:m}=l;for(const y of g){if(f[y.name])continue;const b=$x(y,f,p,this._resourceManager);if(Zs(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);f[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,f,p,h,a,m.get(y.name))}return this.parent==null&&p.dispose(h),t.map(y=>yt(y,f,p))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,a,i){if(!(kr(t)||a.has(e))){for(const c of s[e])c!=null&&(i[c.id]=(i[c.id]||0)+t.children.length);for(const c of t.inputs){if(kr(c))continue;const l=yx(c.name,s,r);if(l!=null)for(const u of l){if(!u||u.kept||o.has(u.id))continue;const d=i[u.id];d===1?(u.dispose(),delete i[u.id]):d!=null&&i[u.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,a){function i(c){return kr(c)||o.has(c.name)}if(!(kr(e)||a==null))for(const c of a){if(i(c))continue;const l=yx(c.name,t,s);for(const u of l)!u||u.kept||r.has(u.id)||u.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=P().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const a=new Cx(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,s),c=t.map(p=>yt(p,i,a)),l=c.map(p=>p.id),u=Object.keys(e).map(p=>e[p].id),d=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach(p=>{p.forEach(f=>{f&&!f.isDisposed&&!d.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(d),c}async executeFunctionAsync(e,t,s){const r=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),a=o.map(x=>this.graph.nodes[Xt(x)[0]]),i=s.map(x=>Xt(x)[0]),c=new Set(i);let l=i.map(x=>this.graph.nodes[x]);l.length===0&&(l=this._outputs);const{usedNodes:u,missingInputs:d,dynamicNode:p,syncInputs:f}=Nx(e,l,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{const[$,C]=Xt(x),S=[];S[C]=e[x],g[$]=S});const m={},y=this.getFrozenTensorIds(g),b={};for(;h.length>0;){const x=this.processStack(a,h,t,g,b,y,c,m,u);await Promise.all(x)}p==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=l.filter(x=>!kr(x)&&!yt(x.name,g,t)).map(x=>x.name);if(v.length>0){let x="";throw p!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${x}`)}return g}processStack(e,t,s,r,o,a,i,c,l){const u=[];for(;t.length>0;){const d=t.pop();s.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&w("isConstant",d.node,r,s)&&([p]=ps(d.node.name,s)),r[d.node.name]==null){const f=$x(d.node,r,s,this._resourceManager);p||([p]=ps(d.node.name,s));const h=s.currentContext;Zs(f)?u.push(f.then(g=>(r[p]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(g)),s.currentContext=h,this.checkTensorForDisposal(p,d.node,r,s,a,i,c),this.processChildNodes(d.node,t,s,r,o,l),g))):(r[p]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(f)),this.checkTensorForDisposal(p,d.node,r,s,a,i,c),this.processChildNodes(d.node,t,s,r,o,l))}else this.processChildNodes(d.node,t,s,r,o,l)}return u}processChildNodes(e,t,s,r,o,a){e.children.forEach(i=>{const[c]=ps(i.name,s);o[c]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!yt(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:i})):i.inputNames.every(l=>!!yt(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Xt(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===s.shape.length&&s.shape.every((c,l)=>a[l]===-1||a[l]===c);T(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&T(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const a=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];a!=null?r[a.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Xt(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Xt(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class g7{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y7="?tfjs-format=file",b7="model.json";class xy{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=Tg){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new g7}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Zs(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await Mw(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Jl(bx.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=bx.Instance.transformGraph(e.modelInitializer);this.initializer=new Jl(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof nt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof nt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,a)=>{var i,c,l;const u=(l=(c=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||c===void 0?void 0:c[a])===null||l===void 0?void 0:l.resourceId;return u!=null?o[a]=this.resourceIdToCapturedInput[u]:o[a]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],a=t[o];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Dt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function x7(n,e={},t=Tg){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=v7(n));const s=new xy(n,e,t);return await s.load(),s}function w7(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,r]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const o=Ll(s.weightsManifest),a=Nm(s,o,r);e=zl(a)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=zl(n);else throw new Error("Unknown model format");const t=new xy(e);return t.load(),t}function v7(n){return n.endsWith("/")||(n=n+"/"),`${n}${b7}${y7}`}/** @license See the LICENSE file. */const $7="4.17.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7=Object.freeze(Object.defineProperty({__proto__:null,GraphModel:xy,deregisterOp:q8,loadGraphModel:x7,loadGraphModelSync:w7,registerOp:K8,version_converter:$7},Symbol.toStringTag,{value:"Module"})),N7=gm(C7),T7=gm(EP);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(function(n,e){(function(t,s){s(e,N7,T7)})(ir,function(t,s,r){const o={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(c,l){this.modelPath=l||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(c)}/model.json`}getPrefix(c){return c==="lite_mobilenet_v2"?`ssd${c}`:`ssd_${c}`}async load(){this.model=await s.loadGraphModel(this.modelPath);const c=r.zeros([1,300,300,3],"int32"),l=await this.model.executeAsync(c);await Promise.all(l.map(u=>u.data())),l.map(u=>u.dispose()),c.dispose()}async infer(c,l,u){const d=r.tidy(()=>(c instanceof r.Tensor||(c=r.browser.fromPixels(c)),r.expandDims(c))),p=d.shape[1],f=d.shape[2],h=await this.model.executeAsync(d),g=h[0].dataSync(),m=h[1].dataSync();d.dispose(),r.dispose(h);const[y,b]=this.calculateMaxScores(g,h[0].shape[1],h[0].shape[2]),v=r.getBackend();r.getBackend()==="webgl"&&r.setBackend("cpu");const x=r.tidy(()=>{const C=r.tensor2d(m,[h[1].shape[1],h[1].shape[3]]);return r.image.nonMaxSuppression(C,y,l,u,u)}),$=x.dataSync();return x.dispose(),v!==r.getBackend()&&r.setBackend(v),this.buildDetectedObjects(f,p,m,y,$,b)}buildDetectedObjects(c,l,u,d,p,f){const h=p.length,g=[];for(let m=0;m<h;m++){const y=[];for(let C=0;C<4;C++)y[C]=u[4*p[m]+C];const b=y[0]*l,v=y[1]*c,x=y[2]*l,$=y[3]*c;y[0]=v,y[1]=b,y[2]=$-v,y[3]=x-b,g.push({bbox:y,class:o[f[p[m]]+1].displayName,score:d[p[m]]})}return g}calculateMaxScores(c,l,u){const d=[],p=[];for(let f=0;f<l;f++){let h=Number.MIN_VALUE,g=-1;for(let m=0;m<u;m++)c[f*u+m]>h&&(h=c[f*u+m],g=m);d[f]=h,p[f]=g}return[d,p]}async detect(c,l=20,u=.5){return this.infer(c,l,u)}dispose(){this.model!=null&&this.model.dispose()}}t.ObjectDetection=a,t.load=async function(i={}){if(r==null)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const c=i.base||"lite_mobilenet_v2",l=i.modelUrl;if(["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(c)===-1)throw new Error(`ObjectDetection constructed with invalid base model ${c}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const u=new a(c,l);return await u.load(),u},t.version="2.2.3",Object.defineProperty(t,"__esModule",{value:!0})})})(hh,hh.exports);var S7=hh.exports;const E7=new RegExp("([\\p{Ll}\\d])(\\p{Lu})","gu"),_7=new RegExp("(\\p{Lu})([\\p{Lu}][\\p{Ll}])","gu"),I7=new RegExp("(\\d)\\p{Ll}|(\\p{L})\\d","u"),k7=/[^\p{L}\d]+/giu,Tx="$1\0$2",Sx="";function cT(n){let e=n.trim();e=e.replace(E7,Tx).replace(_7,Tx),e=e.replace(k7,"\0");let t=0,s=e.length;for(;e.charAt(t)==="\0";)t++;if(t===s)return[];for(;e.charAt(s-1)==="\0";)s--;return e.slice(t,s).split(/\0/g)}function A7(n){const e=cT(n);for(let t=0;t<e.length;t++){const s=e[t],r=I7.exec(s);if(r){const o=r.index+(r[1]??r[2]).length;e.splice(t,1,s.slice(0,o),s.slice(o))}}return e}function R7(n,e){const[t,s,r]=P7(n,e),o=O7(e==null?void 0:e.locale),a=D7(e==null?void 0:e.locale);return t+s.map(F7(o,a)).join((e==null?void 0:e.delimiter)??" ")+r}function O7(n){return n===!1?e=>e.toLowerCase():e=>e.toLocaleLowerCase(n)}function D7(n){return n===!1?e=>e.toUpperCase():e=>e.toLocaleUpperCase(n)}function F7(n,e){return t=>`${e(t[0])}${n(t.slice(1))}`}function P7(n,e={}){const t=e.split??(e.separateNumbers?A7:cT),s=e.prefixCharacters??Sx,r=e.suffixCharacters??Sx;let o=0,a=n.length;for(;o<n.length;){const i=n.charAt(o);if(!s.includes(i))break;o++}for(;a>o;){const i=a-1,c=n.charAt(i);if(!r.includes(c))break;a=i}return[n.slice(0,o),t(n.slice(o,a)),n.slice(a)]}const L7="/tensorflow-vue/assets/tf_logo_social-D1d0KdHk.png",V7=(n,e)=>{const t=n.__vccOpts||n;for(const[s,r]of e)t[s]=r;return t},M7=document.getElementById("videoElement"),B7=document.getElementById("imageElement"),W7=mE({name:"App",setup(){const n=Na(B7),e=Na(M7),t=Na(!1),s=Na(!0),r=Na([]);let o;G0(()=>{a()});async function a(){o=await S7.load(),s.value=!1}async function i(){var m;const d=n.value,p=await o.detect(d);r.value=p,r.value.length||r.value.push({class:"No objects detected, please try again"}),console.log(p,d);const f=document.createElement("canvas"),h=f.getContext("2d");h.canvas.width=d.clientWidth,h.canvas.height=d.clientHeight,h.drawImage(d,0,0,d.clientWidth,d.clientHeight),h.strokeStyle="#39ff14",h.font="15px Arial",(m=r.value)==null||m.forEach(y=>{h.fillStyle="#FFFF00",h.fillText(`${R7(y.class)} (${Math.round(y.score*100)}%)`,y.bbox[0]+5,y.bbox[1]+20),h.strokeRect(...y.bbox)});const g=f.toDataURL("image/png");n.value.setAttribute("src",g)}async function c(){navigator.mediaDevices.getUserMedia&&navigator.mediaDevices.getUserMedia({video:!0}).then(d=>{t.value=!0,e.value.srcObject=d})}function l(){e.value.srcObject.getTracks().map(f=>f.stop()),t.value=!1}function u(){const d=document.createElement("canvas");d.getContext("2d").drawImage(e.value,0,0,d.width,d.height);const f=d.toDataURL("image/png");n.value.setAttribute("src",f),r.value=[]}return{imgRef:n,detect:i,result:r,isStreaming:t,videoRef:e,openCamera:c,stopStreaming:l,snapshot:u}}}),z7={class:"container"},U7=Mt("h3",null,"Object recognition with Tensorflow",-1),G7={class:"mb-3"},H7={key:0},j7={key:1,class:""},K7=Mt("span",null,"Detect Object",-1),q7=[K7],X7={key:2},Y7={class:"image-container mb-3"},Q7={class:"border"},Z7={ref:"videoRef",autoplay:"true",width:"50%",height:"50%",id:"videoElement"},J7={class:"border"},e9={src:L7,class:"image",ref:"imgRef",alt:"image",crossorigin:"anonymous",id:"imageElement"};function t9(n,e,t,s,r,o){return Aa(),Qc("div",z7,[U7,Mt("div",G7,[n.isStreaming?(Aa(),Qc("div",j7,[Mt("button",{onClick:e[1]||(e[1]=(...a)=>n.stopStreaming&&n.stopStreaming(...a)),class:"btn btn-light"},"Stop Streaming"),Mt("button",{onClick:e[2]||(e[2]=(...a)=>n.snapshot&&n.snapshot(...a)),class:"btn btn-light"},"Snapshot"),Mt("button",{onClick:e[3]||(e[3]=(...a)=>n.detect&&n.detect(...a)),class:"btn btn-light"},q7)])):(Aa(),Qc("div",H7,[Mt("button",{class:"btn btn-light",onClick:e[0]||(e[0]=(...a)=>n.openCamera&&n.openCamera(...a))},"Open Camera")])),n.result.length>0?(Aa(),Qc("div",X7,[Mt("p",null,$S(n.result.map(a=>a.class).join(", ")),1)])):ZE("",!0)]),Mt("div",Y7,[Mt("div",Q7,[Mt("video",Z7,null,512)]),Mt("div",J7,[Mt("img",e9,null,512)])])])}const n9=V7(W7,[["render",t9]]);var Wt="top",fn="bottom",hn="right",zt="left",Pp="auto",wa=[Wt,fn,hn,zt],eo="start",Jo="end",lT="clippingParents",wy="viewport",vo="popper",uT="reference",Sh=wa.reduce(function(n,e){return n.concat([e+"-"+eo,e+"-"+Jo])},[]),vy=[].concat(wa,[Pp]).reduce(function(n,e){return n.concat([e,e+"-"+eo,e+"-"+Jo])},[]),dT="beforeRead",pT="read",fT="afterRead",hT="beforeMain",mT="main",gT="afterMain",yT="beforeWrite",bT="write",xT="afterWrite",wT=[dT,pT,fT,hT,mT,gT,yT,bT,xT];function cs(n){return n?(n.nodeName||"").toLowerCase():null}function mn(n){if(n==null)return window;if(n.toString()!=="[object Window]"){var e=n.ownerDocument;return e&&e.defaultView||window}return n}function to(n){var e=mn(n).Element;return n instanceof e||n instanceof Element}function Nn(n){var e=mn(n).HTMLElement;return n instanceof e||n instanceof HTMLElement}function $y(n){if(typeof ShadowRoot>"u")return!1;var e=mn(n).ShadowRoot;return n instanceof e||n instanceof ShadowRoot}function s9(n){var e=n.state;Object.keys(e.elements).forEach(function(t){var s=e.styles[t]||{},r=e.attributes[t]||{},o=e.elements[t];!Nn(o)||!cs(o)||(Object.assign(o.style,s),Object.keys(r).forEach(function(a){var i=r[a];i===!1?o.removeAttribute(a):o.setAttribute(a,i===!0?"":i)}))})}function r9(n){var e=n.state,t={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,t.popper),e.styles=t,e.elements.arrow&&Object.assign(e.elements.arrow.style,t.arrow),function(){Object.keys(e.elements).forEach(function(s){var r=e.elements[s],o=e.attributes[s]||{},a=Object.keys(e.styles.hasOwnProperty(s)?e.styles[s]:t[s]),i=a.reduce(function(c,l){return c[l]="",c},{});!Nn(r)||!cs(r)||(Object.assign(r.style,i),Object.keys(o).forEach(function(c){r.removeAttribute(c)}))})}}const Cy={name:"applyStyles",enabled:!0,phase:"write",fn:s9,effect:r9,requires:["computeStyles"]};function es(n){return n.split("-")[0]}var Wr=Math.max,eu=Math.min,ea=Math.round;function Eh(){var n=navigator.userAgentData;return n!=null&&n.brands&&Array.isArray(n.brands)?n.brands.map(function(e){return e.brand+"/"+e.version}).join(" "):navigator.userAgent}function vT(){return!/^((?!chrome|android).)*safari/i.test(Eh())}function ta(n,e,t){e===void 0&&(e=!1),t===void 0&&(t=!1);var s=n.getBoundingClientRect(),r=1,o=1;e&&Nn(n)&&(r=n.offsetWidth>0&&ea(s.width)/n.offsetWidth||1,o=n.offsetHeight>0&&ea(s.height)/n.offsetHeight||1);var a=to(n)?mn(n):window,i=a.visualViewport,c=!vT()&&t,l=(s.left+(c&&i?i.offsetLeft:0))/r,u=(s.top+(c&&i?i.offsetTop:0))/o,d=s.width/r,p=s.height/o;return{width:d,height:p,top:u,right:l+d,bottom:u+p,left:l,x:l,y:u}}function Ny(n){var e=ta(n),t=n.offsetWidth,s=n.offsetHeight;return Math.abs(e.width-t)<=1&&(t=e.width),Math.abs(e.height-s)<=1&&(s=e.height),{x:n.offsetLeft,y:n.offsetTop,width:t,height:s}}function $T(n,e){var t=e.getRootNode&&e.getRootNode();if(n.contains(e))return!0;if(t&&$y(t)){var s=e;do{if(s&&n.isSameNode(s))return!0;s=s.parentNode||s.host}while(s)}return!1}function Ss(n){return mn(n).getComputedStyle(n)}function o9(n){return["table","td","th"].indexOf(cs(n))>=0}function gr(n){return((to(n)?n.ownerDocument:n.document)||window.document).documentElement}function Lp(n){return cs(n)==="html"?n:n.assignedSlot||n.parentNode||($y(n)?n.host:null)||gr(n)}function Ex(n){return!Nn(n)||Ss(n).position==="fixed"?null:n.offsetParent}function a9(n){var e=/firefox/i.test(Eh()),t=/Trident/i.test(Eh());if(t&&Nn(n)){var s=Ss(n);if(s.position==="fixed")return null}var r=Lp(n);for($y(r)&&(r=r.host);Nn(r)&&["html","body"].indexOf(cs(r))<0;){var o=Ss(r);if(o.transform!=="none"||o.perspective!=="none"||o.contain==="paint"||["transform","perspective"].indexOf(o.willChange)!==-1||e&&o.willChange==="filter"||e&&o.filter&&o.filter!=="none")return r;r=r.parentNode}return null}function Mc(n){for(var e=mn(n),t=Ex(n);t&&o9(t)&&Ss(t).position==="static";)t=Ex(t);return t&&(cs(t)==="html"||cs(t)==="body"&&Ss(t).position==="static")?e:t||a9(n)||e}function Ty(n){return["top","bottom"].indexOf(n)>=0?"x":"y"}function Wa(n,e,t){return Wr(n,eu(e,t))}function i9(n,e,t){var s=Wa(n,e,t);return s>t?t:s}function CT(){return{top:0,right:0,bottom:0,left:0}}function NT(n){return Object.assign({},CT(),n)}function TT(n,e){return e.reduce(function(t,s){return t[s]=n,t},{})}var c9=function(e,t){return e=typeof e=="function"?e(Object.assign({},t.rects,{placement:t.placement})):e,NT(typeof e!="number"?e:TT(e,wa))};function l9(n){var e,t=n.state,s=n.name,r=n.options,o=t.elements.arrow,a=t.modifiersData.popperOffsets,i=es(t.placement),c=Ty(i),l=[zt,hn].indexOf(i)>=0,u=l?"height":"width";if(!(!o||!a)){var d=c9(r.padding,t),p=Ny(o),f=c==="y"?Wt:zt,h=c==="y"?fn:hn,g=t.rects.reference[u]+t.rects.reference[c]-a[c]-t.rects.popper[u],m=a[c]-t.rects.reference[c],y=Mc(o),b=y?c==="y"?y.clientHeight||0:y.clientWidth||0:0,v=g/2-m/2,x=d[f],$=b-p[u]-d[h],C=b/2-p[u]/2+v,S=Wa(x,C,$),E=c;t.modifiersData[s]=(e={},e[E]=S,e.centerOffset=S-C,e)}}function u9(n){var e=n.state,t=n.options,s=t.element,r=s===void 0?"[data-popper-arrow]":s;r!=null&&(typeof r=="string"&&(r=e.elements.popper.querySelector(r),!r)||$T(e.elements.popper,r)&&(e.elements.arrow=r))}const ST={name:"arrow",enabled:!0,phase:"main",fn:l9,effect:u9,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function na(n){return n.split("-")[1]}var d9={top:"auto",right:"auto",bottom:"auto",left:"auto"};function p9(n,e){var t=n.x,s=n.y,r=e.devicePixelRatio||1;return{x:ea(t*r)/r||0,y:ea(s*r)/r||0}}function _x(n){var e,t=n.popper,s=n.popperRect,r=n.placement,o=n.variation,a=n.offsets,i=n.position,c=n.gpuAcceleration,l=n.adaptive,u=n.roundOffsets,d=n.isFixed,p=a.x,f=p===void 0?0:p,h=a.y,g=h===void 0?0:h,m=typeof u=="function"?u({x:f,y:g}):{x:f,y:g};f=m.x,g=m.y;var y=a.hasOwnProperty("x"),b=a.hasOwnProperty("y"),v=zt,x=Wt,$=window;if(l){var C=Mc(t),S="clientHeight",E="clientWidth";if(C===mn(t)&&(C=gr(t),Ss(C).position!=="static"&&i==="absolute"&&(S="scrollHeight",E="scrollWidth")),C=C,r===Wt||(r===zt||r===hn)&&o===Jo){x=fn;var R=d&&C===$&&$.visualViewport?$.visualViewport.height:C[S];g-=R-s.height,g*=c?1:-1}if(r===zt||(r===Wt||r===fn)&&o===Jo){v=hn;var A=d&&C===$&&$.visualViewport?$.visualViewport.width:C[E];f-=A-s.width,f*=c?1:-1}}var D=Object.assign({position:i},l&&d9),L=u===!0?p9({x:f,y:g},mn(t)):{x:f,y:g};if(f=L.x,g=L.y,c){var F;return Object.assign({},D,(F={},F[x]=b?"0":"",F[v]=y?"0":"",F.transform=($.devicePixelRatio||1)<=1?"translate("+f+"px, "+g+"px)":"translate3d("+f+"px, "+g+"px, 0)",F))}return Object.assign({},D,(e={},e[x]=b?g+"px":"",e[v]=y?f+"px":"",e.transform="",e))}function f9(n){var e=n.state,t=n.options,s=t.gpuAcceleration,r=s===void 0?!0:s,o=t.adaptive,a=o===void 0?!0:o,i=t.roundOffsets,c=i===void 0?!0:i,l={placement:es(e.placement),variation:na(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:r,isFixed:e.options.strategy==="fixed"};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,_x(Object.assign({},l,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:a,roundOffsets:c})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,_x(Object.assign({},l,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:c})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}const Sy={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:f9,data:{}};var ll={passive:!0};function h9(n){var e=n.state,t=n.instance,s=n.options,r=s.scroll,o=r===void 0?!0:r,a=s.resize,i=a===void 0?!0:a,c=mn(e.elements.popper),l=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&l.forEach(function(u){u.addEventListener("scroll",t.update,ll)}),i&&c.addEventListener("resize",t.update,ll),function(){o&&l.forEach(function(u){u.removeEventListener("scroll",t.update,ll)}),i&&c.removeEventListener("resize",t.update,ll)}}const Ey={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:h9,data:{}};var m9={left:"right",right:"left",bottom:"top",top:"bottom"};function Nl(n){return n.replace(/left|right|bottom|top/g,function(e){return m9[e]})}var g9={start:"end",end:"start"};function Ix(n){return n.replace(/start|end/g,function(e){return g9[e]})}function _y(n){var e=mn(n),t=e.pageXOffset,s=e.pageYOffset;return{scrollLeft:t,scrollTop:s}}function Iy(n){return ta(gr(n)).left+_y(n).scrollLeft}function y9(n,e){var t=mn(n),s=gr(n),r=t.visualViewport,o=s.clientWidth,a=s.clientHeight,i=0,c=0;if(r){o=r.width,a=r.height;var l=vT();(l||!l&&e==="fixed")&&(i=r.offsetLeft,c=r.offsetTop)}return{width:o,height:a,x:i+Iy(n),y:c}}function b9(n){var e,t=gr(n),s=_y(n),r=(e=n.ownerDocument)==null?void 0:e.body,o=Wr(t.scrollWidth,t.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),a=Wr(t.scrollHeight,t.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0),i=-s.scrollLeft+Iy(n),c=-s.scrollTop;return Ss(r||t).direction==="rtl"&&(i+=Wr(t.clientWidth,r?r.clientWidth:0)-o),{width:o,height:a,x:i,y:c}}function ky(n){var e=Ss(n),t=e.overflow,s=e.overflowX,r=e.overflowY;return/auto|scroll|overlay|hidden/.test(t+r+s)}function ET(n){return["html","body","#document"].indexOf(cs(n))>=0?n.ownerDocument.body:Nn(n)&&ky(n)?n:ET(Lp(n))}function za(n,e){var t;e===void 0&&(e=[]);var s=ET(n),r=s===((t=n.ownerDocument)==null?void 0:t.body),o=mn(s),a=r?[o].concat(o.visualViewport||[],ky(s)?s:[]):s,i=e.concat(a);return r?i:i.concat(za(Lp(a)))}function _h(n){return Object.assign({},n,{left:n.x,top:n.y,right:n.x+n.width,bottom:n.y+n.height})}function x9(n,e){var t=ta(n,!1,e==="fixed");return t.top=t.top+n.clientTop,t.left=t.left+n.clientLeft,t.bottom=t.top+n.clientHeight,t.right=t.left+n.clientWidth,t.width=n.clientWidth,t.height=n.clientHeight,t.x=t.left,t.y=t.top,t}function kx(n,e,t){return e===wy?_h(y9(n,t)):to(e)?x9(e,t):_h(b9(gr(n)))}function w9(n){var e=za(Lp(n)),t=["absolute","fixed"].indexOf(Ss(n).position)>=0,s=t&&Nn(n)?Mc(n):n;return to(s)?e.filter(function(r){return to(r)&&$T(r,s)&&cs(r)!=="body"}):[]}function v9(n,e,t,s){var r=e==="clippingParents"?w9(n):[].concat(e),o=[].concat(r,[t]),a=o[0],i=o.reduce(function(c,l){var u=kx(n,l,s);return c.top=Wr(u.top,c.top),c.right=eu(u.right,c.right),c.bottom=eu(u.bottom,c.bottom),c.left=Wr(u.left,c.left),c},kx(n,a,s));return i.width=i.right-i.left,i.height=i.bottom-i.top,i.x=i.left,i.y=i.top,i}function _T(n){var e=n.reference,t=n.element,s=n.placement,r=s?es(s):null,o=s?na(s):null,a=e.x+e.width/2-t.width/2,i=e.y+e.height/2-t.height/2,c;switch(r){case Wt:c={x:a,y:e.y-t.height};break;case fn:c={x:a,y:e.y+e.height};break;case hn:c={x:e.x+e.width,y:i};break;case zt:c={x:e.x-t.width,y:i};break;default:c={x:e.x,y:e.y}}var l=r?Ty(r):null;if(l!=null){var u=l==="y"?"height":"width";switch(o){case eo:c[l]=c[l]-(e[u]/2-t[u]/2);break;case Jo:c[l]=c[l]+(e[u]/2-t[u]/2);break}}return c}function sa(n,e){e===void 0&&(e={});var t=e,s=t.placement,r=s===void 0?n.placement:s,o=t.strategy,a=o===void 0?n.strategy:o,i=t.boundary,c=i===void 0?lT:i,l=t.rootBoundary,u=l===void 0?wy:l,d=t.elementContext,p=d===void 0?vo:d,f=t.altBoundary,h=f===void 0?!1:f,g=t.padding,m=g===void 0?0:g,y=NT(typeof m!="number"?m:TT(m,wa)),b=p===vo?uT:vo,v=n.rects.popper,x=n.elements[h?b:p],$=v9(to(x)?x:x.contextElement||gr(n.elements.popper),c,u,a),C=ta(n.elements.reference),S=_T({reference:C,element:v,strategy:"absolute",placement:r}),E=_h(Object.assign({},v,S)),R=p===vo?E:C,A={top:$.top-R.top+y.top,bottom:R.bottom-$.bottom+y.bottom,left:$.left-R.left+y.left,right:R.right-$.right+y.right},D=n.modifiersData.offset;if(p===vo&&D){var L=D[r];Object.keys(A).forEach(function(F){var B=[hn,fn].indexOf(F)>=0?1:-1,W=[Wt,fn].indexOf(F)>=0?"y":"x";A[F]+=L[W]*B})}return A}function $9(n,e){e===void 0&&(e={});var t=e,s=t.placement,r=t.boundary,o=t.rootBoundary,a=t.padding,i=t.flipVariations,c=t.allowedAutoPlacements,l=c===void 0?vy:c,u=na(s),d=u?i?Sh:Sh.filter(function(h){return na(h)===u}):wa,p=d.filter(function(h){return l.indexOf(h)>=0});p.length===0&&(p=d);var f=p.reduce(function(h,g){return h[g]=sa(n,{placement:g,boundary:r,rootBoundary:o,padding:a})[es(g)],h},{});return Object.keys(f).sort(function(h,g){return f[h]-f[g]})}function C9(n){if(es(n)===Pp)return[];var e=Nl(n);return[Ix(n),e,Ix(e)]}function N9(n){var e=n.state,t=n.options,s=n.name;if(!e.modifiersData[s]._skip){for(var r=t.mainAxis,o=r===void 0?!0:r,a=t.altAxis,i=a===void 0?!0:a,c=t.fallbackPlacements,l=t.padding,u=t.boundary,d=t.rootBoundary,p=t.altBoundary,f=t.flipVariations,h=f===void 0?!0:f,g=t.allowedAutoPlacements,m=e.options.placement,y=es(m),b=y===m,v=c||(b||!h?[Nl(m)]:C9(m)),x=[m].concat(v).reduce(function(oe,se){return oe.concat(es(se)===Pp?$9(e,{placement:se,boundary:u,rootBoundary:d,padding:l,flipVariations:h,allowedAutoPlacements:g}):se)},[]),$=e.rects.reference,C=e.rects.popper,S=new Map,E=!0,R=x[0],A=0;A<x.length;A++){var D=x[A],L=es(D),F=na(D)===eo,B=[Wt,fn].indexOf(L)>=0,W=B?"width":"height",V=sa(e,{placement:D,boundary:u,rootBoundary:d,altBoundary:p,padding:l}),z=B?F?hn:zt:F?fn:Wt;$[W]>C[W]&&(z=Nl(z));var M=Nl(z),j=[];if(o&&j.push(V[L]<=0),i&&j.push(V[z]<=0,V[M]<=0),j.every(function(oe){return oe})){R=D,E=!1;break}S.set(D,j)}if(E)for(var J=h?3:1,Z=function(se){var ae=x.find(function(fe){var be=S.get(fe);if(be)return be.slice(0,se).every(function(xe){return xe})});if(ae)return R=ae,"break"},ee=J;ee>0;ee--){var ne=Z(ee);if(ne==="break")break}e.placement!==R&&(e.modifiersData[s]._skip=!0,e.placement=R,e.reset=!0)}}const IT={name:"flip",enabled:!0,phase:"main",fn:N9,requiresIfExists:["offset"],data:{_skip:!1}};function Ax(n,e,t){return t===void 0&&(t={x:0,y:0}),{top:n.top-e.height-t.y,right:n.right-e.width+t.x,bottom:n.bottom-e.height+t.y,left:n.left-e.width-t.x}}function Rx(n){return[Wt,hn,fn,zt].some(function(e){return n[e]>=0})}function T9(n){var e=n.state,t=n.name,s=e.rects.reference,r=e.rects.popper,o=e.modifiersData.preventOverflow,a=sa(e,{elementContext:"reference"}),i=sa(e,{altBoundary:!0}),c=Ax(a,s),l=Ax(i,r,o),u=Rx(c),d=Rx(l);e.modifiersData[t]={referenceClippingOffsets:c,popperEscapeOffsets:l,isReferenceHidden:u,hasPopperEscaped:d},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}const kT={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:T9};function S9(n,e,t){var s=es(n),r=[zt,Wt].indexOf(s)>=0?-1:1,o=typeof t=="function"?t(Object.assign({},e,{placement:n})):t,a=o[0],i=o[1];return a=a||0,i=(i||0)*r,[zt,hn].indexOf(s)>=0?{x:i,y:a}:{x:a,y:i}}function E9(n){var e=n.state,t=n.options,s=n.name,r=t.offset,o=r===void 0?[0,0]:r,a=vy.reduce(function(u,d){return u[d]=S9(d,e.rects,o),u},{}),i=a[e.placement],c=i.x,l=i.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=c,e.modifiersData.popperOffsets.y+=l),e.modifiersData[s]=a}const AT={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:E9};function _9(n){var e=n.state,t=n.name;e.modifiersData[t]=_T({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})}const Ay={name:"popperOffsets",enabled:!0,phase:"read",fn:_9,data:{}};function I9(n){return n==="x"?"y":"x"}function k9(n){var e=n.state,t=n.options,s=n.name,r=t.mainAxis,o=r===void 0?!0:r,a=t.altAxis,i=a===void 0?!1:a,c=t.boundary,l=t.rootBoundary,u=t.altBoundary,d=t.padding,p=t.tether,f=p===void 0?!0:p,h=t.tetherOffset,g=h===void 0?0:h,m=sa(e,{boundary:c,rootBoundary:l,padding:d,altBoundary:u}),y=es(e.placement),b=na(e.placement),v=!b,x=Ty(y),$=I9(x),C=e.modifiersData.popperOffsets,S=e.rects.reference,E=e.rects.popper,R=typeof g=="function"?g(Object.assign({},e.rects,{placement:e.placement})):g,A=typeof R=="number"?{mainAxis:R,altAxis:R}:Object.assign({mainAxis:0,altAxis:0},R),D=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,L={x:0,y:0};if(C){if(o){var F,B=x==="y"?Wt:zt,W=x==="y"?fn:hn,V=x==="y"?"height":"width",z=C[x],M=z+m[B],j=z-m[W],J=f?-E[V]/2:0,Z=b===eo?S[V]:E[V],ee=b===eo?-E[V]:-S[V],ne=e.elements.arrow,oe=f&&ne?Ny(ne):{width:0,height:0},se=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:CT(),ae=se[B],fe=se[W],be=Wa(0,S[V],oe[V]),xe=v?S[V]/2-J-be-ae-A.mainAxis:Z-be-ae-A.mainAxis,Ce=v?-S[V]/2+J+be+fe+A.mainAxis:ee+be+fe+A.mainAxis,Ne=e.elements.arrow&&Mc(e.elements.arrow),De=Ne?x==="y"?Ne.clientTop||0:Ne.clientLeft||0:0,_=(F=D==null?void 0:D[x])!=null?F:0,O=z+xe-_-De,U=z+Ce-_,H=Wa(f?eu(M,O):M,z,f?Wr(j,U):j);C[x]=H,L[x]=H-z}if(i){var K,Y=x==="x"?Wt:zt,ie=x==="x"?fn:hn,X=C[$],re=$==="y"?"height":"width",Q=X+m[Y],ue=X-m[ie],he=[Wt,zt].indexOf(y)!==-1,me=(K=D==null?void 0:D[$])!=null?K:0,ve=he?Q:X-S[re]-E[re]-me+A.altAxis,Se=he?X+S[re]+E[re]-me-A.altAxis:ue,Ie=f&&he?i9(ve,X,Se):Wa(f?ve:Q,X,f?Se:ue);C[$]=Ie,L[$]=Ie-X}e.modifiersData[s]=L}}const RT={name:"preventOverflow",enabled:!0,phase:"main",fn:k9,requiresIfExists:["offset"]};function A9(n){return{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop}}function R9(n){return n===mn(n)||!Nn(n)?_y(n):A9(n)}function O9(n){var e=n.getBoundingClientRect(),t=ea(e.width)/n.offsetWidth||1,s=ea(e.height)/n.offsetHeight||1;return t!==1||s!==1}function D9(n,e,t){t===void 0&&(t=!1);var s=Nn(e),r=Nn(e)&&O9(e),o=gr(e),a=ta(n,r,t),i={scrollLeft:0,scrollTop:0},c={x:0,y:0};return(s||!s&&!t)&&((cs(e)!=="body"||ky(o))&&(i=R9(e)),Nn(e)?(c=ta(e,!0),c.x+=e.clientLeft,c.y+=e.clientTop):o&&(c.x=Iy(o))),{x:a.left+i.scrollLeft-c.x,y:a.top+i.scrollTop-c.y,width:a.width,height:a.height}}function F9(n){var e=new Map,t=new Set,s=[];n.forEach(function(o){e.set(o.name,o)});function r(o){t.add(o.name);var a=[].concat(o.requires||[],o.requiresIfExists||[]);a.forEach(function(i){if(!t.has(i)){var c=e.get(i);c&&r(c)}}),s.push(o)}return n.forEach(function(o){t.has(o.name)||r(o)}),s}function P9(n){var e=F9(n);return wT.reduce(function(t,s){return t.concat(e.filter(function(r){return r.phase===s}))},[])}function L9(n){var e;return function(){return e||(e=new Promise(function(t){Promise.resolve().then(function(){e=void 0,t(n())})})),e}}function V9(n){var e=n.reduce(function(t,s){var r=t[s.name];return t[s.name]=r?Object.assign({},r,s,{options:Object.assign({},r.options,s.options),data:Object.assign({},r.data,s.data)}):s,t},{});return Object.keys(e).map(function(t){return e[t]})}var Ox={placement:"bottom",modifiers:[],strategy:"absolute"};function Dx(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return!e.some(function(s){return!(s&&typeof s.getBoundingClientRect=="function")})}function Vp(n){n===void 0&&(n={});var e=n,t=e.defaultModifiers,s=t===void 0?[]:t,r=e.defaultOptions,o=r===void 0?Ox:r;return function(i,c,l){l===void 0&&(l=o);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},Ox,o),modifiersData:{},elements:{reference:i,popper:c},attributes:{},styles:{}},d=[],p=!1,f={state:u,setOptions:function(y){var b=typeof y=="function"?y(u.options):y;g(),u.options=Object.assign({},o,u.options,b),u.scrollParents={reference:to(i)?za(i):i.contextElement?za(i.contextElement):[],popper:za(c)};var v=P9(V9([].concat(s,u.options.modifiers)));return u.orderedModifiers=v.filter(function(x){return x.enabled}),h(),f.update()},forceUpdate:function(){if(!p){var y=u.elements,b=y.reference,v=y.popper;if(Dx(b,v)){u.rects={reference:D9(b,Mc(v),u.options.strategy==="fixed"),popper:Ny(v)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(A){return u.modifiersData[A.name]=Object.assign({},A.data)});for(var x=0;x<u.orderedModifiers.length;x++){if(u.reset===!0){u.reset=!1,x=-1;continue}var $=u.orderedModifiers[x],C=$.fn,S=$.options,E=S===void 0?{}:S,R=$.name;typeof C=="function"&&(u=C({state:u,options:E,name:R,instance:f})||u)}}}},update:L9(function(){return new Promise(function(m){f.forceUpdate(),m(u)})}),destroy:function(){g(),p=!0}};if(!Dx(i,c))return f;f.setOptions(l).then(function(m){!p&&l.onFirstUpdate&&l.onFirstUpdate(m)});function h(){u.orderedModifiers.forEach(function(m){var y=m.name,b=m.options,v=b===void 0?{}:b,x=m.effect;if(typeof x=="function"){var $=x({state:u,name:y,instance:f,options:v}),C=function(){};d.push($||C)}})}function g(){d.forEach(function(m){return m()}),d=[]}return f}}var M9=Vp(),B9=[Ey,Ay,Sy,Cy],W9=Vp({defaultModifiers:B9}),z9=[Ey,Ay,Sy,Cy,AT,IT,RT,ST,kT],Ry=Vp({defaultModifiers:z9});const OT=Object.freeze(Object.defineProperty({__proto__:null,afterMain:gT,afterRead:fT,afterWrite:xT,applyStyles:Cy,arrow:ST,auto:Pp,basePlacements:wa,beforeMain:hT,beforeRead:dT,beforeWrite:yT,bottom:fn,clippingParents:lT,computeStyles:Sy,createPopper:Ry,createPopperBase:M9,createPopperLite:W9,detectOverflow:sa,end:Jo,eventListeners:Ey,flip:IT,hide:kT,left:zt,main:mT,modifierPhases:wT,offset:AT,placements:vy,popper:vo,popperGenerator:Vp,popperOffsets:Ay,preventOverflow:RT,read:pT,reference:uT,right:hn,start:eo,top:Wt,variationPlacements:Sh,viewport:wy,write:bT},Symbol.toStringTag,{value:"Module"}));/*!
  * Bootstrap v5.3.2 (https://getbootstrap.com/)
  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */const Ls=new Map,hf={set(n,e,t){Ls.has(n)||Ls.set(n,new Map);const s=Ls.get(n);if(!s.has(e)&&s.size!==0){console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`);return}s.set(e,t)},get(n,e){return Ls.has(n)&&Ls.get(n).get(e)||null},remove(n,e){if(!Ls.has(n))return;const t=Ls.get(n);t.delete(e),t.size===0&&Ls.delete(n)}},U9=1e6,G9=1e3,Ih="transitionend",DT=n=>(n&&window.CSS&&window.CSS.escape&&(n=n.replace(/#([^\s"#']+)/g,(e,t)=>`#${CSS.escape(t)}`)),n),H9=n=>n==null?`${n}`:Object.prototype.toString.call(n).match(/\s([a-z]+)/i)[1].toLowerCase(),j9=n=>{do n+=Math.floor(Math.random()*U9);while(document.getElementById(n));return n},K9=n=>{if(!n)return 0;let{transitionDuration:e,transitionDelay:t}=window.getComputedStyle(n);const s=Number.parseFloat(e),r=Number.parseFloat(t);return!s&&!r?0:(e=e.split(",")[0],t=t.split(",")[0],(Number.parseFloat(e)+Number.parseFloat(t))*G9)},FT=n=>{n.dispatchEvent(new Event(Ih))},ws=n=>!n||typeof n!="object"?!1:(typeof n.jquery<"u"&&(n=n[0]),typeof n.nodeType<"u"),rr=n=>ws(n)?n.jquery?n[0]:n:typeof n=="string"&&n.length>0?document.querySelector(DT(n)):null,va=n=>{if(!ws(n)||n.getClientRects().length===0)return!1;const e=getComputedStyle(n).getPropertyValue("visibility")==="visible",t=n.closest("details:not([open])");if(!t)return e;if(t!==n){const s=n.closest("summary");if(s&&s.parentNode!==t||s===null)return!1}return e},or=n=>!n||n.nodeType!==Node.ELEMENT_NODE||n.classList.contains("disabled")?!0:typeof n.disabled<"u"?n.disabled:n.hasAttribute("disabled")&&n.getAttribute("disabled")!=="false",PT=n=>{if(!document.documentElement.attachShadow)return null;if(typeof n.getRootNode=="function"){const e=n.getRootNode();return e instanceof ShadowRoot?e:null}return n instanceof ShadowRoot?n:n.parentNode?PT(n.parentNode):null},tu=()=>{},Bc=n=>{n.offsetHeight},LT=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,mf=[],q9=n=>{document.readyState==="loading"?(mf.length||document.addEventListener("DOMContentLoaded",()=>{for(const e of mf)e()}),mf.push(n)):n()},Tn=()=>document.documentElement.dir==="rtl",kn=n=>{q9(()=>{const e=LT();if(e){const t=n.NAME,s=e.fn[t];e.fn[t]=n.jQueryInterface,e.fn[t].Constructor=n,e.fn[t].noConflict=()=>(e.fn[t]=s,n.jQueryInterface)}})},Jt=(n,e=[],t=n)=>typeof n=="function"?n(...e):t,VT=(n,e,t=!0)=>{if(!t){Jt(n);return}const r=K9(e)+5;let o=!1;const a=({target:i})=>{i===e&&(o=!0,e.removeEventListener(Ih,a),Jt(n))};e.addEventListener(Ih,a),setTimeout(()=>{o||FT(e)},r)},Oy=(n,e,t,s)=>{const r=n.length;let o=n.indexOf(e);return o===-1?!t&&s?n[r-1]:n[0]:(o+=t?1:-1,s&&(o=(o+r)%r),n[Math.max(0,Math.min(o,r-1))])},X9=/[^.]*(?=\..*)\.|.*/,Y9=/\..*/,Q9=/::\d+$/,gf={};let Fx=1;const MT={mouseenter:"mouseover",mouseleave:"mouseout"},Z9=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function BT(n,e){return e&&`${e}::${Fx++}`||n.uidEvent||Fx++}function WT(n){const e=BT(n);return n.uidEvent=e,gf[e]=gf[e]||{},gf[e]}function J9(n,e){return function t(s){return Dy(s,{delegateTarget:n}),t.oneOff&&te.off(n,s.type,e),e.apply(n,[s])}}function eQ(n,e,t){return function s(r){const o=n.querySelectorAll(e);for(let{target:a}=r;a&&a!==this;a=a.parentNode)for(const i of o)if(i===a)return Dy(r,{delegateTarget:a}),s.oneOff&&te.off(n,r.type,e,t),t.apply(a,[r])}}function zT(n,e,t=null){return Object.values(n).find(s=>s.callable===e&&s.delegationSelector===t)}function UT(n,e,t){const s=typeof e=="string",r=s?t:e||t;let o=GT(n);return Z9.has(o)||(o=n),[s,r,o]}function Px(n,e,t,s,r){if(typeof e!="string"||!n)return;let[o,a,i]=UT(e,t,s);e in MT&&(a=(h=>function(g){if(!g.relatedTarget||g.relatedTarget!==g.delegateTarget&&!g.delegateTarget.contains(g.relatedTarget))return h.call(this,g)})(a));const c=WT(n),l=c[i]||(c[i]={}),u=zT(l,a,o?t:null);if(u){u.oneOff=u.oneOff&&r;return}const d=BT(a,e.replace(X9,"")),p=o?eQ(n,t,a):J9(n,a);p.delegationSelector=o?t:null,p.callable=a,p.oneOff=r,p.uidEvent=d,l[d]=p,n.addEventListener(i,p,o)}function kh(n,e,t,s,r){const o=zT(e[t],s,r);o&&(n.removeEventListener(t,o,!!r),delete e[t][o.uidEvent])}function tQ(n,e,t,s){const r=e[t]||{};for(const[o,a]of Object.entries(r))o.includes(s)&&kh(n,e,t,a.callable,a.delegationSelector)}function GT(n){return n=n.replace(Y9,""),MT[n]||n}const te={on(n,e,t,s){Px(n,e,t,s,!1)},one(n,e,t,s){Px(n,e,t,s,!0)},off(n,e,t,s){if(typeof e!="string"||!n)return;const[r,o,a]=UT(e,t,s),i=a!==e,c=WT(n),l=c[a]||{},u=e.startsWith(".");if(typeof o<"u"){if(!Object.keys(l).length)return;kh(n,c,a,o,r?t:null);return}if(u)for(const d of Object.keys(c))tQ(n,c,d,e.slice(1));for(const[d,p]of Object.entries(l)){const f=d.replace(Q9,"");(!i||e.includes(f))&&kh(n,c,a,p.callable,p.delegationSelector)}},trigger(n,e,t){if(typeof e!="string"||!n)return null;const s=LT(),r=GT(e),o=e!==r;let a=null,i=!0,c=!0,l=!1;o&&s&&(a=s.Event(e,t),s(n).trigger(a),i=!a.isPropagationStopped(),c=!a.isImmediatePropagationStopped(),l=a.isDefaultPrevented());const u=Dy(new Event(e,{bubbles:i,cancelable:!0}),t);return l&&u.preventDefault(),c&&n.dispatchEvent(u),u.defaultPrevented&&a&&a.preventDefault(),u}};function Dy(n,e={}){for(const[t,s]of Object.entries(e))try{n[t]=s}catch{Object.defineProperty(n,t,{configurable:!0,get(){return s}})}return n}function Lx(n){if(n==="true")return!0;if(n==="false")return!1;if(n===Number(n).toString())return Number(n);if(n===""||n==="null")return null;if(typeof n!="string")return n;try{return JSON.parse(decodeURIComponent(n))}catch{return n}}function yf(n){return n.replace(/[A-Z]/g,e=>`-${e.toLowerCase()}`)}const vs={setDataAttribute(n,e,t){n.setAttribute(`data-bs-${yf(e)}`,t)},removeDataAttribute(n,e){n.removeAttribute(`data-bs-${yf(e)}`)},getDataAttributes(n){if(!n)return{};const e={},t=Object.keys(n.dataset).filter(s=>s.startsWith("bs")&&!s.startsWith("bsConfig"));for(const s of t){let r=s.replace(/^bs/,"");r=r.charAt(0).toLowerCase()+r.slice(1,r.length),e[r]=Lx(n.dataset[s])}return e},getDataAttribute(n,e){return Lx(n.getAttribute(`data-bs-${yf(e)}`))}};class Wc{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(e){return e=this._mergeConfigObj(e),e=this._configAfterMerge(e),this._typeCheckConfig(e),e}_configAfterMerge(e){return e}_mergeConfigObj(e,t){const s=ws(t)?vs.getDataAttribute(t,"config"):{};return{...this.constructor.Default,...typeof s=="object"?s:{},...ws(t)?vs.getDataAttributes(t):{},...typeof e=="object"?e:{}}}_typeCheckConfig(e,t=this.constructor.DefaultType){for(const[s,r]of Object.entries(t)){const o=e[s],a=ws(o)?"element":H9(o);if(!new RegExp(r).test(a))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${s}" provided type "${a}" but expected type "${r}".`)}}}const nQ="5.3.2";class Gn extends Wc{constructor(e,t){super(),e=rr(e),e&&(this._element=e,this._config=this._getConfig(t),hf.set(this._element,this.constructor.DATA_KEY,this))}dispose(){hf.remove(this._element,this.constructor.DATA_KEY),te.off(this._element,this.constructor.EVENT_KEY);for(const e of Object.getOwnPropertyNames(this))this[e]=null}_queueCallback(e,t,s=!0){VT(e,t,s)}_getConfig(e){return e=this._mergeConfigObj(e,this._element),e=this._configAfterMerge(e),this._typeCheckConfig(e),e}static getInstance(e){return hf.get(rr(e),this.DATA_KEY)}static getOrCreateInstance(e,t={}){return this.getInstance(e)||new this(e,typeof t=="object"?t:null)}static get VERSION(){return nQ}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(e){return`${e}${this.EVENT_KEY}`}}const bf=n=>{let e=n.getAttribute("data-bs-target");if(!e||e==="#"){let t=n.getAttribute("href");if(!t||!t.includes("#")&&!t.startsWith("."))return null;t.includes("#")&&!t.startsWith("#")&&(t=`#${t.split("#")[1]}`),e=t&&t!=="#"?DT(t.trim()):null}return e},$e={find(n,e=document.documentElement){return[].concat(...Element.prototype.querySelectorAll.call(e,n))},findOne(n,e=document.documentElement){return Element.prototype.querySelector.call(e,n)},children(n,e){return[].concat(...n.children).filter(t=>t.matches(e))},parents(n,e){const t=[];let s=n.parentNode.closest(e);for(;s;)t.push(s),s=s.parentNode.closest(e);return t},prev(n,e){let t=n.previousElementSibling;for(;t;){if(t.matches(e))return[t];t=t.previousElementSibling}return[]},next(n,e){let t=n.nextElementSibling;for(;t;){if(t.matches(e))return[t];t=t.nextElementSibling}return[]},focusableChildren(n){const e=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(t=>`${t}:not([tabindex^="-"])`).join(",");return this.find(e,n).filter(t=>!or(t)&&va(t))},getSelectorFromElement(n){const e=bf(n);return e&&$e.findOne(e)?e:null},getElementFromSelector(n){const e=bf(n);return e?$e.findOne(e):null},getMultipleElementsFromSelector(n){const e=bf(n);return e?$e.find(e):[]}},Mp=(n,e="hide")=>{const t=`click.dismiss${n.EVENT_KEY}`,s=n.NAME;te.on(document,t,`[data-bs-dismiss="${s}"]`,function(r){if(["A","AREA"].includes(this.tagName)&&r.preventDefault(),or(this))return;const o=$e.getElementFromSelector(this)||this.closest(`.${s}`);n.getOrCreateInstance(o)[e]()})},sQ="alert",rQ="bs.alert",HT=`.${rQ}`,oQ=`close${HT}`,aQ=`closed${HT}`,iQ="fade",cQ="show";class Bp extends Gn{static get NAME(){return sQ}close(){if(te.trigger(this._element,oQ).defaultPrevented)return;this._element.classList.remove(cQ);const t=this._element.classList.contains(iQ);this._queueCallback(()=>this._destroyElement(),this._element,t)}_destroyElement(){this._element.remove(),te.trigger(this._element,aQ),this.dispose()}static jQueryInterface(e){return this.each(function(){const t=Bp.getOrCreateInstance(this);if(typeof e=="string"){if(t[e]===void 0||e.startsWith("_")||e==="constructor")throw new TypeError(`No method named "${e}"`);t[e](this)}})}}Mp(Bp,"close");kn(Bp);const lQ="button",uQ="bs.button",dQ=`.${uQ}`,pQ=".data-api",fQ="active",Vx='[data-bs-toggle="button"]',hQ=`click${dQ}${pQ}`;class Wp extends Gn{static get NAME(){return lQ}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle(fQ))}static jQueryInterface(e){return this.each(function(){const t=Wp.getOrCreateInstance(this);e==="toggle"&&t[e]()})}}te.on(document,hQ,Vx,n=>{n.preventDefault();const e=n.target.closest(Vx);Wp.getOrCreateInstance(e).toggle()});kn(Wp);const mQ="swipe",$a=".bs.swipe",gQ=`touchstart${$a}`,yQ=`touchmove${$a}`,bQ=`touchend${$a}`,xQ=`pointerdown${$a}`,wQ=`pointerup${$a}`,vQ="touch",$Q="pen",CQ="pointer-event",NQ=40,TQ={endCallback:null,leftCallback:null,rightCallback:null},SQ={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class nu extends Wc{constructor(e,t){super(),this._element=e,!(!e||!nu.isSupported())&&(this._config=this._getConfig(t),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return TQ}static get DefaultType(){return SQ}static get NAME(){return mQ}dispose(){te.off(this._element,$a)}_start(e){if(!this._supportPointerEvents){this._deltaX=e.touches[0].clientX;return}this._eventIsPointerPenTouch(e)&&(this._deltaX=e.clientX)}_end(e){this._eventIsPointerPenTouch(e)&&(this._deltaX=e.clientX-this._deltaX),this._handleSwipe(),Jt(this._config.endCallback)}_move(e){this._deltaX=e.touches&&e.touches.length>1?0:e.touches[0].clientX-this._deltaX}_handleSwipe(){const e=Math.abs(this._deltaX);if(e<=NQ)return;const t=e/this._deltaX;this._deltaX=0,t&&Jt(t>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(te.on(this._element,xQ,e=>this._start(e)),te.on(this._element,wQ,e=>this._end(e)),this._element.classList.add(CQ)):(te.on(this._element,gQ,e=>this._start(e)),te.on(this._element,yQ,e=>this._move(e)),te.on(this._element,bQ,e=>this._end(e)))}_eventIsPointerPenTouch(e){return this._supportPointerEvents&&(e.pointerType===$Q||e.pointerType===vQ)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const EQ="carousel",_Q="bs.carousel",yr=`.${_Q}`,jT=".data-api",IQ="ArrowLeft",kQ="ArrowRight",AQ=500,_a="next",yo="prev",$o="left",Tl="right",RQ=`slide${yr}`,xf=`slid${yr}`,OQ=`keydown${yr}`,DQ=`mouseenter${yr}`,FQ=`mouseleave${yr}`,PQ=`dragstart${yr}`,LQ=`load${yr}${jT}`,VQ=`click${yr}${jT}`,KT="carousel",ul="active",MQ="slide",BQ="carousel-item-end",WQ="carousel-item-start",zQ="carousel-item-next",UQ="carousel-item-prev",qT=".active",XT=".carousel-item",GQ=qT+XT,HQ=".carousel-item img",jQ=".carousel-indicators",KQ="[data-bs-slide], [data-bs-slide-to]",qQ='[data-bs-ride="carousel"]',XQ={[IQ]:Tl,[kQ]:$o},YQ={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},QQ={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class zc extends Gn{constructor(e,t){super(e,t),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=$e.findOne(jQ,this._element),this._addEventListeners(),this._config.ride===KT&&this.cycle()}static get Default(){return YQ}static get DefaultType(){return QQ}static get NAME(){return EQ}next(){this._slide(_a)}nextWhenVisible(){!document.hidden&&va(this._element)&&this.next()}prev(){this._slide(yo)}pause(){this._isSliding&&FT(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){if(this._config.ride){if(this._isSliding){te.one(this._element,xf,()=>this.cycle());return}this.cycle()}}to(e){const t=this._getItems();if(e>t.length-1||e<0)return;if(this._isSliding){te.one(this._element,xf,()=>this.to(e));return}const s=this._getItemIndex(this._getActive());if(s===e)return;const r=e>s?_a:yo;this._slide(r,t[e])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(e){return e.defaultInterval=e.interval,e}_addEventListeners(){this._config.keyboard&&te.on(this._element,OQ,e=>this._keydown(e)),this._config.pause==="hover"&&(te.on(this._element,DQ,()=>this.pause()),te.on(this._element,FQ,()=>this._maybeEnableCycle())),this._config.touch&&nu.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const s of $e.find(HQ,this._element))te.on(s,PQ,r=>r.preventDefault());const t={leftCallback:()=>this._slide(this._directionToOrder($o)),rightCallback:()=>this._slide(this._directionToOrder(Tl)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),AQ+this._config.interval))}};this._swipeHelper=new nu(this._element,t)}_keydown(e){if(/input|textarea/i.test(e.target.tagName))return;const t=XQ[e.key];t&&(e.preventDefault(),this._slide(this._directionToOrder(t)))}_getItemIndex(e){return this._getItems().indexOf(e)}_setActiveIndicatorElement(e){if(!this._indicatorsElement)return;const t=$e.findOne(qT,this._indicatorsElement);t.classList.remove(ul),t.removeAttribute("aria-current");const s=$e.findOne(`[data-bs-slide-to="${e}"]`,this._indicatorsElement);s&&(s.classList.add(ul),s.setAttribute("aria-current","true"))}_updateInterval(){const e=this._activeElement||this._getActive();if(!e)return;const t=Number.parseInt(e.getAttribute("data-bs-interval"),10);this._config.interval=t||this._config.defaultInterval}_slide(e,t=null){if(this._isSliding)return;const s=this._getActive(),r=e===_a,o=t||Oy(this._getItems(),s,r,this._config.wrap);if(o===s)return;const a=this._getItemIndex(o),i=f=>te.trigger(this._element,f,{relatedTarget:o,direction:this._orderToDirection(e),from:this._getItemIndex(s),to:a});if(i(RQ).defaultPrevented||!s||!o)return;const l=!!this._interval;this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(a),this._activeElement=o;const u=r?WQ:BQ,d=r?zQ:UQ;o.classList.add(d),Bc(o),s.classList.add(u),o.classList.add(u);const p=()=>{o.classList.remove(u,d),o.classList.add(ul),s.classList.remove(ul,d,u),this._isSliding=!1,i(xf)};this._queueCallback(p,s,this._isAnimated()),l&&this.cycle()}_isAnimated(){return this._element.classList.contains(MQ)}_getActive(){return $e.findOne(GQ,this._element)}_getItems(){return $e.find(XT,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(e){return Tn()?e===$o?yo:_a:e===$o?_a:yo}_orderToDirection(e){return Tn()?e===yo?$o:Tl:e===yo?Tl:$o}static jQueryInterface(e){return this.each(function(){const t=zc.getOrCreateInstance(this,e);if(typeof e=="number"){t.to(e);return}if(typeof e=="string"){if(t[e]===void 0||e.startsWith("_")||e==="constructor")throw new TypeError(`No method named "${e}"`);t[e]()}})}}te.on(document,VQ,KQ,function(n){const e=$e.getElementFromSelector(this);if(!e||!e.classList.contains(KT))return;n.preventDefault();const t=zc.getOrCreateInstance(e),s=this.getAttribute("data-bs-slide-to");if(s){t.to(s),t._maybeEnableCycle();return}if(vs.getDataAttribute(this,"slide")==="next"){t.next(),t._maybeEnableCycle();return}t.prev(),t._maybeEnableCycle()});te.on(window,LQ,()=>{const n=$e.find(qQ);for(const e of n)zc.getOrCreateInstance(e)});kn(zc);const ZQ="collapse",JQ="bs.collapse",Uc=`.${JQ}`,eZ=".data-api",tZ=`show${Uc}`,nZ=`shown${Uc}`,sZ=`hide${Uc}`,rZ=`hidden${Uc}`,oZ=`click${Uc}${eZ}`,wf="show",So="collapse",dl="collapsing",aZ="collapsed",iZ=`:scope .${So} .${So}`,cZ="collapse-horizontal",lZ="width",uZ="height",dZ=".collapse.show, .collapse.collapsing",Ah='[data-bs-toggle="collapse"]',pZ={parent:null,toggle:!0},fZ={parent:"(null|element)",toggle:"boolean"};class fi extends Gn{constructor(e,t){super(e,t),this._isTransitioning=!1,this._triggerArray=[];const s=$e.find(Ah);for(const r of s){const o=$e.getSelectorFromElement(r),a=$e.find(o).filter(i=>i===this._element);o!==null&&a.length&&this._triggerArray.push(r)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return pZ}static get DefaultType(){return fZ}static get NAME(){return ZQ}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let e=[];if(this._config.parent&&(e=this._getFirstLevelChildren(dZ).filter(i=>i!==this._element).map(i=>fi.getOrCreateInstance(i,{toggle:!1}))),e.length&&e[0]._isTransitioning||te.trigger(this._element,tZ).defaultPrevented)return;for(const i of e)i.hide();const s=this._getDimension();this._element.classList.remove(So),this._element.classList.add(dl),this._element.style[s]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const r=()=>{this._isTransitioning=!1,this._element.classList.remove(dl),this._element.classList.add(So,wf),this._element.style[s]="",te.trigger(this._element,nZ)},a=`scroll${s[0].toUpperCase()+s.slice(1)}`;this._queueCallback(r,this._element,!0),this._element.style[s]=`${this._element[a]}px`}hide(){if(this._isTransitioning||!this._isShown()||te.trigger(this._element,sZ).defaultPrevented)return;const t=this._getDimension();this._element.style[t]=`${this._element.getBoundingClientRect()[t]}px`,Bc(this._element),this._element.classList.add(dl),this._element.classList.remove(So,wf);for(const r of this._triggerArray){const o=$e.getElementFromSelector(r);o&&!this._isShown(o)&&this._addAriaAndCollapsedClass([r],!1)}this._isTransitioning=!0;const s=()=>{this._isTransitioning=!1,this._element.classList.remove(dl),this._element.classList.add(So),te.trigger(this._element,rZ)};this._element.style[t]="",this._queueCallback(s,this._element,!0)}_isShown(e=this._element){return e.classList.contains(wf)}_configAfterMerge(e){return e.toggle=!!e.toggle,e.parent=rr(e.parent),e}_getDimension(){return this._element.classList.contains(cZ)?lZ:uZ}_initializeChildren(){if(!this._config.parent)return;const e=this._getFirstLevelChildren(Ah);for(const t of e){const s=$e.getElementFromSelector(t);s&&this._addAriaAndCollapsedClass([t],this._isShown(s))}}_getFirstLevelChildren(e){const t=$e.find(iZ,this._config.parent);return $e.find(e,this._config.parent).filter(s=>!t.includes(s))}_addAriaAndCollapsedClass(e,t){if(e.length)for(const s of e)s.classList.toggle(aZ,!t),s.setAttribute("aria-expanded",t)}static jQueryInterface(e){const t={};return typeof e=="string"&&/show|hide/.test(e)&&(t.toggle=!1),this.each(function(){const s=fi.getOrCreateInstance(this,t);if(typeof e=="string"){if(typeof s[e]>"u")throw new TypeError(`No method named "${e}"`);s[e]()}})}}te.on(document,oZ,Ah,function(n){(n.target.tagName==="A"||n.delegateTarget&&n.delegateTarget.tagName==="A")&&n.preventDefault();for(const e of $e.getMultipleElementsFromSelector(this))fi.getOrCreateInstance(e,{toggle:!1}).toggle()});kn(fi);const Mx="dropdown",hZ="bs.dropdown",ho=`.${hZ}`,Fy=".data-api",mZ="Escape",Bx="Tab",gZ="ArrowUp",Wx="ArrowDown",yZ=2,bZ=`hide${ho}`,xZ=`hidden${ho}`,wZ=`show${ho}`,vZ=`shown${ho}`,YT=`click${ho}${Fy}`,QT=`keydown${ho}${Fy}`,$Z=`keyup${ho}${Fy}`,Co="show",CZ="dropup",NZ="dropend",TZ="dropstart",SZ="dropup-center",EZ="dropdown-center",Dr='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',_Z=`${Dr}.${Co}`,Sl=".dropdown-menu",IZ=".navbar",kZ=".navbar-nav",AZ=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",RZ=Tn()?"top-end":"top-start",OZ=Tn()?"top-start":"top-end",DZ=Tn()?"bottom-end":"bottom-start",FZ=Tn()?"bottom-start":"bottom-end",PZ=Tn()?"left-start":"right-start",LZ=Tn()?"right-start":"left-start",VZ="top",MZ="bottom",BZ={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},WZ={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class ts extends Gn{constructor(e,t){super(e,t),this._popper=null,this._parent=this._element.parentNode,this._menu=$e.next(this._element,Sl)[0]||$e.prev(this._element,Sl)[0]||$e.findOne(Sl,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return BZ}static get DefaultType(){return WZ}static get NAME(){return Mx}toggle(){return this._isShown()?this.hide():this.show()}show(){if(or(this._element)||this._isShown())return;const e={relatedTarget:this._element};if(!te.trigger(this._element,wZ,e).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(kZ))for(const s of[].concat(...document.body.children))te.on(s,"mouseover",tu);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(Co),this._element.classList.add(Co),te.trigger(this._element,vZ,e)}}hide(){if(or(this._element)||!this._isShown())return;const e={relatedTarget:this._element};this._completeHide(e)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(e){if(!te.trigger(this._element,bZ,e).defaultPrevented){if("ontouchstart"in document.documentElement)for(const s of[].concat(...document.body.children))te.off(s,"mouseover",tu);this._popper&&this._popper.destroy(),this._menu.classList.remove(Co),this._element.classList.remove(Co),this._element.setAttribute("aria-expanded","false"),vs.removeDataAttribute(this._menu,"popper"),te.trigger(this._element,xZ,e)}}_getConfig(e){if(e=super._getConfig(e),typeof e.reference=="object"&&!ws(e.reference)&&typeof e.reference.getBoundingClientRect!="function")throw new TypeError(`${Mx.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return e}_createPopper(){if(typeof OT>"u")throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let e=this._element;this._config.reference==="parent"?e=this._parent:ws(this._config.reference)?e=rr(this._config.reference):typeof this._config.reference=="object"&&(e=this._config.reference);const t=this._getPopperConfig();this._popper=Ry(e,this._menu,t)}_isShown(){return this._menu.classList.contains(Co)}_getPlacement(){const e=this._parent;if(e.classList.contains(NZ))return PZ;if(e.classList.contains(TZ))return LZ;if(e.classList.contains(SZ))return VZ;if(e.classList.contains(EZ))return MZ;const t=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return e.classList.contains(CZ)?t?OZ:RZ:t?FZ:DZ}_detectNavbar(){return this._element.closest(IZ)!==null}_getOffset(){const{offset:e}=this._config;return typeof e=="string"?e.split(",").map(t=>Number.parseInt(t,10)):typeof e=="function"?t=>e(t,this._element):e}_getPopperConfig(){const e={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(vs.setDataAttribute(this._menu,"popper","static"),e.modifiers=[{name:"applyStyles",enabled:!1}]),{...e,...Jt(this._config.popperConfig,[e])}}_selectMenuItem({key:e,target:t}){const s=$e.find(AZ,this._menu).filter(r=>va(r));s.length&&Oy(s,t,e===Wx,!s.includes(t)).focus()}static jQueryInterface(e){return this.each(function(){const t=ts.getOrCreateInstance(this,e);if(typeof e=="string"){if(typeof t[e]>"u")throw new TypeError(`No method named "${e}"`);t[e]()}})}static clearMenus(e){if(e.button===yZ||e.type==="keyup"&&e.key!==Bx)return;const t=$e.find(_Z);for(const s of t){const r=ts.getInstance(s);if(!r||r._config.autoClose===!1)continue;const o=e.composedPath(),a=o.includes(r._menu);if(o.includes(r._element)||r._config.autoClose==="inside"&&!a||r._config.autoClose==="outside"&&a||r._menu.contains(e.target)&&(e.type==="keyup"&&e.key===Bx||/input|select|option|textarea|form/i.test(e.target.tagName)))continue;const i={relatedTarget:r._element};e.type==="click"&&(i.clickEvent=e),r._completeHide(i)}}static dataApiKeydownHandler(e){const t=/input|textarea/i.test(e.target.tagName),s=e.key===mZ,r=[gZ,Wx].includes(e.key);if(!r&&!s||t&&!s)return;e.preventDefault();const o=this.matches(Dr)?this:$e.prev(this,Dr)[0]||$e.next(this,Dr)[0]||$e.findOne(Dr,e.delegateTarget.parentNode),a=ts.getOrCreateInstance(o);if(r){e.stopPropagation(),a.show(),a._selectMenuItem(e);return}a._isShown()&&(e.stopPropagation(),a.hide(),o.focus())}}te.on(document,QT,Dr,ts.dataApiKeydownHandler);te.on(document,QT,Sl,ts.dataApiKeydownHandler);te.on(document,YT,ts.clearMenus);te.on(document,$Z,ts.clearMenus);te.on(document,YT,Dr,function(n){n.preventDefault(),ts.getOrCreateInstance(this).toggle()});kn(ts);const ZT="backdrop",zZ="fade",zx="show",Ux=`mousedown.bs.${ZT}`,UZ={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},GZ={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class JT extends Wc{constructor(e){super(),this._config=this._getConfig(e),this._isAppended=!1,this._element=null}static get Default(){return UZ}static get DefaultType(){return GZ}static get NAME(){return ZT}show(e){if(!this._config.isVisible){Jt(e);return}this._append();const t=this._getElement();this._config.isAnimated&&Bc(t),t.classList.add(zx),this._emulateAnimation(()=>{Jt(e)})}hide(e){if(!this._config.isVisible){Jt(e);return}this._getElement().classList.remove(zx),this._emulateAnimation(()=>{this.dispose(),Jt(e)})}dispose(){this._isAppended&&(te.off(this._element,Ux),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const e=document.createElement("div");e.className=this._config.className,this._config.isAnimated&&e.classList.add(zZ),this._element=e}return this._element}_configAfterMerge(e){return e.rootElement=rr(e.rootElement),e}_append(){if(this._isAppended)return;const e=this._getElement();this._config.rootElement.append(e),te.on(e,Ux,()=>{Jt(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(e){VT(e,this._getElement(),this._config.isAnimated)}}const HZ="focustrap",jZ="bs.focustrap",su=`.${jZ}`,KZ=`focusin${su}`,qZ=`keydown.tab${su}`,XZ="Tab",YZ="forward",Gx="backward",QZ={autofocus:!0,trapElement:null},ZZ={autofocus:"boolean",trapElement:"element"};class eS extends Wc{constructor(e){super(),this._config=this._getConfig(e),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return QZ}static get DefaultType(){return ZZ}static get NAME(){return HZ}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),te.off(document,su),te.on(document,KZ,e=>this._handleFocusin(e)),te.on(document,qZ,e=>this._handleKeydown(e)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,te.off(document,su))}_handleFocusin(e){const{trapElement:t}=this._config;if(e.target===document||e.target===t||t.contains(e.target))return;const s=$e.focusableChildren(t);s.length===0?t.focus():this._lastTabNavDirection===Gx?s[s.length-1].focus():s[0].focus()}_handleKeydown(e){e.key===XZ&&(this._lastTabNavDirection=e.shiftKey?Gx:YZ)}}const Hx=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",jx=".sticky-top",pl="padding-right",Kx="margin-right";class Rh{constructor(){this._element=document.body}getWidth(){const e=document.documentElement.clientWidth;return Math.abs(window.innerWidth-e)}hide(){const e=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,pl,t=>t+e),this._setElementAttributes(Hx,pl,t=>t+e),this._setElementAttributes(jx,Kx,t=>t-e)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,pl),this._resetElementAttributes(Hx,pl),this._resetElementAttributes(jx,Kx)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(e,t,s){const r=this.getWidth(),o=a=>{if(a!==this._element&&window.innerWidth>a.clientWidth+r)return;this._saveInitialAttribute(a,t);const i=window.getComputedStyle(a).getPropertyValue(t);a.style.setProperty(t,`${s(Number.parseFloat(i))}px`)};this._applyManipulationCallback(e,o)}_saveInitialAttribute(e,t){const s=e.style.getPropertyValue(t);s&&vs.setDataAttribute(e,t,s)}_resetElementAttributes(e,t){const s=r=>{const o=vs.getDataAttribute(r,t);if(o===null){r.style.removeProperty(t);return}vs.removeDataAttribute(r,t),r.style.setProperty(t,o)};this._applyManipulationCallback(e,s)}_applyManipulationCallback(e,t){if(ws(e)){t(e);return}for(const s of $e.find(e,this._element))t(s)}}const JZ="modal",eJ="bs.modal",Sn=`.${eJ}`,tJ=".data-api",nJ="Escape",sJ=`hide${Sn}`,rJ=`hidePrevented${Sn}`,tS=`hidden${Sn}`,nS=`show${Sn}`,oJ=`shown${Sn}`,aJ=`resize${Sn}`,iJ=`click.dismiss${Sn}`,cJ=`mousedown.dismiss${Sn}`,lJ=`keydown.dismiss${Sn}`,uJ=`click${Sn}${tJ}`,qx="modal-open",dJ="fade",Xx="show",vf="modal-static",pJ=".modal.show",fJ=".modal-dialog",hJ=".modal-body",mJ='[data-bs-toggle="modal"]',gJ={backdrop:!0,focus:!0,keyboard:!0},yJ={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class ra extends Gn{constructor(e,t){super(e,t),this._dialog=$e.findOne(fJ,this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Rh,this._addEventListeners()}static get Default(){return gJ}static get DefaultType(){return yJ}static get NAME(){return JZ}toggle(e){return this._isShown?this.hide():this.show(e)}show(e){this._isShown||this._isTransitioning||te.trigger(this._element,nS,{relatedTarget:e}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(qx),this._adjustDialog(),this._backdrop.show(()=>this._showElement(e)))}hide(){!this._isShown||this._isTransitioning||te.trigger(this._element,sJ).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(Xx),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated()))}dispose(){te.off(window,Sn),te.off(this._dialog,Sn),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new JT({isVisible:!!this._config.backdrop,isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new eS({trapElement:this._element})}_showElement(e){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const t=$e.findOne(hJ,this._dialog);t&&(t.scrollTop=0),Bc(this._element),this._element.classList.add(Xx);const s=()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,te.trigger(this._element,oJ,{relatedTarget:e})};this._queueCallback(s,this._dialog,this._isAnimated())}_addEventListeners(){te.on(this._element,lJ,e=>{if(e.key===nJ){if(this._config.keyboard){this.hide();return}this._triggerBackdropTransition()}}),te.on(window,aJ,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),te.on(this._element,cJ,e=>{te.one(this._element,iJ,t=>{if(!(this._element!==e.target||this._element!==t.target)){if(this._config.backdrop==="static"){this._triggerBackdropTransition();return}this._config.backdrop&&this.hide()}})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(qx),this._resetAdjustments(),this._scrollBar.reset(),te.trigger(this._element,tS)})}_isAnimated(){return this._element.classList.contains(dJ)}_triggerBackdropTransition(){if(te.trigger(this._element,rJ).defaultPrevented)return;const t=this._element.scrollHeight>document.documentElement.clientHeight,s=this._element.style.overflowY;s==="hidden"||this._element.classList.contains(vf)||(t||(this._element.style.overflowY="hidden"),this._element.classList.add(vf),this._queueCallback(()=>{this._element.classList.remove(vf),this._queueCallback(()=>{this._element.style.overflowY=s},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const e=this._element.scrollHeight>document.documentElement.clientHeight,t=this._scrollBar.getWidth(),s=t>0;if(s&&!e){const r=Tn()?"paddingLeft":"paddingRight";this._element.style[r]=`${t}px`}if(!s&&e){const r=Tn()?"paddingRight":"paddingLeft";this._element.style[r]=`${t}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(e,t){return this.each(function(){const s=ra.getOrCreateInstance(this,e);if(typeof e=="string"){if(typeof s[e]>"u")throw new TypeError(`No method named "${e}"`);s[e](t)}})}}te.on(document,uJ,mJ,function(n){const e=$e.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&n.preventDefault(),te.one(e,nS,r=>{r.defaultPrevented||te.one(e,tS,()=>{va(this)&&this.focus()})});const t=$e.findOne(pJ);t&&ra.getInstance(t).hide(),ra.getOrCreateInstance(e).toggle(this)});Mp(ra);kn(ra);const bJ="offcanvas",xJ="bs.offcanvas",Ds=`.${xJ}`,sS=".data-api",wJ=`load${Ds}${sS}`,vJ="Escape",Yx="show",Qx="showing",Zx="hiding",$J="offcanvas-backdrop",rS=".offcanvas.show",CJ=`show${Ds}`,NJ=`shown${Ds}`,TJ=`hide${Ds}`,Jx=`hidePrevented${Ds}`,oS=`hidden${Ds}`,SJ=`resize${Ds}`,EJ=`click${Ds}${sS}`,_J=`keydown.dismiss${Ds}`,IJ='[data-bs-toggle="offcanvas"]',kJ={backdrop:!0,keyboard:!0,scroll:!1},AJ={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class ar extends Gn{constructor(e,t){super(e,t),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return kJ}static get DefaultType(){return AJ}static get NAME(){return bJ}toggle(e){return this._isShown?this.hide():this.show(e)}show(e){if(this._isShown||te.trigger(this._element,CJ,{relatedTarget:e}).defaultPrevented)return;this._isShown=!0,this._backdrop.show(),this._config.scroll||new Rh().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Qx);const s=()=>{(!this._config.scroll||this._config.backdrop)&&this._focustrap.activate(),this._element.classList.add(Yx),this._element.classList.remove(Qx),te.trigger(this._element,NJ,{relatedTarget:e})};this._queueCallback(s,this._element,!0)}hide(){if(!this._isShown||te.trigger(this._element,TJ).defaultPrevented)return;this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(Zx),this._backdrop.hide();const t=()=>{this._element.classList.remove(Yx,Zx),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new Rh().reset(),te.trigger(this._element,oS)};this._queueCallback(t,this._element,!0)}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const e=()=>{if(this._config.backdrop==="static"){te.trigger(this._element,Jx);return}this.hide()},t=!!this._config.backdrop;return new JT({className:$J,isVisible:t,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:t?e:null})}_initializeFocusTrap(){return new eS({trapElement:this._element})}_addEventListeners(){te.on(this._element,_J,e=>{if(e.key===vJ){if(this._config.keyboard){this.hide();return}te.trigger(this._element,Jx)}})}static jQueryInterface(e){return this.each(function(){const t=ar.getOrCreateInstance(this,e);if(typeof e=="string"){if(t[e]===void 0||e.startsWith("_")||e==="constructor")throw new TypeError(`No method named "${e}"`);t[e](this)}})}}te.on(document,EJ,IJ,function(n){const e=$e.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&n.preventDefault(),or(this))return;te.one(e,oS,()=>{va(this)&&this.focus()});const t=$e.findOne(rS);t&&t!==e&&ar.getInstance(t).hide(),ar.getOrCreateInstance(e).toggle(this)});te.on(window,wJ,()=>{for(const n of $e.find(rS))ar.getOrCreateInstance(n).show()});te.on(window,SJ,()=>{for(const n of $e.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(n).position!=="fixed"&&ar.getOrCreateInstance(n).hide()});Mp(ar);kn(ar);const RJ=/^aria-[\w-]*$/i,aS={"*":["class","dir","id","lang","role",RJ],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},OJ=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),DJ=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,FJ=(n,e)=>{const t=n.nodeName.toLowerCase();return e.includes(t)?OJ.has(t)?!!DJ.test(n.nodeValue):!0:e.filter(s=>s instanceof RegExp).some(s=>s.test(t))};function PJ(n,e,t){if(!n.length)return n;if(t&&typeof t=="function")return t(n);const r=new window.DOMParser().parseFromString(n,"text/html"),o=[].concat(...r.body.querySelectorAll("*"));for(const a of o){const i=a.nodeName.toLowerCase();if(!Object.keys(e).includes(i)){a.remove();continue}const c=[].concat(...a.attributes),l=[].concat(e["*"]||[],e[i]||[]);for(const u of c)FJ(u,l)||a.removeAttribute(u.nodeName)}return r.body.innerHTML}const LJ="TemplateFactory",VJ={allowList:aS,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},MJ={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},BJ={entry:"(string|element|function|null)",selector:"(string|element)"};class WJ extends Wc{constructor(e){super(),this._config=this._getConfig(e)}static get Default(){return VJ}static get DefaultType(){return MJ}static get NAME(){return LJ}getContent(){return Object.values(this._config.content).map(e=>this._resolvePossibleFunction(e)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(e){return this._checkContent(e),this._config.content={...this._config.content,...e},this}toHtml(){const e=document.createElement("div");e.innerHTML=this._maybeSanitize(this._config.template);for(const[r,o]of Object.entries(this._config.content))this._setContent(e,o,r);const t=e.children[0],s=this._resolvePossibleFunction(this._config.extraClass);return s&&t.classList.add(...s.split(" ")),t}_typeCheckConfig(e){super._typeCheckConfig(e),this._checkContent(e.content)}_checkContent(e){for(const[t,s]of Object.entries(e))super._typeCheckConfig({selector:t,entry:s},BJ)}_setContent(e,t,s){const r=$e.findOne(s,e);if(r){if(t=this._resolvePossibleFunction(t),!t){r.remove();return}if(ws(t)){this._putElementInTemplate(rr(t),r);return}if(this._config.html){r.innerHTML=this._maybeSanitize(t);return}r.textContent=t}}_maybeSanitize(e){return this._config.sanitize?PJ(e,this._config.allowList,this._config.sanitizeFn):e}_resolvePossibleFunction(e){return Jt(e,[this])}_putElementInTemplate(e,t){if(this._config.html){t.innerHTML="",t.append(e);return}t.textContent=e.textContent}}const zJ="tooltip",UJ=new Set(["sanitize","allowList","sanitizeFn"]),$f="fade",GJ="modal",fl="show",HJ=".tooltip-inner",e0=`.${GJ}`,t0="hide.bs.modal",Ia="hover",Cf="focus",jJ="click",KJ="manual",qJ="hide",XJ="hidden",YJ="show",QJ="shown",ZJ="inserted",JJ="click",eee="focusin",tee="focusout",nee="mouseenter",see="mouseleave",ree={AUTO:"auto",TOP:"top",RIGHT:Tn()?"left":"right",BOTTOM:"bottom",LEFT:Tn()?"right":"left"},oee={allowList:aS,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},aee={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class Ca extends Gn{constructor(e,t){if(typeof OT>"u")throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(e,t),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return oee}static get DefaultType(){return aee}static get NAME(){return zJ}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){if(this._isEnabled){if(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()){this._leave();return}this._enter()}}dispose(){clearTimeout(this._timeout),te.off(this._element.closest(e0),t0,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!(this._isWithContent()&&this._isEnabled))return;const e=te.trigger(this._element,this.constructor.eventName(YJ)),s=(PT(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(e.defaultPrevented||!s)return;this._disposePopper();const r=this._getTipElement();this._element.setAttribute("aria-describedby",r.getAttribute("id"));const{container:o}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(o.append(r),te.trigger(this._element,this.constructor.eventName(ZJ))),this._popper=this._createPopper(r),r.classList.add(fl),"ontouchstart"in document.documentElement)for(const i of[].concat(...document.body.children))te.on(i,"mouseover",tu);const a=()=>{te.trigger(this._element,this.constructor.eventName(QJ)),this._isHovered===!1&&this._leave(),this._isHovered=!1};this._queueCallback(a,this.tip,this._isAnimated())}hide(){if(!this._isShown()||te.trigger(this._element,this.constructor.eventName(qJ)).defaultPrevented)return;if(this._getTipElement().classList.remove(fl),"ontouchstart"in document.documentElement)for(const r of[].concat(...document.body.children))te.off(r,"mouseover",tu);this._activeTrigger[jJ]=!1,this._activeTrigger[Cf]=!1,this._activeTrigger[Ia]=!1,this._isHovered=null;const s=()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),te.trigger(this._element,this.constructor.eventName(XJ)))};this._queueCallback(s,this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return!!this._getTitle()}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(e){const t=this._getTemplateFactory(e).toHtml();if(!t)return null;t.classList.remove($f,fl),t.classList.add(`bs-${this.constructor.NAME}-auto`);const s=j9(this.constructor.NAME).toString();return t.setAttribute("id",s),this._isAnimated()&&t.classList.add($f),t}setContent(e){this._newContent=e,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(e){return this._templateFactory?this._templateFactory.changeContent(e):this._templateFactory=new WJ({...this._config,content:e,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{[HJ]:this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(e){return this.constructor.getOrCreateInstance(e.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains($f)}_isShown(){return this.tip&&this.tip.classList.contains(fl)}_createPopper(e){const t=Jt(this._config.placement,[this,e,this._element]),s=ree[t.toUpperCase()];return Ry(this._element,e,this._getPopperConfig(s))}_getOffset(){const{offset:e}=this._config;return typeof e=="string"?e.split(",").map(t=>Number.parseInt(t,10)):typeof e=="function"?t=>e(t,this._element):e}_resolvePossibleFunction(e){return Jt(e,[this._element])}_getPopperConfig(e){const t={placement:e,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:s=>{this._getTipElement().setAttribute("data-popper-placement",s.state.placement)}}]};return{...t,...Jt(this._config.popperConfig,[t])}}_setListeners(){const e=this._config.trigger.split(" ");for(const t of e)if(t==="click")te.on(this._element,this.constructor.eventName(JJ),this._config.selector,s=>{this._initializeOnDelegatedTarget(s).toggle()});else if(t!==KJ){const s=t===Ia?this.constructor.eventName(nee):this.constructor.eventName(eee),r=t===Ia?this.constructor.eventName(see):this.constructor.eventName(tee);te.on(this._element,s,this._config.selector,o=>{const a=this._initializeOnDelegatedTarget(o);a._activeTrigger[o.type==="focusin"?Cf:Ia]=!0,a._enter()}),te.on(this._element,r,this._config.selector,o=>{const a=this._initializeOnDelegatedTarget(o);a._activeTrigger[o.type==="focusout"?Cf:Ia]=a._element.contains(o.relatedTarget),a._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},te.on(this._element.closest(e0),t0,this._hideModalHandler)}_fixTitle(){const e=this._element.getAttribute("title");e&&(!this._element.getAttribute("aria-label")&&!this._element.textContent.trim()&&this._element.setAttribute("aria-label",e),this._element.setAttribute("data-bs-original-title",e),this._element.removeAttribute("title"))}_enter(){if(this._isShown()||this._isHovered){this._isHovered=!0;return}this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show)}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(e,t){clearTimeout(this._timeout),this._timeout=setTimeout(e,t)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(e){const t=vs.getDataAttributes(this._element);for(const s of Object.keys(t))UJ.has(s)&&delete t[s];return e={...t,...typeof e=="object"&&e?e:{}},e=this._mergeConfigObj(e),e=this._configAfterMerge(e),this._typeCheckConfig(e),e}_configAfterMerge(e){return e.container=e.container===!1?document.body:rr(e.container),typeof e.delay=="number"&&(e.delay={show:e.delay,hide:e.delay}),typeof e.title=="number"&&(e.title=e.title.toString()),typeof e.content=="number"&&(e.content=e.content.toString()),e}_getDelegateConfig(){const e={};for(const[t,s]of Object.entries(this._config))this.constructor.Default[t]!==s&&(e[t]=s);return e.selector=!1,e.trigger="manual",e}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(e){return this.each(function(){const t=Ca.getOrCreateInstance(this,e);if(typeof e=="string"){if(typeof t[e]>"u")throw new TypeError(`No method named "${e}"`);t[e]()}})}}kn(Ca);const iee="popover",cee=".popover-header",lee=".popover-body",uee={...Ca.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},dee={...Ca.DefaultType,content:"(null|string|element|function)"};class Py extends Ca{static get Default(){return uee}static get DefaultType(){return dee}static get NAME(){return iee}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{[cee]:this._getTitle(),[lee]:this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(e){return this.each(function(){const t=Py.getOrCreateInstance(this,e);if(typeof e=="string"){if(typeof t[e]>"u")throw new TypeError(`No method named "${e}"`);t[e]()}})}}kn(Py);const pee="scrollspy",fee="bs.scrollspy",Ly=`.${fee}`,hee=".data-api",mee=`activate${Ly}`,n0=`click${Ly}`,gee=`load${Ly}${hee}`,yee="dropdown-item",bo="active",bee='[data-bs-spy="scroll"]',Nf="[href]",xee=".nav, .list-group",s0=".nav-link",wee=".nav-item",vee=".list-group-item",$ee=`${s0}, ${wee} > ${s0}, ${vee}`,Cee=".dropdown",Nee=".dropdown-toggle",Tee={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},See={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class zp extends Gn{constructor(e,t){super(e,t),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Tee}static get DefaultType(){return See}static get NAME(){return pee}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const e of this._observableSections.values())this._observer.observe(e)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(e){return e.target=rr(e.target)||document.body,e.rootMargin=e.offset?`${e.offset}px 0px -30%`:e.rootMargin,typeof e.threshold=="string"&&(e.threshold=e.threshold.split(",").map(t=>Number.parseFloat(t))),e}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(te.off(this._config.target,n0),te.on(this._config.target,n0,Nf,e=>{const t=this._observableSections.get(e.target.hash);if(t){e.preventDefault();const s=this._rootElement||window,r=t.offsetTop-this._element.offsetTop;if(s.scrollTo){s.scrollTo({top:r,behavior:"smooth"});return}s.scrollTop=r}}))}_getNewObserver(){const e={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(t=>this._observerCallback(t),e)}_observerCallback(e){const t=a=>this._targetLinks.get(`#${a.target.id}`),s=a=>{this._previousScrollData.visibleEntryTop=a.target.offsetTop,this._process(t(a))},r=(this._rootElement||document.documentElement).scrollTop,o=r>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=r;for(const a of e){if(!a.isIntersecting){this._activeTarget=null,this._clearActiveClass(t(a));continue}const i=a.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(o&&i){if(s(a),!r)return;continue}!o&&!i&&s(a)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const e=$e.find(Nf,this._config.target);for(const t of e){if(!t.hash||or(t))continue;const s=$e.findOne(decodeURI(t.hash),this._element);va(s)&&(this._targetLinks.set(decodeURI(t.hash),t),this._observableSections.set(t.hash,s))}}_process(e){this._activeTarget!==e&&(this._clearActiveClass(this._config.target),this._activeTarget=e,e.classList.add(bo),this._activateParents(e),te.trigger(this._element,mee,{relatedTarget:e}))}_activateParents(e){if(e.classList.contains(yee)){$e.findOne(Nee,e.closest(Cee)).classList.add(bo);return}for(const t of $e.parents(e,xee))for(const s of $e.prev(t,$ee))s.classList.add(bo)}_clearActiveClass(e){e.classList.remove(bo);const t=$e.find(`${Nf}.${bo}`,e);for(const s of t)s.classList.remove(bo)}static jQueryInterface(e){return this.each(function(){const t=zp.getOrCreateInstance(this,e);if(typeof e=="string"){if(t[e]===void 0||e.startsWith("_")||e==="constructor")throw new TypeError(`No method named "${e}"`);t[e]()}})}}te.on(window,gee,()=>{for(const n of $e.find(bee))zp.getOrCreateInstance(n)});kn(zp);const Eee="tab",_ee="bs.tab",mo=`.${_ee}`,Iee=`hide${mo}`,kee=`hidden${mo}`,Aee=`show${mo}`,Ree=`shown${mo}`,Oee=`click${mo}`,Dee=`keydown${mo}`,Fee=`load${mo}`,Pee="ArrowLeft",r0="ArrowRight",Lee="ArrowUp",o0="ArrowDown",Tf="Home",a0="End",Fr="active",i0="fade",Sf="show",Vee="dropdown",iS=".dropdown-toggle",Mee=".dropdown-menu",Ef=`:not(${iS})`,Bee='.list-group, .nav, [role="tablist"]',Wee=".nav-item, .list-group-item",zee=`.nav-link${Ef}, .list-group-item${Ef}, [role="tab"]${Ef}`,cS='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',_f=`${zee}, ${cS}`,Uee=`.${Fr}[data-bs-toggle="tab"], .${Fr}[data-bs-toggle="pill"], .${Fr}[data-bs-toggle="list"]`;class oa extends Gn{constructor(e){super(e),this._parent=this._element.closest(Bee),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),te.on(this._element,Dee,t=>this._keydown(t)))}static get NAME(){return Eee}show(){const e=this._element;if(this._elemIsActive(e))return;const t=this._getActiveElem(),s=t?te.trigger(t,Iee,{relatedTarget:e}):null;te.trigger(e,Aee,{relatedTarget:t}).defaultPrevented||s&&s.defaultPrevented||(this._deactivate(t,e),this._activate(e,t))}_activate(e,t){if(!e)return;e.classList.add(Fr),this._activate($e.getElementFromSelector(e));const s=()=>{if(e.getAttribute("role")!=="tab"){e.classList.add(Sf);return}e.removeAttribute("tabindex"),e.setAttribute("aria-selected",!0),this._toggleDropDown(e,!0),te.trigger(e,Ree,{relatedTarget:t})};this._queueCallback(s,e,e.classList.contains(i0))}_deactivate(e,t){if(!e)return;e.classList.remove(Fr),e.blur(),this._deactivate($e.getElementFromSelector(e));const s=()=>{if(e.getAttribute("role")!=="tab"){e.classList.remove(Sf);return}e.setAttribute("aria-selected",!1),e.setAttribute("tabindex","-1"),this._toggleDropDown(e,!1),te.trigger(e,kee,{relatedTarget:t})};this._queueCallback(s,e,e.classList.contains(i0))}_keydown(e){if(![Pee,r0,Lee,o0,Tf,a0].includes(e.key))return;e.stopPropagation(),e.preventDefault();const t=this._getChildren().filter(r=>!or(r));let s;if([Tf,a0].includes(e.key))s=t[e.key===Tf?0:t.length-1];else{const r=[r0,o0].includes(e.key);s=Oy(t,e.target,r,!0)}s&&(s.focus({preventScroll:!0}),oa.getOrCreateInstance(s).show())}_getChildren(){return $e.find(_f,this._parent)}_getActiveElem(){return this._getChildren().find(e=>this._elemIsActive(e))||null}_setInitialAttributes(e,t){this._setAttributeIfNotExists(e,"role","tablist");for(const s of t)this._setInitialAttributesOnChild(s)}_setInitialAttributesOnChild(e){e=this._getInnerElement(e);const t=this._elemIsActive(e),s=this._getOuterElement(e);e.setAttribute("aria-selected",t),s!==e&&this._setAttributeIfNotExists(s,"role","presentation"),t||e.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(e,"role","tab"),this._setInitialAttributesOnTargetPanel(e)}_setInitialAttributesOnTargetPanel(e){const t=$e.getElementFromSelector(e);t&&(this._setAttributeIfNotExists(t,"role","tabpanel"),e.id&&this._setAttributeIfNotExists(t,"aria-labelledby",`${e.id}`))}_toggleDropDown(e,t){const s=this._getOuterElement(e);if(!s.classList.contains(Vee))return;const r=(o,a)=>{const i=$e.findOne(o,s);i&&i.classList.toggle(a,t)};r(iS,Fr),r(Mee,Sf),s.setAttribute("aria-expanded",t)}_setAttributeIfNotExists(e,t,s){e.hasAttribute(t)||e.setAttribute(t,s)}_elemIsActive(e){return e.classList.contains(Fr)}_getInnerElement(e){return e.matches(_f)?e:$e.findOne(_f,e)}_getOuterElement(e){return e.closest(Wee)||e}static jQueryInterface(e){return this.each(function(){const t=oa.getOrCreateInstance(this);if(typeof e=="string"){if(t[e]===void 0||e.startsWith("_")||e==="constructor")throw new TypeError(`No method named "${e}"`);t[e]()}})}}te.on(document,Oee,cS,function(n){["A","AREA"].includes(this.tagName)&&n.preventDefault(),!or(this)&&oa.getOrCreateInstance(this).show()});te.on(window,Fee,()=>{for(const n of $e.find(Uee))oa.getOrCreateInstance(n)});kn(oa);const Gee="toast",Hee="bs.toast",br=`.${Hee}`,jee=`mouseover${br}`,Kee=`mouseout${br}`,qee=`focusin${br}`,Xee=`focusout${br}`,Yee=`hide${br}`,Qee=`hidden${br}`,Zee=`show${br}`,Jee=`shown${br}`,ete="fade",c0="hide",hl="show",ml="showing",tte={animation:"boolean",autohide:"boolean",delay:"number"},nte={animation:!0,autohide:!0,delay:5e3};class Up extends Gn{constructor(e,t){super(e,t),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return nte}static get DefaultType(){return tte}static get NAME(){return Gee}show(){if(te.trigger(this._element,Zee).defaultPrevented)return;this._clearTimeout(),this._config.animation&&this._element.classList.add(ete);const t=()=>{this._element.classList.remove(ml),te.trigger(this._element,Jee),this._maybeScheduleHide()};this._element.classList.remove(c0),Bc(this._element),this._element.classList.add(hl,ml),this._queueCallback(t,this._element,this._config.animation)}hide(){if(!this.isShown()||te.trigger(this._element,Yee).defaultPrevented)return;const t=()=>{this._element.classList.add(c0),this._element.classList.remove(ml,hl),te.trigger(this._element,Qee)};this._element.classList.add(ml),this._queueCallback(t,this._element,this._config.animation)}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(hl),super.dispose()}isShown(){return this._element.classList.contains(hl)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(e,t){switch(e.type){case"mouseover":case"mouseout":{this._hasMouseInteraction=t;break}case"focusin":case"focusout":{this._hasKeyboardInteraction=t;break}}if(t){this._clearTimeout();return}const s=e.relatedTarget;this._element===s||this._element.contains(s)||this._maybeScheduleHide()}_setListeners(){te.on(this._element,jee,e=>this._onInteraction(e,!0)),te.on(this._element,Kee,e=>this._onInteraction(e,!1)),te.on(this._element,qee,e=>this._onInteraction(e,!0)),te.on(this._element,Xee,e=>this._onInteraction(e,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(e){return this.each(function(){const t=Up.getOrCreateInstance(this,e);if(typeof e=="string"){if(typeof t[e]>"u")throw new TypeError(`No method named "${e}"`);t[e](this)}})}}Mp(Up);kn(Up);O_(n9).mount("#app");
